prompt ,completion
"SCHEMA:
TABLE pos_order(id, date_order)
TABLE pos_order_line(id, order_id, product_id, qty)
TABLE product_product(id, product_tmpl_id)
TABLE product_template(id, name)

Prompt: You are an expert SQL developer.

Convert the following natural language request into a single SQL SELECT query.
Use only the schema provided below and do not make assumptions beyond it.

only take table and field from given scheme no other is allowed

Natural Language Request:
Show me the top-selling products in the last 30 days.

Database Schema:
CREATE TABLE pos_order (
    id INT PRIMARY KEY,
    user_id INTEGER,
    company_id INTEGER,
    pricelist_id INTEGER,
    partner_id INTEGER,
    sequence_number INTEGER,
    session_id INTEGER,
    config_id INTEGER,
    account_move INTEGER,
    procurement_group_id INTEGER,
    nb_print INTEGER,
    sale_journal INTEGER,
    fiscal_position_id INTEGER,
    name VARCHAR(100),
    last_order_preparation_change VARCHAR(100),
    state VARCHAR(100),
    pos_reference VARCHAR(100),
    ticket_code VARCHAR(100),
    shipping_date DATE,
    note VARCHAR(500),
    amount_tax DECIMAL(18, 4),
    amount_total DECIMAL(18, 4),
    amount_paid DECIMAL(18, 4),
    amount_return DECIMAL(18, 4),
    currency_rate DECIMAL(18, 4),
    tip_amount DECIMAL(18, 4),
    to_invoice BOOLEAN,
    is_tipped BOOLEAN,
    date_order TIMESTAMP,
    employee_id INTEGER,
    cashier VARCHAR(100),
    next_online_payment_amount DECIMAL(18, 4),
    crm_team_id INTEGER,
    debit_note_id INTEGER,
    invoice_id_for_debit INTEGER,
    reset_sequence INTEGER,
    my_invoice_status TEXT,
    invoice_type VARCHAR(100),
    reference_inv_id VARCHAR(500),
    response_msg VARCHAR(500),
    invalid_msg VARCHAR(500),
    is_submit_document BOOLEAN,
    is_debit_note BOOLEAN,
    is_credit_note BOOLEAN,
    is_consolidate BOOLEAN,
    validation_date_time TIMESTAMP,
    credit_check BOOLEAN,
    is_submit_in_pos BOOLEAN,
    is_hide_payment_debit BOOLEAN,
    is_hide_payment_credit BOOLEAN,
    formatted_date_order VARCHAR(100),
    is_hide_reverse_consolidation BOOLEAN,
    main_order_id INTEGER,
    main_order_pos_reference VARCHAR(100)
);

CREATE TABLE pos_order_line (
    id INT PRIMARY KEY,
    company_id INTEGER,
    product_id INTEGER,
    order_id INTEGER,
    refunded_orderline_id INTEGER,
    combo_parent_id INTEGER,
    name VARCHAR(100),
    notice VARCHAR(100),
    full_product_name VARCHAR(100),
    customer_note VARCHAR(100),
    price_unit DECIMAL(18, 4),
    qty DECIMAL(18, 4),
    price_subtotal DECIMAL(18, 4),
    price_subtotal_incl DECIMAL(18, 4),
    total_cost DECIMAL(18, 4),
    discount DECIMAL(18, 4),
    skip_change BOOLEAN,
    is_total_cost_computed BOOLEAN,
    price_extra FLOAT,
    sale_order_origin_id INTEGER,
    sale_order_line_id INTEGER,
    down_payment_details VARCHAR(500),
    discount_amount FLOAT,
    credit_note_discount FLOAT
);

CREATE TABLE product_product (
    id INT PRIMARY KEY,
    product_tmpl_id INTEGER,
    default_code VARCHAR(100),
    barcode VARCHAR(100),
    combination_indices VARCHAR(100),
    volume DECIMAL(18, 4),
    weight DECIMAL(18, 4),
    can_image_variant_1024_be_zoomed BOOLEAN,
    lot_properties_definition TEXT,
    classification_code_id INTEGER
);

CREATE TABLE product_template (
    id INT PRIMARY KEY,
    categ_id INTEGER,
    uom_id INTEGER,
    uom_po_id INTEGER,
    company_id INTEGER,
    detailed_type VARCHAR(100),
    type VARCHAR(100),
    default_code VARCHAR(100),
    priority VARCHAR(100),
    name VARCHAR(100),
    description VARCHAR(500),
    description_purchase TEXT,
    description_sale TEXT,
    product_properties TEXT,
    list_price DECIMAL(18, 4),
    volume DECIMAL(18, 4),
    weight DECIMAL(18, 4),
    sale_ok BOOLEAN,
    purchase_ok BOOLEAN,
    can_image_1024_be_zoomed BOOLEAN,
    has_configurable_attributes BOOLEAN,
    sale_delay INTEGER,
    tracking VARCHAR(100),
    description_picking TEXT,
    description_pickingout TEXT,
    description_pickingin TEXT,
    service_type VARCHAR(100),
    sale_line_warn VARCHAR(100),
    expense_policy VARCHAR(100),
    invoice_policy VARCHAR(100),
    sale_line_warn_msg VARCHAR(500),
    purchase_method VARCHAR(100),
    purchase_line_warn VARCHAR(100),
    purchase_line_warn_msg VARCHAR(500),
    available_in_pos BOOLEAN,
    to_weight BOOLEAN,
    classification_code_id INTEGER,
    unit_measurement_code_id INTEGER,
    service_tracking VARCHAR(100),
    product_classification VARCHAR(100),
    split_method_landed_cost VARCHAR(100),
    landed_cost_ok BOOLEAN,
    is_data_product BOOLEAN,
    alert_min_qty FLOAT
);

CREATE TABLE res_partner (
    id INT PRIMARY KEY,
    company_id INTEGER,
    name VARCHAR(100),
    title INTEGER,
    parent_id INTEGER,
    user_id INTEGER,
    state_id INTEGER,
    country_id INTEGER,
    industry_id INTEGER,
    commercial_partner_id INTEGER,
    complete_name VARCHAR(100),
    ref VARCHAR(100),
    lang VARCHAR(100),
    tz VARCHAR(100),
    vat VARCHAR(100),
    company_registry VARCHAR(100),
    website VARCHAR(100),
    function VARCHAR(100),
    type VARCHAR(100),
    street VARCHAR(100),
    street2 VARCHAR(100),
    zip VARCHAR(100),
    city VARCHAR(100),
    email VARCHAR(100),
    phone VARCHAR(100),
    mobile VARCHAR(100),
    commercial_company_name VARCHAR(100),
    company_name VARCHAR(100),
    date DATE,
    comment VARCHAR(500),
    partner_latitude DECIMAL(18, 4),
    partner_longitude DECIMAL(18, 4),
    employee BOOLEAN,
    is_company BOOLEAN,
    partner_share BOOLEAN,
    message_bounce INTEGER,
    email_normalized VARCHAR(100),
    signup_type VARCHAR(100),
    signup_expiration TIMESTAMP,
    signup_token VARCHAR(100),
    team_id INTEGER,
    phone_sanitized VARCHAR(100),
    supplier_rank INTEGER,
    customer_rank INTEGER,
    invoice_warn VARCHAR(100),
    invoice_warn_msg VARCHAR(500),
    debit_limit DECIMAL(18, 4),
    last_time_entries_checked TIMESTAMP,
    picking_warn VARCHAR(100),
    picking_warn_msg VARCHAR(500),
    ubl_cii_format VARCHAR(100),
    peppol_endpoint VARCHAR(100),
    peppol_eas VARCHAR(100),
    sale_warn VARCHAR(100),
    sale_warn_msg VARCHAR(500),
    payment_responsible_id INTEGER,
    latest_followup_sequence INTEGER,
    payment_next_action_date DATE,
    payment_note VARCHAR(500),
    payment_next_action VARCHAR(500),
    website_id INTEGER,
    is_published BOOLEAN,
    buyer_id INTEGER,
    purchase_warn VARCHAR(100),
    purchase_warn_msg VARCHAR(500),
    city_id INTEGER,
    post_code_id INTEGER,
    nric VARCHAR(100),
    state VARCHAR(100),
    id_type VARCHAR(100),
    malay_and_no_malay VARCHAR(100),
    sst VARCHAR(100),
    msic_code VARCHAR(100),
    ttx VARCHAR(100),
    b_act_des_bn VARCHAR(100),
    b_act_des_en VARCHAR(100),
    street_3 VARCHAR(100),
    error_message VARCHAR(500),
    is_malaysia BOOLEAN,
    is_non_malaysian BOOLEAN,
    is_government BOOLEAN,
    is_portal_data_submit BOOLEAN,
    is_supplier BOOLEAN,
    qr_generated_timestamp TIMESTAMP,
    personal_tin VARCHAR(100),
    company_tin VARCHAR(100),
    business_reg_number VARCHAR(100),
    custom_credit DECIMAL(18, 4),
    is_general_partner BOOLEAN,
    internal_notes VARCHAR(500),
    nric_label VARCHAR(100),
    msic_code_id INTEGER,
    self_bill_for_supplier BOOLEAN
);

CREATE TABLE res_users (
    id INT PRIMARY KEY,
    company_id INTEGER,
    partner_id INTEGER,
    login VARCHAR(100),
    password VARCHAR(100),
    action_id INTEGER,
    signature VARCHAR(500),
    share BOOLEAN,
    totp_secret VARCHAR(100),
    notification_type VARCHAR(100),
    odoobot_state VARCHAR(100),
    odoobot_failed BOOLEAN,
    sale_team_id INTEGER,
    is_apping_user BOOLEAN,
    is_login_with_any_user BOOLEAN,
    user_group_id INTEGER,
    user_types VARCHAR(100),
    is_lhdn_admin BOOLEAN,
    mail_alert BOOLEAN,
    login_access INTEGER,
    locked_until TIMESTAMP,
    oauth_provider_id INTEGER,
    oauth_uid VARCHAR(100),
    oauth_access_token VARCHAR(100),
    website_id INTEGER,
    passcode VARCHAR(100),
    is_reg_tc BOOLEAN,
    is_user_tc BOOLEAN,
    is_company_owner BOOLEAN,
    sidebar_type VARCHAR(100)
);

Return only the SQL query without explanation.
SELECT pt.name, SUM(pol.qty) AS total_sold
FROM pos_order_line pol
JOIN pos_order po ON pol.order_id = po.id
JOIN product_product pp ON pol.product_id = pp.id
JOIN product_template pt ON pp.product_tmpl_id = pt.id
WHERE po.date_order >= CURRENT_DATE - INTERVAL '30 days'
GROUP BY pt.name
ORDER BY total_sold DESC
LIMIT 10;",
"SCHEMA:
TABLE pos_order(id, date_order)
TABLE pos_order_line(id, order_id, product_id, qty)
TABLE product_product(id, product_tmpl_id)
TABLE product_template(id, name)

Prompt: You are an expert SQL developer.

Convert the following natural language request into a single SQL SELECT query.
Use only the schema provided below and do not make assumptions beyond it.

only take table and field from given scheme no other is allowed

Natural Language Request:
What was the total sales revenue generated last week?

Database Schema:
CREATE TABLE pos_order (
    id INT PRIMARY KEY,
    user_id INTEGER,
    company_id INTEGER,
    pricelist_id INTEGER,
    partner_id INTEGER,
    sequence_number INTEGER,
    session_id INTEGER,
    config_id INTEGER,
    account_move INTEGER,
    procurement_group_id INTEGER,
    nb_print INTEGER,
    sale_journal INTEGER,
    fiscal_position_id INTEGER,
    name VARCHAR(100),
    last_order_preparation_change VARCHAR(100),
    state VARCHAR(100),
    pos_reference VARCHAR(100),
    ticket_code VARCHAR(100),
    shipping_date DATE,
    note VARCHAR(500),
    amount_tax DECIMAL(18, 4),
    amount_total DECIMAL(18, 4),
    amount_paid DECIMAL(18, 4),
    amount_return DECIMAL(18, 4),
    currency_rate DECIMAL(18, 4),
    tip_amount DECIMAL(18, 4),
    to_invoice BOOLEAN,
    is_tipped BOOLEAN,
    date_order TIMESTAMP,
    employee_id INTEGER,
    cashier VARCHAR(100),
    next_online_payment_amount DECIMAL(18, 4),
    crm_team_id INTEGER,
    debit_note_id INTEGER,
    invoice_id_for_debit INTEGER,
    reset_sequence INTEGER,
    my_invoice_status TEXT,
    invoice_type VARCHAR(100),
    reference_inv_id VARCHAR(500),
    response_msg VARCHAR(500),
    invalid_msg VARCHAR(500),
    is_submit_document BOOLEAN,
    is_debit_note BOOLEAN,
    is_credit_note BOOLEAN,
    is_consolidate BOOLEAN,
    validation_date_time TIMESTAMP,
    credit_check BOOLEAN,
    is_submit_in_pos BOOLEAN,
    is_hide_payment_debit BOOLEAN,
    is_hide_payment_credit BOOLEAN,
    formatted_date_order VARCHAR(100),
    is_hide_reverse_consolidation BOOLEAN,
    main_order_id INTEGER,
    main_order_pos_reference VARCHAR(100)
);

CREATE TABLE pos_order_line (
    id INT PRIMARY KEY,
    company_id INTEGER,
    product_id INTEGER,
    order_id INTEGER,
    refunded_orderline_id INTEGER,
    combo_parent_id INTEGER,
    name VARCHAR(100),
    notice VARCHAR(100),
    full_product_name VARCHAR(100),
    customer_note VARCHAR(100),
    price_unit DECIMAL(18, 4),
    qty DECIMAL(18, 4),
    price_subtotal DECIMAL(18, 4),
    price_subtotal_incl DECIMAL(18, 4),
    total_cost DECIMAL(18, 4),
    discount DECIMAL(18, 4),
    skip_change BOOLEAN,
    is_total_cost_computed BOOLEAN,
    price_extra FLOAT,
    sale_order_origin_id INTEGER,
    sale_order_line_id INTEGER,
    down_payment_details VARCHAR(500),
    discount_amount FLOAT,
    credit_note_discount FLOAT
);

CREATE TABLE product_product (
    id INT PRIMARY KEY,
    product_tmpl_id INTEGER,
    default_code VARCHAR(100),
    barcode VARCHAR(100),
    combination_indices VARCHAR(100),
    volume DECIMAL(18, 4),
    weight DECIMAL(18, 4),
    can_image_variant_1024_be_zoomed BOOLEAN,
    lot_properties_definition TEXT,
    classification_code_id INTEGER
);

CREATE TABLE product_template (
    id INT PRIMARY KEY,
    categ_id INTEGER,
    uom_id INTEGER,
    uom_po_id INTEGER,
    company_id INTEGER,
    detailed_type VARCHAR(100),
    type VARCHAR(100),
    default_code VARCHAR(100),
    priority VARCHAR(100),
    name VARCHAR(100),
    description VARCHAR(500),
    description_purchase TEXT,
    description_sale TEXT,
    product_properties TEXT,
    list_price DECIMAL(18, 4),
    volume DECIMAL(18, 4),
    weight DECIMAL(18, 4),
    sale_ok BOOLEAN,
    purchase_ok BOOLEAN,
    can_image_1024_be_zoomed BOOLEAN,
    has_configurable_attributes BOOLEAN,
    sale_delay INTEGER,
    tracking VARCHAR(100),
    description_picking TEXT,
    description_pickingout TEXT,
    description_pickingin TEXT,
    service_type VARCHAR(100),
    sale_line_warn VARCHAR(100),
    expense_policy VARCHAR(100),
    invoice_policy VARCHAR(100),
    sale_line_warn_msg VARCHAR(500),
    purchase_method VARCHAR(100),
    purchase_line_warn VARCHAR(100),
    purchase_line_warn_msg VARCHAR(500),
    available_in_pos BOOLEAN,
    to_weight BOOLEAN,
    classification_code_id INTEGER,
    unit_measurement_code_id INTEGER,
    service_tracking VARCHAR(100),
    product_classification VARCHAR(100),
    split_method_landed_cost VARCHAR(100),
    landed_cost_ok BOOLEAN,
    is_data_product BOOLEAN,
    alert_min_qty FLOAT
);

CREATE TABLE res_partner (
    id INT PRIMARY KEY,
    company_id INTEGER,
    name VARCHAR(100),
    title INTEGER,
    parent_id INTEGER,
    user_id INTEGER,
    state_id INTEGER,
    country_id INTEGER,
    industry_id INTEGER,
    commercial_partner_id INTEGER,
    complete_name VARCHAR(100),
    ref VARCHAR(100),
    lang VARCHAR(100),
    tz VARCHAR(100),
    vat VARCHAR(100),
    company_registry VARCHAR(100),
    website VARCHAR(100),
    function VARCHAR(100),
    type VARCHAR(100),
    street VARCHAR(100),
    street2 VARCHAR(100),
    zip VARCHAR(100),
    city VARCHAR(100),
    email VARCHAR(100),
    phone VARCHAR(100),
    mobile VARCHAR(100),
    commercial_company_name VARCHAR(100),
    company_name VARCHAR(100),
    date DATE,
    comment VARCHAR(500),
    partner_latitude DECIMAL(18, 4),
    partner_longitude DECIMAL(18, 4),
    employee BOOLEAN,
    is_company BOOLEAN,
    partner_share BOOLEAN,
    message_bounce INTEGER,
    email_normalized VARCHAR(100),
    signup_type VARCHAR(100),
    signup_expiration TIMESTAMP,
    signup_token VARCHAR(100),
    team_id INTEGER,
    phone_sanitized VARCHAR(100),
    supplier_rank INTEGER,
    customer_rank INTEGER,
    invoice_warn VARCHAR(100),
    invoice_warn_msg VARCHAR(500),
    debit_limit DECIMAL(18, 4),
    last_time_entries_checked TIMESTAMP,
    picking_warn VARCHAR(100),
    picking_warn_msg VARCHAR(500),
    ubl_cii_format VARCHAR(100),
    peppol_endpoint VARCHAR(100),
    peppol_eas VARCHAR(100),
    sale_warn VARCHAR(100),
    sale_warn_msg VARCHAR(500),
    payment_responsible_id INTEGER,
    latest_followup_sequence INTEGER,
    payment_next_action_date DATE,
    payment_note VARCHAR(500),
    payment_next_action VARCHAR(500),
    website_id INTEGER,
    is_published BOOLEAN,
    buyer_id INTEGER,
    purchase_warn VARCHAR(100),
    purchase_warn_msg VARCHAR(500),
    city_id INTEGER,
    post_code_id INTEGER,
    nric VARCHAR(100),
    state VARCHAR(100),
    id_type VARCHAR(100),
    malay_and_no_malay VARCHAR(100),
    sst VARCHAR(100),
    msic_code VARCHAR(100),
    ttx VARCHAR(100),
    b_act_des_bn VARCHAR(100),
    b_act_des_en VARCHAR(100),
    street_3 VARCHAR(100),
    error_message VARCHAR(500),
    is_malaysia BOOLEAN,
    is_non_malaysian BOOLEAN,
    is_government BOOLEAN,
    is_portal_data_submit BOOLEAN,
    is_supplier BOOLEAN,
    qr_generated_timestamp TIMESTAMP,
    personal_tin VARCHAR(100),
    company_tin VARCHAR(100),
    business_reg_number VARCHAR(100),
    custom_credit DECIMAL(18, 4),
    is_general_partner BOOLEAN,
    internal_notes VARCHAR(500),
    nric_label VARCHAR(100),
    msic_code_id INTEGER,
    self_bill_for_supplier BOOLEAN
);

CREATE TABLE res_users (
    id INT PRIMARY KEY,
    company_id INTEGER,
    partner_id INTEGER,
    login VARCHAR(100),
    password VARCHAR(100),
    action_id INTEGER,
    signature VARCHAR(500),
    share BOOLEAN,
    totp_secret VARCHAR(100),
    notification_type VARCHAR(100),
    odoobot_state VARCHAR(100),
    odoobot_failed BOOLEAN,
    sale_team_id INTEGER,
    is_apping_user BOOLEAN,
    is_login_with_any_user BOOLEAN,
    user_group_id INTEGER,
    user_types VARCHAR(100),
    is_lhdn_admin BOOLEAN,
    mail_alert BOOLEAN,
    login_access INTEGER,
    locked_until TIMESTAMP,
    oauth_provider_id INTEGER,
    oauth_uid VARCHAR(100),
    oauth_access_token VARCHAR(100),
    website_id INTEGER,
    passcode VARCHAR(100),
    is_reg_tc BOOLEAN,
    is_user_tc BOOLEAN,
    is_company_owner BOOLEAN,
    sidebar_type VARCHAR(100)
);

Return only the SQL query without explanation.
SELECT SUM(amount_total) AS total_revenue
FROM pos_order
WHERE date_order >= CURRENT_DATE - INTERVAL '7 days';",
"SCHEMA:
TABLE pos_order(id, date_order)
TABLE pos_order_line(id, order_id, product_id, qty)
TABLE product_product(id, product_tmpl_id)
TABLE product_template(id, name)

Prompt: You are an expert SQL developer.

Convert the following natural language request into a single SQL SELECT query.
Use only the schema provided below and do not make assumptions beyond it.

only take table and field from given scheme no other is allowed

Natural Language Request:
List all orders placed today with their total amounts.

Database Schema:
CREATE TABLE pos_order (
    id INT PRIMARY KEY,
    user_id INTEGER,
    company_id INTEGER,
    pricelist_id INTEGER,
    partner_id INTEGER,
    sequence_number INTEGER,
    session_id INTEGER,
    config_id INTEGER,
    account_move INTEGER,
    procurement_group_id INTEGER,
    nb_print INTEGER,
    sale_journal INTEGER,
    fiscal_position_id INTEGER,
    name VARCHAR(100),
    last_order_preparation_change VARCHAR(100),
    state VARCHAR(100),
    pos_reference VARCHAR(100),
    ticket_code VARCHAR(100),
    shipping_date DATE,
    note VARCHAR(500),
    amount_tax DECIMAL(18, 4),
    amount_total DECIMAL(18, 4),
    amount_paid DECIMAL(18, 4),
    amount_return DECIMAL(18, 4),
    currency_rate DECIMAL(18, 4),
    tip_amount DECIMAL(18, 4),
    to_invoice BOOLEAN,
    is_tipped BOOLEAN,
    date_order TIMESTAMP,
    employee_id INTEGER,
    cashier VARCHAR(100),
    next_online_payment_amount DECIMAL(18, 4),
    crm_team_id INTEGER,
    debit_note_id INTEGER,
    invoice_id_for_debit INTEGER,
    reset_sequence INTEGER,
    my_invoice_status TEXT,
    invoice_type VARCHAR(100),
    reference_inv_id VARCHAR(500),
    response_msg VARCHAR(500),
    invalid_msg VARCHAR(500),
    is_submit_document BOOLEAN,
    is_debit_note BOOLEAN,
    is_credit_note BOOLEAN,
    is_consolidate BOOLEAN,
    validation_date_time TIMESTAMP,
    credit_check BOOLEAN,
    is_submit_in_pos BOOLEAN,
    is_hide_payment_debit BOOLEAN,
    is_hide_payment_credit BOOLEAN,
    formatted_date_order VARCHAR(100),
    is_hide_reverse_consolidation BOOLEAN,
    main_order_id INTEGER,
    main_order_pos_reference VARCHAR(100)
);

CREATE TABLE pos_order_line (
    id INT PRIMARY KEY,
    company_id INTEGER,
    product_id INTEGER,
    order_id INTEGER,
    refunded_orderline_id INTEGER,
    combo_parent_id INTEGER,
    name VARCHAR(100),
    notice VARCHAR(100),
    full_product_name VARCHAR(100),
    customer_note VARCHAR(100),
    price_unit DECIMAL(18, 4),
    qty DECIMAL(18, 4),
    price_subtotal DECIMAL(18, 4),
    price_subtotal_incl DECIMAL(18, 4),
    total_cost DECIMAL(18, 4),
    discount DECIMAL(18, 4),
    skip_change BOOLEAN,
    is_total_cost_computed BOOLEAN,
    price_extra FLOAT,
    sale_order_origin_id INTEGER,
    sale_order_line_id INTEGER,
    down_payment_details VARCHAR(500),
    discount_amount FLOAT,
    credit_note_discount FLOAT
);

CREATE TABLE product_product (
    id INT PRIMARY KEY,
    product_tmpl_id INTEGER,
    default_code VARCHAR(100),
    barcode VARCHAR(100),
    combination_indices VARCHAR(100),
    volume DECIMAL(18, 4),
    weight DECIMAL(18, 4),
    can_image_variant_1024_be_zoomed BOOLEAN,
    lot_properties_definition TEXT,
    classification_code_id INTEGER
);

CREATE TABLE product_template (
    id INT PRIMARY KEY,
    categ_id INTEGER,
    uom_id INTEGER,
    uom_po_id INTEGER,
    company_id INTEGER,
    detailed_type VARCHAR(100),
    type VARCHAR(100),
    default_code VARCHAR(100),
    priority VARCHAR(100),
    name VARCHAR(100),
    description VARCHAR(500),
    description_purchase TEXT,
    description_sale TEXT,
    product_properties TEXT,
    list_price DECIMAL(18, 4),
    volume DECIMAL(18, 4),
    weight DECIMAL(18, 4),
    sale_ok BOOLEAN,
    purchase_ok BOOLEAN,
    can_image_1024_be_zoomed BOOLEAN,
    has_configurable_attributes BOOLEAN,
    sale_delay INTEGER,
    tracking VARCHAR(100),
    description_picking TEXT,
    description_pickingout TEXT,
    description_pickingin TEXT,
    service_type VARCHAR(100),
    sale_line_warn VARCHAR(100),
    expense_policy VARCHAR(100),
    invoice_policy VARCHAR(100),
    sale_line_warn_msg VARCHAR(500),
    purchase_method VARCHAR(100),
    purchase_line_warn VARCHAR(100),
    purchase_line_warn_msg VARCHAR(500),
    available_in_pos BOOLEAN,
    to_weight BOOLEAN,
    classification_code_id INTEGER,
    unit_measurement_code_id INTEGER,
    service_tracking VARCHAR(100),
    product_classification VARCHAR(100),
    split_method_landed_cost VARCHAR(100),
    landed_cost_ok BOOLEAN,
    is_data_product BOOLEAN,
    alert_min_qty FLOAT
);

CREATE TABLE res_partner (
    id INT PRIMARY KEY,
    company_id INTEGER,
    name VARCHAR(100),
    title INTEGER,
    parent_id INTEGER,
    user_id INTEGER,
    state_id INTEGER,
    country_id INTEGER,
    industry_id INTEGER,
    commercial_partner_id INTEGER,
    complete_name VARCHAR(100),
    ref VARCHAR(100),
    lang VARCHAR(100),
    tz VARCHAR(100),
    vat VARCHAR(100),
    company_registry VARCHAR(100),
    website VARCHAR(100),
    function VARCHAR(100),
    type VARCHAR(100),
    street VARCHAR(100),
    street2 VARCHAR(100),
    zip VARCHAR(100),
    city VARCHAR(100),
    email VARCHAR(100),
    phone VARCHAR(100),
    mobile VARCHAR(100),
    commercial_company_name VARCHAR(100),
    company_name VARCHAR(100),
    date DATE,
    comment VARCHAR(500),
    partner_latitude DECIMAL(18, 4),
    partner_longitude DECIMAL(18, 4),
    employee BOOLEAN,
    is_company BOOLEAN,
    partner_share BOOLEAN,
    message_bounce INTEGER,
    email_normalized VARCHAR(100),
    signup_type VARCHAR(100),
    signup_expiration TIMESTAMP,
    signup_token VARCHAR(100),
    team_id INTEGER,
    phone_sanitized VARCHAR(100),
    supplier_rank INTEGER,
    customer_rank INTEGER,
    invoice_warn VARCHAR(100),
    invoice_warn_msg VARCHAR(500),
    debit_limit DECIMAL(18, 4),
    last_time_entries_checked TIMESTAMP,
    picking_warn VARCHAR(100),
    picking_warn_msg VARCHAR(500),
    ubl_cii_format VARCHAR(100),
    peppol_endpoint VARCHAR(100),
    peppol_eas VARCHAR(100),
    sale_warn VARCHAR(100),
    sale_warn_msg VARCHAR(500),
    payment_responsible_id INTEGER,
    latest_followup_sequence INTEGER,
    payment_next_action_date DATE,
    payment_note VARCHAR(500),
    payment_next_action VARCHAR(500),
    website_id INTEGER,
    is_published BOOLEAN,
    buyer_id INTEGER,
    purchase_warn VARCHAR(100),
    purchase_warn_msg VARCHAR(500),
    city_id INTEGER,
    post_code_id INTEGER,
    nric VARCHAR(100),
    state VARCHAR(100),
    id_type VARCHAR(100),
    malay_and_no_malay VARCHAR(100),
    sst VARCHAR(100),
    msic_code VARCHAR(100),
    ttx VARCHAR(100),
    b_act_des_bn VARCHAR(100),
    b_act_des_en VARCHAR(100),
    street_3 VARCHAR(100),
    error_message VARCHAR(500),
    is_malaysia BOOLEAN,
    is_non_malaysian BOOLEAN,
    is_government BOOLEAN,
    is_portal_data_submit BOOLEAN,
    is_supplier BOOLEAN,
    qr_generated_timestamp TIMESTAMP,
    personal_tin VARCHAR(100),
    company_tin VARCHAR(100),
    business_reg_number VARCHAR(100),
    custom_credit DECIMAL(18, 4),
    is_general_partner BOOLEAN,
    internal_notes VARCHAR(500),
    nric_label VARCHAR(100),
    msic_code_id INTEGER,
    self_bill_for_supplier BOOLEAN
);

CREATE TABLE res_users (
    id INT PRIMARY KEY,
    company_id INTEGER,
    partner_id INTEGER,
    login VARCHAR(100),
    password VARCHAR(100),
    action_id INTEGER,
    signature VARCHAR(500),
    share BOOLEAN,
    totp_secret VARCHAR(100),
    notification_type VARCHAR(100),
    odoobot_state VARCHAR(100),
    odoobot_failed BOOLEAN,
    sale_team_id INTEGER,
    is_apping_user BOOLEAN,
    is_login_with_any_user BOOLEAN,
    user_group_id INTEGER,
    user_types VARCHAR(100),
    is_lhdn_admin BOOLEAN,
    mail_alert BOOLEAN,
    login_access INTEGER,
    locked_until TIMESTAMP,
    oauth_provider_id INTEGER,
    oauth_uid VARCHAR(100),
    oauth_access_token VARCHAR(100),
    website_id INTEGER,
    passcode VARCHAR(100),
    is_reg_tc BOOLEAN,
    is_user_tc BOOLEAN,
    is_company_owner BOOLEAN,
    sidebar_type VARCHAR(100)
);

Return only the SQL query without explanation.
SELECT id, name, amount_total
FROM pos_order
WHERE DATE(date_order) = CURRENT_DATE;",
"SCHEMA:
TABLE pos_order(id, date_order)
TABLE pos_order_line(id, order_id, product_id, qty)
TABLE product_product(id, product_tmpl_id)
TABLE product_template(id, name)

Prompt: You are an expert SQL developer.

Convert the following natural language request into a single SQL SELECT query.
Use only the schema provided below and do not make assumptions beyond it.

only take table and field from given scheme no other is allowed

Natural Language Request:
Which cashier/user processed the highest number of POS orders this month?

Database Schema:
CREATE TABLE pos_order (
    id INT PRIMARY KEY,
    user_id INTEGER,
    company_id INTEGER,
    pricelist_id INTEGER,
    partner_id INTEGER,
    sequence_number INTEGER,
    session_id INTEGER,
    config_id INTEGER,
    account_move INTEGER,
    procurement_group_id INTEGER,
    nb_print INTEGER,
    sale_journal INTEGER,
    fiscal_position_id INTEGER,
    name VARCHAR(100),
    last_order_preparation_change VARCHAR(100),
    state VARCHAR(100),
    pos_reference VARCHAR(100),
    ticket_code VARCHAR(100),
    shipping_date DATE,
    note VARCHAR(500),
    amount_tax DECIMAL(18, 4),
    amount_total DECIMAL(18, 4),
    amount_paid DECIMAL(18, 4),
    amount_return DECIMAL(18, 4),
    currency_rate DECIMAL(18, 4),
    tip_amount DECIMAL(18, 4),
    to_invoice BOOLEAN,
    is_tipped BOOLEAN,
    date_order TIMESTAMP,
    employee_id INTEGER,
    cashier VARCHAR(100),
    next_online_payment_amount DECIMAL(18, 4),
    crm_team_id INTEGER,
    debit_note_id INTEGER,
    invoice_id_for_debit INTEGER,
    reset_sequence INTEGER,
    my_invoice_status TEXT,
    invoice_type VARCHAR(100),
    reference_inv_id VARCHAR(500),
    response_msg VARCHAR(500),
    invalid_msg VARCHAR(500),
    is_submit_document BOOLEAN,
    is_debit_note BOOLEAN,
    is_credit_note BOOLEAN,
    is_consolidate BOOLEAN,
    validation_date_time TIMESTAMP,
    credit_check BOOLEAN,
    is_submit_in_pos BOOLEAN,
    is_hide_payment_debit BOOLEAN,
    is_hide_payment_credit BOOLEAN,
    formatted_date_order VARCHAR(100),
    is_hide_reverse_consolidation BOOLEAN,
    main_order_id INTEGER,
    main_order_pos_reference VARCHAR(100)
);

CREATE TABLE pos_order_line (
    id INT PRIMARY KEY,
    company_id INTEGER,
    product_id INTEGER,
    order_id INTEGER,
    refunded_orderline_id INTEGER,
    combo_parent_id INTEGER,
    name VARCHAR(100),
    notice VARCHAR(100),
    full_product_name VARCHAR(100),
    customer_note VARCHAR(100),
    price_unit DECIMAL(18, 4),
    qty DECIMAL(18, 4),
    price_subtotal DECIMAL(18, 4),
    price_subtotal_incl DECIMAL(18, 4),
    total_cost DECIMAL(18, 4),
    discount DECIMAL(18, 4),
    skip_change BOOLEAN,
    is_total_cost_computed BOOLEAN,
    price_extra FLOAT,
    sale_order_origin_id INTEGER,
    sale_order_line_id INTEGER,
    down_payment_details VARCHAR(500),
    discount_amount FLOAT,
    credit_note_discount FLOAT
);

CREATE TABLE product_product (
    id INT PRIMARY KEY,
    product_tmpl_id INTEGER,
    default_code VARCHAR(100),
    barcode VARCHAR(100),
    combination_indices VARCHAR(100),
    volume DECIMAL(18, 4),
    weight DECIMAL(18, 4),
    can_image_variant_1024_be_zoomed BOOLEAN,
    lot_properties_definition TEXT,
    classification_code_id INTEGER
);

CREATE TABLE product_template (
    id INT PRIMARY KEY,
    categ_id INTEGER,
    uom_id INTEGER,
    uom_po_id INTEGER,
    company_id INTEGER,
    detailed_type VARCHAR(100),
    type VARCHAR(100),
    default_code VARCHAR(100),
    priority VARCHAR(100),
    name VARCHAR(100),
    description VARCHAR(500),
    description_purchase TEXT,
    description_sale TEXT,
    product_properties TEXT,
    list_price DECIMAL(18, 4),
    volume DECIMAL(18, 4),
    weight DECIMAL(18, 4),
    sale_ok BOOLEAN,
    purchase_ok BOOLEAN,
    can_image_1024_be_zoomed BOOLEAN,
    has_configurable_attributes BOOLEAN,
    sale_delay INTEGER,
    tracking VARCHAR(100),
    description_picking TEXT,
    description_pickingout TEXT,
    description_pickingin TEXT,
    service_type VARCHAR(100),
    sale_line_warn VARCHAR(100),
    expense_policy VARCHAR(100),
    invoice_policy VARCHAR(100),
    sale_line_warn_msg VARCHAR(500),
    purchase_method VARCHAR(100),
    purchase_line_warn VARCHAR(100),
    purchase_line_warn_msg VARCHAR(500),
    available_in_pos BOOLEAN,
    to_weight BOOLEAN,
    classification_code_id INTEGER,
    unit_measurement_code_id INTEGER,
    service_tracking VARCHAR(100),
    product_classification VARCHAR(100),
    split_method_landed_cost VARCHAR(100),
    landed_cost_ok BOOLEAN,
    is_data_product BOOLEAN,
    alert_min_qty FLOAT
);

CREATE TABLE res_partner (
    id INT PRIMARY KEY,
    company_id INTEGER,
    name VARCHAR(100),
    title INTEGER,
    parent_id INTEGER,
    user_id INTEGER,
    state_id INTEGER,
    country_id INTEGER,
    industry_id INTEGER,
    commercial_partner_id INTEGER,
    complete_name VARCHAR(100),
    ref VARCHAR(100),
    lang VARCHAR(100),
    tz VARCHAR(100),
    vat VARCHAR(100),
    company_registry VARCHAR(100),
    website VARCHAR(100),
    function VARCHAR(100),
    type VARCHAR(100),
    street VARCHAR(100),
    street2 VARCHAR(100),
    zip VARCHAR(100),
    city VARCHAR(100),
    email VARCHAR(100),
    phone VARCHAR(100),
    mobile VARCHAR(100),
    commercial_company_name VARCHAR(100),
    company_name VARCHAR(100),
    date DATE,
    comment VARCHAR(500),
    partner_latitude DECIMAL(18, 4),
    partner_longitude DECIMAL(18, 4),
    employee BOOLEAN,
    is_company BOOLEAN,
    partner_share BOOLEAN,
    message_bounce INTEGER,
    email_normalized VARCHAR(100),
    signup_type VARCHAR(100),
    signup_expiration TIMESTAMP,
    signup_token VARCHAR(100),
    team_id INTEGER,
    phone_sanitized VARCHAR(100),
    supplier_rank INTEGER,
    customer_rank INTEGER,
    invoice_warn VARCHAR(100),
    invoice_warn_msg VARCHAR(500),
    debit_limit DECIMAL(18, 4),
    last_time_entries_checked TIMESTAMP,
    picking_warn VARCHAR(100),
    picking_warn_msg VARCHAR(500),
    ubl_cii_format VARCHAR(100),
    peppol_endpoint VARCHAR(100),
    peppol_eas VARCHAR(100),
    sale_warn VARCHAR(100),
    sale_warn_msg VARCHAR(500),
    payment_responsible_id INTEGER,
    latest_followup_sequence INTEGER,
    payment_next_action_date DATE,
    payment_note VARCHAR(500),
    payment_next_action VARCHAR(500),
    website_id INTEGER,
    is_published BOOLEAN,
    buyer_id INTEGER,
    purchase_warn VARCHAR(100),
    purchase_warn_msg VARCHAR(500),
    city_id INTEGER,
    post_code_id INTEGER,
    nric VARCHAR(100),
    state VARCHAR(100),
    id_type VARCHAR(100),
    malay_and_no_malay VARCHAR(100),
    sst VARCHAR(100),
    msic_code VARCHAR(100),
    ttx VARCHAR(100),
    b_act_des_bn VARCHAR(100),
    b_act_des_en VARCHAR(100),
    street_3 VARCHAR(100),
    error_message VARCHAR(500),
    is_malaysia BOOLEAN,
    is_non_malaysian BOOLEAN,
    is_government BOOLEAN,
    is_portal_data_submit BOOLEAN,
    is_supplier BOOLEAN,
    qr_generated_timestamp TIMESTAMP,
    personal_tin VARCHAR(100),
    company_tin VARCHAR(100),
    business_reg_number VARCHAR(100),
    custom_credit DECIMAL(18, 4),
    is_general_partner BOOLEAN,
    internal_notes VARCHAR(500),
    nric_label VARCHAR(100),
    msic_code_id INTEGER,
    self_bill_for_supplier BOOLEAN
);

CREATE TABLE res_users (
    id INT PRIMARY KEY,
    company_id INTEGER,
    partner_id INTEGER,
    login VARCHAR(100),
    password VARCHAR(100),
    action_id INTEGER,
    signature VARCHAR(500),
    share BOOLEAN,
    totp_secret VARCHAR(100),
    notification_type VARCHAR(100),
    odoobot_state VARCHAR(100),
    odoobot_failed BOOLEAN,
    sale_team_id INTEGER,
    is_apping_user BOOLEAN,
    is_login_with_any_user BOOLEAN,
    user_group_id INTEGER,
    user_types VARCHAR(100),
    is_lhdn_admin BOOLEAN,
    mail_alert BOOLEAN,
    login_access INTEGER,
    locked_until TIMESTAMP,
    oauth_provider_id INTEGER,
    oauth_uid VARCHAR(100),
    oauth_access_token VARCHAR(100),
    website_id INTEGER,
    passcode VARCHAR(100),
    is_reg_tc BOOLEAN,
    is_user_tc BOOLEAN,
    is_company_owner BOOLEAN,
    sidebar_type VARCHAR(100)
);

Return only the SQL query without explanation.
SELECT cashier, COUNT(*) AS total_orders
FROM pos_order
WHERE date_order >= DATE_TRUNC('month', CURRENT_DATE)
GROUP BY cashier
ORDER BY total_orders DESC
LIMIT 1;",
"SCHEMA:
TABLE pos_order(id, date_order)
TABLE pos_order_line(id, order_id, product_id, qty)
TABLE product_product(id, product_tmpl_id)
TABLE product_template(id, name)

Prompt: You are an expert SQL developer.

Convert the following natural language request into a single SQL SELECT query.
Use only the schema provided below and do not make assumptions beyond it.

only take table and field from given scheme no other is allowed

Natural Language Request:
Give me the average basket size by customer this quarter.

Database Schema:
CREATE TABLE pos_order (
    id INT PRIMARY KEY,
    user_id INTEGER,
    company_id INTEGER,
    pricelist_id INTEGER,
    partner_id INTEGER,
    sequence_number INTEGER,
    session_id INTEGER,
    config_id INTEGER,
    account_move INTEGER,
    procurement_group_id INTEGER,
    nb_print INTEGER,
    sale_journal INTEGER,
    fiscal_position_id INTEGER,
    name VARCHAR(100),
    last_order_preparation_change VARCHAR(100),
    state VARCHAR(100),
    pos_reference VARCHAR(100),
    ticket_code VARCHAR(100),
    shipping_date DATE,
    note VARCHAR(500),
    amount_tax DECIMAL(18, 4),
    amount_total DECIMAL(18, 4),
    amount_paid DECIMAL(18, 4),
    amount_return DECIMAL(18, 4),
    currency_rate DECIMAL(18, 4),
    tip_amount DECIMAL(18, 4),
    to_invoice BOOLEAN,
    is_tipped BOOLEAN,
    date_order TIMESTAMP,
    employee_id INTEGER,
    cashier VARCHAR(100),
    next_online_payment_amount DECIMAL(18, 4),
    crm_team_id INTEGER,
    debit_note_id INTEGER,
    invoice_id_for_debit INTEGER,
    reset_sequence INTEGER,
    my_invoice_status TEXT,
    invoice_type VARCHAR(100),
    reference_inv_id VARCHAR(500),
    response_msg VARCHAR(500),
    invalid_msg VARCHAR(500),
    is_submit_document BOOLEAN,
    is_debit_note BOOLEAN,
    is_credit_note BOOLEAN,
    is_consolidate BOOLEAN,
    validation_date_time TIMESTAMP,
    credit_check BOOLEAN,
    is_submit_in_pos BOOLEAN,
    is_hide_payment_debit BOOLEAN,
    is_hide_payment_credit BOOLEAN,
    formatted_date_order VARCHAR(100),
    is_hide_reverse_consolidation BOOLEAN,
    main_order_id INTEGER,
    main_order_pos_reference VARCHAR(100)
);

CREATE TABLE pos_order_line (
    id INT PRIMARY KEY,
    company_id INTEGER,
    product_id INTEGER,
    order_id INTEGER,
    refunded_orderline_id INTEGER,
    combo_parent_id INTEGER,
    name VARCHAR(100),
    notice VARCHAR(100),
    full_product_name VARCHAR(100),
    customer_note VARCHAR(100),
    price_unit DECIMAL(18, 4),
    qty DECIMAL(18, 4),
    price_subtotal DECIMAL(18, 4),
    price_subtotal_incl DECIMAL(18, 4),
    total_cost DECIMAL(18, 4),
    discount DECIMAL(18, 4),
    skip_change BOOLEAN,
    is_total_cost_computed BOOLEAN,
    price_extra FLOAT,
    sale_order_origin_id INTEGER,
    sale_order_line_id INTEGER,
    down_payment_details VARCHAR(500),
    discount_amount FLOAT,
    credit_note_discount FLOAT
);

CREATE TABLE product_product (
    id INT PRIMARY KEY,
    product_tmpl_id INTEGER,
    default_code VARCHAR(100),
    barcode VARCHAR(100),
    combination_indices VARCHAR(100),
    volume DECIMAL(18, 4),
    weight DECIMAL(18, 4),
    can_image_variant_1024_be_zoomed BOOLEAN,
    lot_properties_definition TEXT,
    classification_code_id INTEGER
);

CREATE TABLE product_template (
    id INT PRIMARY KEY,
    categ_id INTEGER,
    uom_id INTEGER,
    uom_po_id INTEGER,
    company_id INTEGER,
    detailed_type VARCHAR(100),
    type VARCHAR(100),
    default_code VARCHAR(100),
    priority VARCHAR(100),
    name VARCHAR(100),
    description VARCHAR(500),
    description_purchase TEXT,
    description_sale TEXT,
    product_properties TEXT,
    list_price DECIMAL(18, 4),
    volume DECIMAL(18, 4),
    weight DECIMAL(18, 4),
    sale_ok BOOLEAN,
    purchase_ok BOOLEAN,
    can_image_1024_be_zoomed BOOLEAN,
    has_configurable_attributes BOOLEAN,
    sale_delay INTEGER,
    tracking VARCHAR(100),
    description_picking TEXT,
    description_pickingout TEXT,
    description_pickingin TEXT,
    service_type VARCHAR(100),
    sale_line_warn VARCHAR(100),
    expense_policy VARCHAR(100),
    invoice_policy VARCHAR(100),
    sale_line_warn_msg VARCHAR(500),
    purchase_method VARCHAR(100),
    purchase_line_warn VARCHAR(100),
    purchase_line_warn_msg VARCHAR(500),
    available_in_pos BOOLEAN,
    to_weight BOOLEAN,
    classification_code_id INTEGER,
    unit_measurement_code_id INTEGER,
    service_tracking VARCHAR(100),
    product_classification VARCHAR(100),
    split_method_landed_cost VARCHAR(100),
    landed_cost_ok BOOLEAN,
    is_data_product BOOLEAN,
    alert_min_qty FLOAT
);

CREATE TABLE res_partner (
    id INT PRIMARY KEY,
    company_id INTEGER,
    name VARCHAR(100),
    title INTEGER,
    parent_id INTEGER,
    user_id INTEGER,
    state_id INTEGER,
    country_id INTEGER,
    industry_id INTEGER,
    commercial_partner_id INTEGER,
    complete_name VARCHAR(100),
    ref VARCHAR(100),
    lang VARCHAR(100),
    tz VARCHAR(100),
    vat VARCHAR(100),
    company_registry VARCHAR(100),
    website VARCHAR(100),
    function VARCHAR(100),
    type VARCHAR(100),
    street VARCHAR(100),
    street2 VARCHAR(100),
    zip VARCHAR(100),
    city VARCHAR(100),
    email VARCHAR(100),
    phone VARCHAR(100),
    mobile VARCHAR(100),
    commercial_company_name VARCHAR(100),
    company_name VARCHAR(100),
    date DATE,
    comment VARCHAR(500),
    partner_latitude DECIMAL(18, 4),
    partner_longitude DECIMAL(18, 4),
    employee BOOLEAN,
    is_company BOOLEAN,
    partner_share BOOLEAN,
    message_bounce INTEGER,
    email_normalized VARCHAR(100),
    signup_type VARCHAR(100),
    signup_expiration TIMESTAMP,
    signup_token VARCHAR(100),
    team_id INTEGER,
    phone_sanitized VARCHAR(100),
    supplier_rank INTEGER,
    customer_rank INTEGER,
    invoice_warn VARCHAR(100),
    invoice_warn_msg VARCHAR(500),
    debit_limit DECIMAL(18, 4),
    last_time_entries_checked TIMESTAMP,
    picking_warn VARCHAR(100),
    picking_warn_msg VARCHAR(500),
    ubl_cii_format VARCHAR(100),
    peppol_endpoint VARCHAR(100),
    peppol_eas VARCHAR(100),
    sale_warn VARCHAR(100),
    sale_warn_msg VARCHAR(500),
    payment_responsible_id INTEGER,
    latest_followup_sequence INTEGER,
    payment_next_action_date DATE,
    payment_note VARCHAR(500),
    payment_next_action VARCHAR(500),
    website_id INTEGER,
    is_published BOOLEAN,
    buyer_id INTEGER,
    purchase_warn VARCHAR(100),
    purchase_warn_msg VARCHAR(500),
    city_id INTEGER,
    post_code_id INTEGER,
    nric VARCHAR(100),
    state VARCHAR(100),
    id_type VARCHAR(100),
    malay_and_no_malay VARCHAR(100),
    sst VARCHAR(100),
    msic_code VARCHAR(100),
    ttx VARCHAR(100),
    b_act_des_bn VARCHAR(100),
    b_act_des_en VARCHAR(100),
    street_3 VARCHAR(100),
    error_message VARCHAR(500),
    is_malaysia BOOLEAN,
    is_non_malaysian BOOLEAN,
    is_government BOOLEAN,
    is_portal_data_submit BOOLEAN,
    is_supplier BOOLEAN,
    qr_generated_timestamp TIMESTAMP,
    personal_tin VARCHAR(100),
    company_tin VARCHAR(100),
    business_reg_number VARCHAR(100),
    custom_credit DECIMAL(18, 4),
    is_general_partner BOOLEAN,
    internal_notes VARCHAR(500),
    nric_label VARCHAR(100),
    msic_code_id INTEGER,
    self_bill_for_supplier BOOLEAN
);

CREATE TABLE res_users (
    id INT PRIMARY KEY,
    company_id INTEGER,
    partner_id INTEGER,
    login VARCHAR(100),
    password VARCHAR(100),
    action_id INTEGER,
    signature VARCHAR(500),
    share BOOLEAN,
    totp_secret VARCHAR(100),
    notification_type VARCHAR(100),
    odoobot_state VARCHAR(100),
    odoobot_failed BOOLEAN,
    sale_team_id INTEGER,
    is_apping_user BOOLEAN,
    is_login_with_any_user BOOLEAN,
    user_group_id INTEGER,
    user_types VARCHAR(100),
    is_lhdn_admin BOOLEAN,
    mail_alert BOOLEAN,
    login_access INTEGER,
    locked_until TIMESTAMP,
    oauth_provider_id INTEGER,
    oauth_uid VARCHAR(100),
    oauth_access_token VARCHAR(100),
    website_id INTEGER,
    passcode VARCHAR(100),
    is_reg_tc BOOLEAN,
    is_user_tc BOOLEAN,
    is_company_owner BOOLEAN,
    sidebar_type VARCHAR(100)
);

Return only the SQL query without explanation.
SELECT partner_id, AVG(amount_total) AS avg_basket_size
FROM pos_order
WHERE date_order >= DATE_TRUNC('quarter', CURRENT_DATE)
GROUP BY partner_id;",
"SCHEMA:
TABLE pos_order(id, date_order)
TABLE pos_order_line(id, order_id, product_id, qty)
TABLE product_product(id, product_tmpl_id)
TABLE product_template(id, name)

Prompt: You are an expert SQL developer.

Convert the following natural language request into a single SQL SELECT query.
Use only the schema provided below and do not make assumptions beyond it.

only take table and field from given scheme no other is allowed

Natural Language Request:
Show orders where discount applied was more than 20%.

Database Schema:
CREATE TABLE pos_order (
    id INT PRIMARY KEY,
    user_id INTEGER,
    company_id INTEGER,
    pricelist_id INTEGER,
    partner_id INTEGER,
    sequence_number INTEGER,
    session_id INTEGER,
    config_id INTEGER,
    account_move INTEGER,
    procurement_group_id INTEGER,
    nb_print INTEGER,
    sale_journal INTEGER,
    fiscal_position_id INTEGER,
    name VARCHAR(100),
    last_order_preparation_change VARCHAR(100),
    state VARCHAR(100),
    pos_reference VARCHAR(100),
    ticket_code VARCHAR(100),
    shipping_date DATE,
    note VARCHAR(500),
    amount_tax DECIMAL(18, 4),
    amount_total DECIMAL(18, 4),
    amount_paid DECIMAL(18, 4),
    amount_return DECIMAL(18, 4),
    currency_rate DECIMAL(18, 4),
    tip_amount DECIMAL(18, 4),
    to_invoice BOOLEAN,
    is_tipped BOOLEAN,
    date_order TIMESTAMP,
    employee_id INTEGER,
    cashier VARCHAR(100),
    next_online_payment_amount DECIMAL(18, 4),
    crm_team_id INTEGER,
    debit_note_id INTEGER,
    invoice_id_for_debit INTEGER,
    reset_sequence INTEGER,
    my_invoice_status TEXT,
    invoice_type VARCHAR(100),
    reference_inv_id VARCHAR(500),
    response_msg VARCHAR(500),
    invalid_msg VARCHAR(500),
    is_submit_document BOOLEAN,
    is_debit_note BOOLEAN,
    is_credit_note BOOLEAN,
    is_consolidate BOOLEAN,
    validation_date_time TIMESTAMP,
    credit_check BOOLEAN,
    is_submit_in_pos BOOLEAN,
    is_hide_payment_debit BOOLEAN,
    is_hide_payment_credit BOOLEAN,
    formatted_date_order VARCHAR(100),
    is_hide_reverse_consolidation BOOLEAN,
    main_order_id INTEGER,
    main_order_pos_reference VARCHAR(100)
);

CREATE TABLE pos_order_line (
    id INT PRIMARY KEY,
    company_id INTEGER,
    product_id INTEGER,
    order_id INTEGER,
    refunded_orderline_id INTEGER,
    combo_parent_id INTEGER,
    name VARCHAR(100),
    notice VARCHAR(100),
    full_product_name VARCHAR(100),
    customer_note VARCHAR(100),
    price_unit DECIMAL(18, 4),
    qty DECIMAL(18, 4),
    price_subtotal DECIMAL(18, 4),
    price_subtotal_incl DECIMAL(18, 4),
    total_cost DECIMAL(18, 4),
    discount DECIMAL(18, 4),
    skip_change BOOLEAN,
    is_total_cost_computed BOOLEAN,
    price_extra FLOAT,
    sale_order_origin_id INTEGER,
    sale_order_line_id INTEGER,
    down_payment_details VARCHAR(500),
    discount_amount FLOAT,
    credit_note_discount FLOAT
);

CREATE TABLE product_product (
    id INT PRIMARY KEY,
    product_tmpl_id INTEGER,
    default_code VARCHAR(100),
    barcode VARCHAR(100),
    combination_indices VARCHAR(100),
    volume DECIMAL(18, 4),
    weight DECIMAL(18, 4),
    can_image_variant_1024_be_zoomed BOOLEAN,
    lot_properties_definition TEXT,
    classification_code_id INTEGER
);

CREATE TABLE product_template (
    id INT PRIMARY KEY,
    categ_id INTEGER,
    uom_id INTEGER,
    uom_po_id INTEGER,
    company_id INTEGER,
    detailed_type VARCHAR(100),
    type VARCHAR(100),
    default_code VARCHAR(100),
    priority VARCHAR(100),
    name VARCHAR(100),
    description VARCHAR(500),
    description_purchase TEXT,
    description_sale TEXT,
    product_properties TEXT,
    list_price DECIMAL(18, 4),
    volume DECIMAL(18, 4),
    weight DECIMAL(18, 4),
    sale_ok BOOLEAN,
    purchase_ok BOOLEAN,
    can_image_1024_be_zoomed BOOLEAN,
    has_configurable_attributes BOOLEAN,
    sale_delay INTEGER,
    tracking VARCHAR(100),
    description_picking TEXT,
    description_pickingout TEXT,
    description_pickingin TEXT,
    service_type VARCHAR(100),
    sale_line_warn VARCHAR(100),
    expense_policy VARCHAR(100),
    invoice_policy VARCHAR(100),
    sale_line_warn_msg VARCHAR(500),
    purchase_method VARCHAR(100),
    purchase_line_warn VARCHAR(100),
    purchase_line_warn_msg VARCHAR(500),
    available_in_pos BOOLEAN,
    to_weight BOOLEAN,
    classification_code_id INTEGER,
    unit_measurement_code_id INTEGER,
    service_tracking VARCHAR(100),
    product_classification VARCHAR(100),
    split_method_landed_cost VARCHAR(100),
    landed_cost_ok BOOLEAN,
    is_data_product BOOLEAN,
    alert_min_qty FLOAT
);

CREATE TABLE res_partner (
    id INT PRIMARY KEY,
    company_id INTEGER,
    name VARCHAR(100),
    title INTEGER,
    parent_id INTEGER,
    user_id INTEGER,
    state_id INTEGER,
    country_id INTEGER,
    industry_id INTEGER,
    commercial_partner_id INTEGER,
    complete_name VARCHAR(100),
    ref VARCHAR(100),
    lang VARCHAR(100),
    tz VARCHAR(100),
    vat VARCHAR(100),
    company_registry VARCHAR(100),
    website VARCHAR(100),
    function VARCHAR(100),
    type VARCHAR(100),
    street VARCHAR(100),
    street2 VARCHAR(100),
    zip VARCHAR(100),
    city VARCHAR(100),
    email VARCHAR(100),
    phone VARCHAR(100),
    mobile VARCHAR(100),
    commercial_company_name VARCHAR(100),
    company_name VARCHAR(100),
    date DATE,
    comment VARCHAR(500),
    partner_latitude DECIMAL(18, 4),
    partner_longitude DECIMAL(18, 4),
    employee BOOLEAN,
    is_company BOOLEAN,
    partner_share BOOLEAN,
    message_bounce INTEGER,
    email_normalized VARCHAR(100),
    signup_type VARCHAR(100),
    signup_expiration TIMESTAMP,
    signup_token VARCHAR(100),
    team_id INTEGER,
    phone_sanitized VARCHAR(100),
    supplier_rank INTEGER,
    customer_rank INTEGER,
    invoice_warn VARCHAR(100),
    invoice_warn_msg VARCHAR(500),
    debit_limit DECIMAL(18, 4),
    last_time_entries_checked TIMESTAMP,
    picking_warn VARCHAR(100),
    picking_warn_msg VARCHAR(500),
    ubl_cii_format VARCHAR(100),
    peppol_endpoint VARCHAR(100),
    peppol_eas VARCHAR(100),
    sale_warn VARCHAR(100),
    sale_warn_msg VARCHAR(500),
    payment_responsible_id INTEGER,
    latest_followup_sequence INTEGER,
    payment_next_action_date DATE,
    payment_note VARCHAR(500),
    payment_next_action VARCHAR(500),
    website_id INTEGER,
    is_published BOOLEAN,
    buyer_id INTEGER,
    purchase_warn VARCHAR(100),
    purchase_warn_msg VARCHAR(500),
    city_id INTEGER,
    post_code_id INTEGER,
    nric VARCHAR(100),
    state VARCHAR(100),
    id_type VARCHAR(100),
    malay_and_no_malay VARCHAR(100),
    sst VARCHAR(100),
    msic_code VARCHAR(100),
    ttx VARCHAR(100),
    b_act_des_bn VARCHAR(100),
    b_act_des_en VARCHAR(100),
    street_3 VARCHAR(100),
    error_message VARCHAR(500),
    is_malaysia BOOLEAN,
    is_non_malaysian BOOLEAN,
    is_government BOOLEAN,
    is_portal_data_submit BOOLEAN,
    is_supplier BOOLEAN,
    qr_generated_timestamp TIMESTAMP,
    personal_tin VARCHAR(100),
    company_tin VARCHAR(100),
    business_reg_number VARCHAR(100),
    custom_credit DECIMAL(18, 4),
    is_general_partner BOOLEAN,
    internal_notes VARCHAR(500),
    nric_label VARCHAR(100),
    msic_code_id INTEGER,
    self_bill_for_supplier BOOLEAN
);

CREATE TABLE res_users (
    id INT PRIMARY KEY,
    company_id INTEGER,
    partner_id INTEGER,
    login VARCHAR(100),
    password VARCHAR(100),
    action_id INTEGER,
    signature VARCHAR(500),
    share BOOLEAN,
    totp_secret VARCHAR(100),
    notification_type VARCHAR(100),
    odoobot_state VARCHAR(100),
    odoobot_failed BOOLEAN,
    sale_team_id INTEGER,
    is_apping_user BOOLEAN,
    is_login_with_any_user BOOLEAN,
    user_group_id INTEGER,
    user_types VARCHAR(100),
    is_lhdn_admin BOOLEAN,
    mail_alert BOOLEAN,
    login_access INTEGER,
    locked_until TIMESTAMP,
    oauth_provider_id INTEGER,
    oauth_uid VARCHAR(100),
    oauth_access_token VARCHAR(100),
    website_id INTEGER,
    passcode VARCHAR(100),
    is_reg_tc BOOLEAN,
    is_user_tc BOOLEAN,
    is_company_owner BOOLEAN,
    sidebar_type VARCHAR(100)
);

Return only the SQL query without explanation.
SELECT *
FROM pos_order_line
WHERE discount > 20;",
"SCHEMA:
TABLE pos_order(id, date_order)
TABLE pos_order_line(id, order_id, product_id, qty)
TABLE product_product(id, product_tmpl_id)
TABLE product_template(id, name)

Prompt: You are an expert SQL developer.

Convert the following natural language request into a single SQL SELECT query.
Use only the schema provided below and do not make assumptions beyond it.

only take table and field from given scheme no other is allowed

Natural Language Request:
List all cancelled POS orders in the last 7 days.

Database Schema:
CREATE TABLE pos_order (
    id INT PRIMARY KEY,
    user_id INTEGER,
    company_id INTEGER,
    pricelist_id INTEGER,
    partner_id INTEGER,
    sequence_number INTEGER,
    session_id INTEGER,
    config_id INTEGER,
    account_move INTEGER,
    procurement_group_id INTEGER,
    nb_print INTEGER,
    sale_journal INTEGER,
    fiscal_position_id INTEGER,
    name VARCHAR(100),
    last_order_preparation_change VARCHAR(100),
    state VARCHAR(100),
    pos_reference VARCHAR(100),
    ticket_code VARCHAR(100),
    shipping_date DATE,
    note VARCHAR(500),
    amount_tax DECIMAL(18, 4),
    amount_total DECIMAL(18, 4),
    amount_paid DECIMAL(18, 4),
    amount_return DECIMAL(18, 4),
    currency_rate DECIMAL(18, 4),
    tip_amount DECIMAL(18, 4),
    to_invoice BOOLEAN,
    is_tipped BOOLEAN,
    date_order TIMESTAMP,
    employee_id INTEGER,
    cashier VARCHAR(100),
    next_online_payment_amount DECIMAL(18, 4),
    crm_team_id INTEGER,
    debit_note_id INTEGER,
    invoice_id_for_debit INTEGER,
    reset_sequence INTEGER,
    my_invoice_status TEXT,
    invoice_type VARCHAR(100),
    reference_inv_id VARCHAR(500),
    response_msg VARCHAR(500),
    invalid_msg VARCHAR(500),
    is_submit_document BOOLEAN,
    is_debit_note BOOLEAN,
    is_credit_note BOOLEAN,
    is_consolidate BOOLEAN,
    validation_date_time TIMESTAMP,
    credit_check BOOLEAN,
    is_submit_in_pos BOOLEAN,
    is_hide_payment_debit BOOLEAN,
    is_hide_payment_credit BOOLEAN,
    formatted_date_order VARCHAR(100),
    is_hide_reverse_consolidation BOOLEAN,
    main_order_id INTEGER,
    main_order_pos_reference VARCHAR(100)
);

CREATE TABLE pos_order_line (
    id INT PRIMARY KEY,
    company_id INTEGER,
    product_id INTEGER,
    order_id INTEGER,
    refunded_orderline_id INTEGER,
    combo_parent_id INTEGER,
    name VARCHAR(100),
    notice VARCHAR(100),
    full_product_name VARCHAR(100),
    customer_note VARCHAR(100),
    price_unit DECIMAL(18, 4),
    qty DECIMAL(18, 4),
    price_subtotal DECIMAL(18, 4),
    price_subtotal_incl DECIMAL(18, 4),
    total_cost DECIMAL(18, 4),
    discount DECIMAL(18, 4),
    skip_change BOOLEAN,
    is_total_cost_computed BOOLEAN,
    price_extra FLOAT,
    sale_order_origin_id INTEGER,
    sale_order_line_id INTEGER,
    down_payment_details VARCHAR(500),
    discount_amount FLOAT,
    credit_note_discount FLOAT
);

CREATE TABLE product_product (
    id INT PRIMARY KEY,
    product_tmpl_id INTEGER,
    default_code VARCHAR(100),
    barcode VARCHAR(100),
    combination_indices VARCHAR(100),
    volume DECIMAL(18, 4),
    weight DECIMAL(18, 4),
    can_image_variant_1024_be_zoomed BOOLEAN,
    lot_properties_definition TEXT,
    classification_code_id INTEGER
);

CREATE TABLE product_template (
    id INT PRIMARY KEY,
    categ_id INTEGER,
    uom_id INTEGER,
    uom_po_id INTEGER,
    company_id INTEGER,
    detailed_type VARCHAR(100),
    type VARCHAR(100),
    default_code VARCHAR(100),
    priority VARCHAR(100),
    name VARCHAR(100),
    description VARCHAR(500),
    description_purchase TEXT,
    description_sale TEXT,
    product_properties TEXT,
    list_price DECIMAL(18, 4),
    volume DECIMAL(18, 4),
    weight DECIMAL(18, 4),
    sale_ok BOOLEAN,
    purchase_ok BOOLEAN,
    can_image_1024_be_zoomed BOOLEAN,
    has_configurable_attributes BOOLEAN,
    sale_delay INTEGER,
    tracking VARCHAR(100),
    description_picking TEXT,
    description_pickingout TEXT,
    description_pickingin TEXT,
    service_type VARCHAR(100),
    sale_line_warn VARCHAR(100),
    expense_policy VARCHAR(100),
    invoice_policy VARCHAR(100),
    sale_line_warn_msg VARCHAR(500),
    purchase_method VARCHAR(100),
    purchase_line_warn VARCHAR(100),
    purchase_line_warn_msg VARCHAR(500),
    available_in_pos BOOLEAN,
    to_weight BOOLEAN,
    classification_code_id INTEGER,
    unit_measurement_code_id INTEGER,
    service_tracking VARCHAR(100),
    product_classification VARCHAR(100),
    split_method_landed_cost VARCHAR(100),
    landed_cost_ok BOOLEAN,
    is_data_product BOOLEAN,
    alert_min_qty FLOAT
);

CREATE TABLE res_partner (
    id INT PRIMARY KEY,
    company_id INTEGER,
    name VARCHAR(100),
    title INTEGER,
    parent_id INTEGER,
    user_id INTEGER,
    state_id INTEGER,
    country_id INTEGER,
    industry_id INTEGER,
    commercial_partner_id INTEGER,
    complete_name VARCHAR(100),
    ref VARCHAR(100),
    lang VARCHAR(100),
    tz VARCHAR(100),
    vat VARCHAR(100),
    company_registry VARCHAR(100),
    website VARCHAR(100),
    function VARCHAR(100),
    type VARCHAR(100),
    street VARCHAR(100),
    street2 VARCHAR(100),
    zip VARCHAR(100),
    city VARCHAR(100),
    email VARCHAR(100),
    phone VARCHAR(100),
    mobile VARCHAR(100),
    commercial_company_name VARCHAR(100),
    company_name VARCHAR(100),
    date DATE,
    comment VARCHAR(500),
    partner_latitude DECIMAL(18, 4),
    partner_longitude DECIMAL(18, 4),
    employee BOOLEAN,
    is_company BOOLEAN,
    partner_share BOOLEAN,
    message_bounce INTEGER,
    email_normalized VARCHAR(100),
    signup_type VARCHAR(100),
    signup_expiration TIMESTAMP,
    signup_token VARCHAR(100),
    team_id INTEGER,
    phone_sanitized VARCHAR(100),
    supplier_rank INTEGER,
    customer_rank INTEGER,
    invoice_warn VARCHAR(100),
    invoice_warn_msg VARCHAR(500),
    debit_limit DECIMAL(18, 4),
    last_time_entries_checked TIMESTAMP,
    picking_warn VARCHAR(100),
    picking_warn_msg VARCHAR(500),
    ubl_cii_format VARCHAR(100),
    peppol_endpoint VARCHAR(100),
    peppol_eas VARCHAR(100),
    sale_warn VARCHAR(100),
    sale_warn_msg VARCHAR(500),
    payment_responsible_id INTEGER,
    latest_followup_sequence INTEGER,
    payment_next_action_date DATE,
    payment_note VARCHAR(500),
    payment_next_action VARCHAR(500),
    website_id INTEGER,
    is_published BOOLEAN,
    buyer_id INTEGER,
    purchase_warn VARCHAR(100),
    purchase_warn_msg VARCHAR(500),
    city_id INTEGER,
    post_code_id INTEGER,
    nric VARCHAR(100),
    state VARCHAR(100),
    id_type VARCHAR(100),
    malay_and_no_malay VARCHAR(100),
    sst VARCHAR(100),
    msic_code VARCHAR(100),
    ttx VARCHAR(100),
    b_act_des_bn VARCHAR(100),
    b_act_des_en VARCHAR(100),
    street_3 VARCHAR(100),
    error_message VARCHAR(500),
    is_malaysia BOOLEAN,
    is_non_malaysian BOOLEAN,
    is_government BOOLEAN,
    is_portal_data_submit BOOLEAN,
    is_supplier BOOLEAN,
    qr_generated_timestamp TIMESTAMP,
    personal_tin VARCHAR(100),
    company_tin VARCHAR(100),
    business_reg_number VARCHAR(100),
    custom_credit DECIMAL(18, 4),
    is_general_partner BOOLEAN,
    internal_notes VARCHAR(500),
    nric_label VARCHAR(100),
    msic_code_id INTEGER,
    self_bill_for_supplier BOOLEAN
);

CREATE TABLE res_users (
    id INT PRIMARY KEY,
    company_id INTEGER,
    partner_id INTEGER,
    login VARCHAR(100),
    password VARCHAR(100),
    action_id INTEGER,
    signature VARCHAR(500),
    share BOOLEAN,
    totp_secret VARCHAR(100),
    notification_type VARCHAR(100),
    odoobot_state VARCHAR(100),
    odoobot_failed BOOLEAN,
    sale_team_id INTEGER,
    is_apping_user BOOLEAN,
    is_login_with_any_user BOOLEAN,
    user_group_id INTEGER,
    user_types VARCHAR(100),
    is_lhdn_admin BOOLEAN,
    mail_alert BOOLEAN,
    login_access INTEGER,
    locked_until TIMESTAMP,
    oauth_provider_id INTEGER,
    oauth_uid VARCHAR(100),
    oauth_access_token VARCHAR(100),
    website_id INTEGER,
    passcode VARCHAR(100),
    is_reg_tc BOOLEAN,
    is_user_tc BOOLEAN,
    is_company_owner BOOLEAN,
    sidebar_type VARCHAR(100)
);

Return only the SQL query without explanation.
SELECT *
FROM pos_order
WHERE state = 'cancel' AND date_order >= CURRENT_DATE - INTERVAL '7 days';",
"SCHEMA:
TABLE pos_order(id, date_order)
TABLE pos_order_line(id, order_id, product_id, qty)
TABLE product_product(id, product_tmpl_id)
TABLE product_template(id, name)

Prompt: You are an expert SQL developer.

Convert the following natural language request into a single SQL SELECT query.
Use only the schema provided below and do not make assumptions beyond it.

only take table and field from given scheme no other is allowed

Natural Language Request:
Which product has the highest return/refund rate?

Database Schema:
CREATE TABLE pos_order (
    id INT PRIMARY KEY,
    user_id INTEGER,
    company_id INTEGER,
    pricelist_id INTEGER,
    partner_id INTEGER,
    sequence_number INTEGER,
    session_id INTEGER,
    config_id INTEGER,
    account_move INTEGER,
    procurement_group_id INTEGER,
    nb_print INTEGER,
    sale_journal INTEGER,
    fiscal_position_id INTEGER,
    name VARCHAR(100),
    last_order_preparation_change VARCHAR(100),
    state VARCHAR(100),
    pos_reference VARCHAR(100),
    ticket_code VARCHAR(100),
    shipping_date DATE,
    note VARCHAR(500),
    amount_tax DECIMAL(18, 4),
    amount_total DECIMAL(18, 4),
    amount_paid DECIMAL(18, 4),
    amount_return DECIMAL(18, 4),
    currency_rate DECIMAL(18, 4),
    tip_amount DECIMAL(18, 4),
    to_invoice BOOLEAN,
    is_tipped BOOLEAN,
    date_order TIMESTAMP,
    employee_id INTEGER,
    cashier VARCHAR(100),
    next_online_payment_amount DECIMAL(18, 4),
    crm_team_id INTEGER,
    debit_note_id INTEGER,
    invoice_id_for_debit INTEGER,
    reset_sequence INTEGER,
    my_invoice_status TEXT,
    invoice_type VARCHAR(100),
    reference_inv_id VARCHAR(500),
    response_msg VARCHAR(500),
    invalid_msg VARCHAR(500),
    is_submit_document BOOLEAN,
    is_debit_note BOOLEAN,
    is_credit_note BOOLEAN,
    is_consolidate BOOLEAN,
    validation_date_time TIMESTAMP,
    credit_check BOOLEAN,
    is_submit_in_pos BOOLEAN,
    is_hide_payment_debit BOOLEAN,
    is_hide_payment_credit BOOLEAN,
    formatted_date_order VARCHAR(100),
    is_hide_reverse_consolidation BOOLEAN,
    main_order_id INTEGER,
    main_order_pos_reference VARCHAR(100)
);

CREATE TABLE pos_order_line (
    id INT PRIMARY KEY,
    company_id INTEGER,
    product_id INTEGER,
    order_id INTEGER,
    refunded_orderline_id INTEGER,
    combo_parent_id INTEGER,
    name VARCHAR(100),
    notice VARCHAR(100),
    full_product_name VARCHAR(100),
    customer_note VARCHAR(100),
    price_unit DECIMAL(18, 4),
    qty DECIMAL(18, 4),
    price_subtotal DECIMAL(18, 4),
    price_subtotal_incl DECIMAL(18, 4),
    total_cost DECIMAL(18, 4),
    discount DECIMAL(18, 4),
    skip_change BOOLEAN,
    is_total_cost_computed BOOLEAN,
    price_extra FLOAT,
    sale_order_origin_id INTEGER,
    sale_order_line_id INTEGER,
    down_payment_details VARCHAR(500),
    discount_amount FLOAT,
    credit_note_discount FLOAT
);

CREATE TABLE product_product (
    id INT PRIMARY KEY,
    product_tmpl_id INTEGER,
    default_code VARCHAR(100),
    barcode VARCHAR(100),
    combination_indices VARCHAR(100),
    volume DECIMAL(18, 4),
    weight DECIMAL(18, 4),
    can_image_variant_1024_be_zoomed BOOLEAN,
    lot_properties_definition TEXT,
    classification_code_id INTEGER
);

CREATE TABLE product_template (
    id INT PRIMARY KEY,
    categ_id INTEGER,
    uom_id INTEGER,
    uom_po_id INTEGER,
    company_id INTEGER,
    detailed_type VARCHAR(100),
    type VARCHAR(100),
    default_code VARCHAR(100),
    priority VARCHAR(100),
    name VARCHAR(100),
    description VARCHAR(500),
    description_purchase TEXT,
    description_sale TEXT,
    product_properties TEXT,
    list_price DECIMAL(18, 4),
    volume DECIMAL(18, 4),
    weight DECIMAL(18, 4),
    sale_ok BOOLEAN,
    purchase_ok BOOLEAN,
    can_image_1024_be_zoomed BOOLEAN,
    has_configurable_attributes BOOLEAN,
    sale_delay INTEGER,
    tracking VARCHAR(100),
    description_picking TEXT,
    description_pickingout TEXT,
    description_pickingin TEXT,
    service_type VARCHAR(100),
    sale_line_warn VARCHAR(100),
    expense_policy VARCHAR(100),
    invoice_policy VARCHAR(100),
    sale_line_warn_msg VARCHAR(500),
    purchase_method VARCHAR(100),
    purchase_line_warn VARCHAR(100),
    purchase_line_warn_msg VARCHAR(500),
    available_in_pos BOOLEAN,
    to_weight BOOLEAN,
    classification_code_id INTEGER,
    unit_measurement_code_id INTEGER,
    service_tracking VARCHAR(100),
    product_classification VARCHAR(100),
    split_method_landed_cost VARCHAR(100),
    landed_cost_ok BOOLEAN,
    is_data_product BOOLEAN,
    alert_min_qty FLOAT
);

CREATE TABLE res_partner (
    id INT PRIMARY KEY,
    company_id INTEGER,
    name VARCHAR(100),
    title INTEGER,
    parent_id INTEGER,
    user_id INTEGER,
    state_id INTEGER,
    country_id INTEGER,
    industry_id INTEGER,
    commercial_partner_id INTEGER,
    complete_name VARCHAR(100),
    ref VARCHAR(100),
    lang VARCHAR(100),
    tz VARCHAR(100),
    vat VARCHAR(100),
    company_registry VARCHAR(100),
    website VARCHAR(100),
    function VARCHAR(100),
    type VARCHAR(100),
    street VARCHAR(100),
    street2 VARCHAR(100),
    zip VARCHAR(100),
    city VARCHAR(100),
    email VARCHAR(100),
    phone VARCHAR(100),
    mobile VARCHAR(100),
    commercial_company_name VARCHAR(100),
    company_name VARCHAR(100),
    date DATE,
    comment VARCHAR(500),
    partner_latitude DECIMAL(18, 4),
    partner_longitude DECIMAL(18, 4),
    employee BOOLEAN,
    is_company BOOLEAN,
    partner_share BOOLEAN,
    message_bounce INTEGER,
    email_normalized VARCHAR(100),
    signup_type VARCHAR(100),
    signup_expiration TIMESTAMP,
    signup_token VARCHAR(100),
    team_id INTEGER,
    phone_sanitized VARCHAR(100),
    supplier_rank INTEGER,
    customer_rank INTEGER,
    invoice_warn VARCHAR(100),
    invoice_warn_msg VARCHAR(500),
    debit_limit DECIMAL(18, 4),
    last_time_entries_checked TIMESTAMP,
    picking_warn VARCHAR(100),
    picking_warn_msg VARCHAR(500),
    ubl_cii_format VARCHAR(100),
    peppol_endpoint VARCHAR(100),
    peppol_eas VARCHAR(100),
    sale_warn VARCHAR(100),
    sale_warn_msg VARCHAR(500),
    payment_responsible_id INTEGER,
    latest_followup_sequence INTEGER,
    payment_next_action_date DATE,
    payment_note VARCHAR(500),
    payment_next_action VARCHAR(500),
    website_id INTEGER,
    is_published BOOLEAN,
    buyer_id INTEGER,
    purchase_warn VARCHAR(100),
    purchase_warn_msg VARCHAR(500),
    city_id INTEGER,
    post_code_id INTEGER,
    nric VARCHAR(100),
    state VARCHAR(100),
    id_type VARCHAR(100),
    malay_and_no_malay VARCHAR(100),
    sst VARCHAR(100),
    msic_code VARCHAR(100),
    ttx VARCHAR(100),
    b_act_des_bn VARCHAR(100),
    b_act_des_en VARCHAR(100),
    street_3 VARCHAR(100),
    error_message VARCHAR(500),
    is_malaysia BOOLEAN,
    is_non_malaysian BOOLEAN,
    is_government BOOLEAN,
    is_portal_data_submit BOOLEAN,
    is_supplier BOOLEAN,
    qr_generated_timestamp TIMESTAMP,
    personal_tin VARCHAR(100),
    company_tin VARCHAR(100),
    business_reg_number VARCHAR(100),
    custom_credit DECIMAL(18, 4),
    is_general_partner BOOLEAN,
    internal_notes VARCHAR(500),
    nric_label VARCHAR(100),
    msic_code_id INTEGER,
    self_bill_for_supplier BOOLEAN
);

CREATE TABLE res_users (
    id INT PRIMARY KEY,
    company_id INTEGER,
    partner_id INTEGER,
    login VARCHAR(100),
    password VARCHAR(100),
    action_id INTEGER,
    signature VARCHAR(500),
    share BOOLEAN,
    totp_secret VARCHAR(100),
    notification_type VARCHAR(100),
    odoobot_state VARCHAR(100),
    odoobot_failed BOOLEAN,
    sale_team_id INTEGER,
    is_apping_user BOOLEAN,
    is_login_with_any_user BOOLEAN,
    user_group_id INTEGER,
    user_types VARCHAR(100),
    is_lhdn_admin BOOLEAN,
    mail_alert BOOLEAN,
    login_access INTEGER,
    locked_until TIMESTAMP,
    oauth_provider_id INTEGER,
    oauth_uid VARCHAR(100),
    oauth_access_token VARCHAR(100),
    website_id INTEGER,
    passcode VARCHAR(100),
    is_reg_tc BOOLEAN,
    is_user_tc BOOLEAN,
    is_company_owner BOOLEAN,
    sidebar_type VARCHAR(100)
);

Return only the SQL query without explanation.
SELECT product_id, 
       SUM(CASE WHEN refunded_orderline_id IS NOT NULL THEN 1 ELSE 0 END)::FLOAT / COUNT(*) AS return_rate
FROM pos_order_line
GROUP BY product_id
ORDER BY return_rate DESC
LIMIT 1;",
"SCHEMA:
TABLE pos_order(id, date_order)
TABLE pos_order_line(id, order_id, product_id, qty)
TABLE product_product(id, product_tmpl_id)
TABLE product_template(id, name)

Prompt: You are an expert SQL developer.

Convert the following natural language request into a single SQL SELECT query.
Use only the schema provided below and do not make assumptions beyond it.

only take table and field from given scheme no other is allowed

Natural Language Request:
Show me all orders processed by John Doe between June 1 and June 15.

Database Schema:
CREATE TABLE pos_order (
    id INT PRIMARY KEY,
    user_id INTEGER,
    company_id INTEGER,
    pricelist_id INTEGER,
    partner_id INTEGER,
    sequence_number INTEGER,
    session_id INTEGER,
    config_id INTEGER,
    account_move INTEGER,
    procurement_group_id INTEGER,
    nb_print INTEGER,
    sale_journal INTEGER,
    fiscal_position_id INTEGER,
    name VARCHAR(100),
    last_order_preparation_change VARCHAR(100),
    state VARCHAR(100),
    pos_reference VARCHAR(100),
    ticket_code VARCHAR(100),
    shipping_date DATE,
    note VARCHAR(500),
    amount_tax DECIMAL(18, 4),
    amount_total DECIMAL(18, 4),
    amount_paid DECIMAL(18, 4),
    amount_return DECIMAL(18, 4),
    currency_rate DECIMAL(18, 4),
    tip_amount DECIMAL(18, 4),
    to_invoice BOOLEAN,
    is_tipped BOOLEAN,
    date_order TIMESTAMP,
    employee_id INTEGER,
    cashier VARCHAR(100),
    next_online_payment_amount DECIMAL(18, 4),
    crm_team_id INTEGER,
    debit_note_id INTEGER,
    invoice_id_for_debit INTEGER,
    reset_sequence INTEGER,
    my_invoice_status TEXT,
    invoice_type VARCHAR(100),
    reference_inv_id VARCHAR(500),
    response_msg VARCHAR(500),
    invalid_msg VARCHAR(500),
    is_submit_document BOOLEAN,
    is_debit_note BOOLEAN,
    is_credit_note BOOLEAN,
    is_consolidate BOOLEAN,
    validation_date_time TIMESTAMP,
    credit_check BOOLEAN,
    is_submit_in_pos BOOLEAN,
    is_hide_payment_debit BOOLEAN,
    is_hide_payment_credit BOOLEAN,
    formatted_date_order VARCHAR(100),
    is_hide_reverse_consolidation BOOLEAN,
    main_order_id INTEGER,
    main_order_pos_reference VARCHAR(100)
);

CREATE TABLE pos_order_line (
    id INT PRIMARY KEY,
    company_id INTEGER,
    product_id INTEGER,
    order_id INTEGER,
    refunded_orderline_id INTEGER,
    combo_parent_id INTEGER,
    name VARCHAR(100),
    notice VARCHAR(100),
    full_product_name VARCHAR(100),
    customer_note VARCHAR(100),
    price_unit DECIMAL(18, 4),
    qty DECIMAL(18, 4),
    price_subtotal DECIMAL(18, 4),
    price_subtotal_incl DECIMAL(18, 4),
    total_cost DECIMAL(18, 4),
    discount DECIMAL(18, 4),
    skip_change BOOLEAN,
    is_total_cost_computed BOOLEAN,
    price_extra FLOAT,
    sale_order_origin_id INTEGER,
    sale_order_line_id INTEGER,
    down_payment_details VARCHAR(500),
    discount_amount FLOAT,
    credit_note_discount FLOAT
);

CREATE TABLE product_product (
    id INT PRIMARY KEY,
    product_tmpl_id INTEGER,
    default_code VARCHAR(100),
    barcode VARCHAR(100),
    combination_indices VARCHAR(100),
    volume DECIMAL(18, 4),
    weight DECIMAL(18, 4),
    can_image_variant_1024_be_zoomed BOOLEAN,
    lot_properties_definition TEXT,
    classification_code_id INTEGER
);

CREATE TABLE product_template (
    id INT PRIMARY KEY,
    categ_id INTEGER,
    uom_id INTEGER,
    uom_po_id INTEGER,
    company_id INTEGER,
    detailed_type VARCHAR(100),
    type VARCHAR(100),
    default_code VARCHAR(100),
    priority VARCHAR(100),
    name VARCHAR(100),
    description VARCHAR(500),
    description_purchase TEXT,
    description_sale TEXT,
    product_properties TEXT,
    list_price DECIMAL(18, 4),
    volume DECIMAL(18, 4),
    weight DECIMAL(18, 4),
    sale_ok BOOLEAN,
    purchase_ok BOOLEAN,
    can_image_1024_be_zoomed BOOLEAN,
    has_configurable_attributes BOOLEAN,
    sale_delay INTEGER,
    tracking VARCHAR(100),
    description_picking TEXT,
    description_pickingout TEXT,
    description_pickingin TEXT,
    service_type VARCHAR(100),
    sale_line_warn VARCHAR(100),
    expense_policy VARCHAR(100),
    invoice_policy VARCHAR(100),
    sale_line_warn_msg VARCHAR(500),
    purchase_method VARCHAR(100),
    purchase_line_warn VARCHAR(100),
    purchase_line_warn_msg VARCHAR(500),
    available_in_pos BOOLEAN,
    to_weight BOOLEAN,
    classification_code_id INTEGER,
    unit_measurement_code_id INTEGER,
    service_tracking VARCHAR(100),
    product_classification VARCHAR(100),
    split_method_landed_cost VARCHAR(100),
    landed_cost_ok BOOLEAN,
    is_data_product BOOLEAN,
    alert_min_qty FLOAT
);

CREATE TABLE res_partner (
    id INT PRIMARY KEY,
    company_id INTEGER,
    name VARCHAR(100),
    title INTEGER,
    parent_id INTEGER,
    user_id INTEGER,
    state_id INTEGER,
    country_id INTEGER,
    industry_id INTEGER,
    commercial_partner_id INTEGER,
    complete_name VARCHAR(100),
    ref VARCHAR(100),
    lang VARCHAR(100),
    tz VARCHAR(100),
    vat VARCHAR(100),
    company_registry VARCHAR(100),
    website VARCHAR(100),
    function VARCHAR(100),
    type VARCHAR(100),
    street VARCHAR(100),
    street2 VARCHAR(100),
    zip VARCHAR(100),
    city VARCHAR(100),
    email VARCHAR(100),
    phone VARCHAR(100),
    mobile VARCHAR(100),
    commercial_company_name VARCHAR(100),
    company_name VARCHAR(100),
    date DATE,
    comment VARCHAR(500),
    partner_latitude DECIMAL(18, 4),
    partner_longitude DECIMAL(18, 4),
    employee BOOLEAN,
    is_company BOOLEAN,
    partner_share BOOLEAN,
    message_bounce INTEGER,
    email_normalized VARCHAR(100),
    signup_type VARCHAR(100),
    signup_expiration TIMESTAMP,
    signup_token VARCHAR(100),
    team_id INTEGER,
    phone_sanitized VARCHAR(100),
    supplier_rank INTEGER,
    customer_rank INTEGER,
    invoice_warn VARCHAR(100),
    invoice_warn_msg VARCHAR(500),
    debit_limit DECIMAL(18, 4),
    last_time_entries_checked TIMESTAMP,
    picking_warn VARCHAR(100),
    picking_warn_msg VARCHAR(500),
    ubl_cii_format VARCHAR(100),
    peppol_endpoint VARCHAR(100),
    peppol_eas VARCHAR(100),
    sale_warn VARCHAR(100),
    sale_warn_msg VARCHAR(500),
    payment_responsible_id INTEGER,
    latest_followup_sequence INTEGER,
    payment_next_action_date DATE,
    payment_note VARCHAR(500),
    payment_next_action VARCHAR(500),
    website_id INTEGER,
    is_published BOOLEAN,
    buyer_id INTEGER,
    purchase_warn VARCHAR(100),
    purchase_warn_msg VARCHAR(500),
    city_id INTEGER,
    post_code_id INTEGER,
    nric VARCHAR(100),
    state VARCHAR(100),
    id_type VARCHAR(100),
    malay_and_no_malay VARCHAR(100),
    sst VARCHAR(100),
    msic_code VARCHAR(100),
    ttx VARCHAR(100),
    b_act_des_bn VARCHAR(100),
    b_act_des_en VARCHAR(100),
    street_3 VARCHAR(100),
    error_message VARCHAR(500),
    is_malaysia BOOLEAN,
    is_non_malaysian BOOLEAN,
    is_government BOOLEAN,
    is_portal_data_submit BOOLEAN,
    is_supplier BOOLEAN,
    qr_generated_timestamp TIMESTAMP,
    personal_tin VARCHAR(100),
    company_tin VARCHAR(100),
    business_reg_number VARCHAR(100),
    custom_credit DECIMAL(18, 4),
    is_general_partner BOOLEAN,
    internal_notes VARCHAR(500),
    nric_label VARCHAR(100),
    msic_code_id INTEGER,
    self_bill_for_supplier BOOLEAN
);

CREATE TABLE res_users (
    id INT PRIMARY KEY,
    company_id INTEGER,
    partner_id INTEGER,
    login VARCHAR(100),
    password VARCHAR(100),
    action_id INTEGER,
    signature VARCHAR(500),
    share BOOLEAN,
    totp_secret VARCHAR(100),
    notification_type VARCHAR(100),
    odoobot_state VARCHAR(100),
    odoobot_failed BOOLEAN,
    sale_team_id INTEGER,
    is_apping_user BOOLEAN,
    is_login_with_any_user BOOLEAN,
    user_group_id INTEGER,
    user_types VARCHAR(100),
    is_lhdn_admin BOOLEAN,
    mail_alert BOOLEAN,
    login_access INTEGER,
    locked_until TIMESTAMP,
    oauth_provider_id INTEGER,
    oauth_uid VARCHAR(100),
    oauth_access_token VARCHAR(100),
    website_id INTEGER,
    passcode VARCHAR(100),
    is_reg_tc BOOLEAN,
    is_user_tc BOOLEAN,
    is_company_owner BOOLEAN,
    sidebar_type VARCHAR(100)
);

Return only the SQL query without explanation.
SELECT *
FROM pos_order
WHERE cashier = 'John Doe' AND date_order BETWEEN '2025-06-01' AND '2025-06-15';",
"SCHEMA:
TABLE pos_order(id, date_order)
TABLE pos_order_line(id, order_id, product_id, qty)
TABLE product_product(id, product_tmpl_id)
TABLE product_template(id, name)

Prompt: You are an expert SQL developer.

Convert the following natural language request into a single SQL SELECT query.
Use only the schema provided below and do not make assumptions beyond it.

only take table and field from given scheme no other is allowed

Natural Language Request:
Give me a breakdown of sales by payment method (cash, card, etc.).

Database Schema:
CREATE TABLE pos_order (
    id INT PRIMARY KEY,
    user_id INTEGER,
    company_id INTEGER,
    pricelist_id INTEGER,
    partner_id INTEGER,
    sequence_number INTEGER,
    session_id INTEGER,
    config_id INTEGER,
    account_move INTEGER,
    procurement_group_id INTEGER,
    nb_print INTEGER,
    sale_journal INTEGER,
    fiscal_position_id INTEGER,
    name VARCHAR(100),
    last_order_preparation_change VARCHAR(100),
    state VARCHAR(100),
    pos_reference VARCHAR(100),
    ticket_code VARCHAR(100),
    shipping_date DATE,
    note VARCHAR(500),
    amount_tax DECIMAL(18, 4),
    amount_total DECIMAL(18, 4),
    amount_paid DECIMAL(18, 4),
    amount_return DECIMAL(18, 4),
    currency_rate DECIMAL(18, 4),
    tip_amount DECIMAL(18, 4),
    to_invoice BOOLEAN,
    is_tipped BOOLEAN,
    date_order TIMESTAMP,
    employee_id INTEGER,
    cashier VARCHAR(100),
    next_online_payment_amount DECIMAL(18, 4),
    crm_team_id INTEGER,
    debit_note_id INTEGER,
    invoice_id_for_debit INTEGER,
    reset_sequence INTEGER,
    my_invoice_status TEXT,
    invoice_type VARCHAR(100),
    reference_inv_id VARCHAR(500),
    response_msg VARCHAR(500),
    invalid_msg VARCHAR(500),
    is_submit_document BOOLEAN,
    is_debit_note BOOLEAN,
    is_credit_note BOOLEAN,
    is_consolidate BOOLEAN,
    validation_date_time TIMESTAMP,
    credit_check BOOLEAN,
    is_submit_in_pos BOOLEAN,
    is_hide_payment_debit BOOLEAN,
    is_hide_payment_credit BOOLEAN,
    formatted_date_order VARCHAR(100),
    is_hide_reverse_consolidation BOOLEAN,
    main_order_id INTEGER,
    main_order_pos_reference VARCHAR(100)
);

CREATE TABLE pos_order_line (
    id INT PRIMARY KEY,
    company_id INTEGER,
    product_id INTEGER,
    order_id INTEGER,
    refunded_orderline_id INTEGER,
    combo_parent_id INTEGER,
    name VARCHAR(100),
    notice VARCHAR(100),
    full_product_name VARCHAR(100),
    customer_note VARCHAR(100),
    price_unit DECIMAL(18, 4),
    qty DECIMAL(18, 4),
    price_subtotal DECIMAL(18, 4),
    price_subtotal_incl DECIMAL(18, 4),
    total_cost DECIMAL(18, 4),
    discount DECIMAL(18, 4),
    skip_change BOOLEAN,
    is_total_cost_computed BOOLEAN,
    price_extra FLOAT,
    sale_order_origin_id INTEGER,
    sale_order_line_id INTEGER,
    down_payment_details VARCHAR(500),
    discount_amount FLOAT,
    credit_note_discount FLOAT
);

CREATE TABLE product_product (
    id INT PRIMARY KEY,
    product_tmpl_id INTEGER,
    default_code VARCHAR(100),
    barcode VARCHAR(100),
    combination_indices VARCHAR(100),
    volume DECIMAL(18, 4),
    weight DECIMAL(18, 4),
    can_image_variant_1024_be_zoomed BOOLEAN,
    lot_properties_definition TEXT,
    classification_code_id INTEGER
);

CREATE TABLE product_template (
    id INT PRIMARY KEY,
    categ_id INTEGER,
    uom_id INTEGER,
    uom_po_id INTEGER,
    company_id INTEGER,
    detailed_type VARCHAR(100),
    type VARCHAR(100),
    default_code VARCHAR(100),
    priority VARCHAR(100),
    name VARCHAR(100),
    description VARCHAR(500),
    description_purchase TEXT,
    description_sale TEXT,
    product_properties TEXT,
    list_price DECIMAL(18, 4),
    volume DECIMAL(18, 4),
    weight DECIMAL(18, 4),
    sale_ok BOOLEAN,
    purchase_ok BOOLEAN,
    can_image_1024_be_zoomed BOOLEAN,
    has_configurable_attributes BOOLEAN,
    sale_delay INTEGER,
    tracking VARCHAR(100),
    description_picking TEXT,
    description_pickingout TEXT,
    description_pickingin TEXT,
    service_type VARCHAR(100),
    sale_line_warn VARCHAR(100),
    expense_policy VARCHAR(100),
    invoice_policy VARCHAR(100),
    sale_line_warn_msg VARCHAR(500),
    purchase_method VARCHAR(100),
    purchase_line_warn VARCHAR(100),
    purchase_line_warn_msg VARCHAR(500),
    available_in_pos BOOLEAN,
    to_weight BOOLEAN,
    classification_code_id INTEGER,
    unit_measurement_code_id INTEGER,
    service_tracking VARCHAR(100),
    product_classification VARCHAR(100),
    split_method_landed_cost VARCHAR(100),
    landed_cost_ok BOOLEAN,
    is_data_product BOOLEAN,
    alert_min_qty FLOAT
);

CREATE TABLE res_partner (
    id INT PRIMARY KEY,
    company_id INTEGER,
    name VARCHAR(100),
    title INTEGER,
    parent_id INTEGER,
    user_id INTEGER,
    state_id INTEGER,
    country_id INTEGER,
    industry_id INTEGER,
    commercial_partner_id INTEGER,
    complete_name VARCHAR(100),
    ref VARCHAR(100),
    lang VARCHAR(100),
    tz VARCHAR(100),
    vat VARCHAR(100),
    company_registry VARCHAR(100),
    website VARCHAR(100),
    function VARCHAR(100),
    type VARCHAR(100),
    street VARCHAR(100),
    street2 VARCHAR(100),
    zip VARCHAR(100),
    city VARCHAR(100),
    email VARCHAR(100),
    phone VARCHAR(100),
    mobile VARCHAR(100),
    commercial_company_name VARCHAR(100),
    company_name VARCHAR(100),
    date DATE,
    comment VARCHAR(500),
    partner_latitude DECIMAL(18, 4),
    partner_longitude DECIMAL(18, 4),
    employee BOOLEAN,
    is_company BOOLEAN,
    partner_share BOOLEAN,
    message_bounce INTEGER,
    email_normalized VARCHAR(100),
    signup_type VARCHAR(100),
    signup_expiration TIMESTAMP,
    signup_token VARCHAR(100),
    team_id INTEGER,
    phone_sanitized VARCHAR(100),
    supplier_rank INTEGER,
    customer_rank INTEGER,
    invoice_warn VARCHAR(100),
    invoice_warn_msg VARCHAR(500),
    debit_limit DECIMAL(18, 4),
    last_time_entries_checked TIMESTAMP,
    picking_warn VARCHAR(100),
    picking_warn_msg VARCHAR(500),
    ubl_cii_format VARCHAR(100),
    peppol_endpoint VARCHAR(100),
    peppol_eas VARCHAR(100),
    sale_warn VARCHAR(100),
    sale_warn_msg VARCHAR(500),
    payment_responsible_id INTEGER,
    latest_followup_sequence INTEGER,
    payment_next_action_date DATE,
    payment_note VARCHAR(500),
    payment_next_action VARCHAR(500),
    website_id INTEGER,
    is_published BOOLEAN,
    buyer_id INTEGER,
    purchase_warn VARCHAR(100),
    purchase_warn_msg VARCHAR(500),
    city_id INTEGER,
    post_code_id INTEGER,
    nric VARCHAR(100),
    state VARCHAR(100),
    id_type VARCHAR(100),
    malay_and_no_malay VARCHAR(100),
    sst VARCHAR(100),
    msic_code VARCHAR(100),
    ttx VARCHAR(100),
    b_act_des_bn VARCHAR(100),
    b_act_des_en VARCHAR(100),
    street_3 VARCHAR(100),
    error_message VARCHAR(500),
    is_malaysia BOOLEAN,
    is_non_malaysian BOOLEAN,
    is_government BOOLEAN,
    is_portal_data_submit BOOLEAN,
    is_supplier BOOLEAN,
    qr_generated_timestamp TIMESTAMP,
    personal_tin VARCHAR(100),
    company_tin VARCHAR(100),
    business_reg_number VARCHAR(100),
    custom_credit DECIMAL(18, 4),
    is_general_partner BOOLEAN,
    internal_notes VARCHAR(500),
    nric_label VARCHAR(100),
    msic_code_id INTEGER,
    self_bill_for_supplier BOOLEAN
);

CREATE TABLE res_users (
    id INT PRIMARY KEY,
    company_id INTEGER,
    partner_id INTEGER,
    login VARCHAR(100),
    password VARCHAR(100),
    action_id INTEGER,
    signature VARCHAR(500),
    share BOOLEAN,
    totp_secret VARCHAR(100),
    notification_type VARCHAR(100),
    odoobot_state VARCHAR(100),
    odoobot_failed BOOLEAN,
    sale_team_id INTEGER,
    is_apping_user BOOLEAN,
    is_login_with_any_user BOOLEAN,
    user_group_id INTEGER,
    user_types VARCHAR(100),
    is_lhdn_admin BOOLEAN,
    mail_alert BOOLEAN,
    login_access INTEGER,
    locked_until TIMESTAMP,
    oauth_provider_id INTEGER,
    oauth_uid VARCHAR(100),
    oauth_access_token VARCHAR(100),
    website_id INTEGER,
    passcode VARCHAR(100),
    is_reg_tc BOOLEAN,
    is_user_tc BOOLEAN,
    is_company_owner BOOLEAN,
    sidebar_type VARCHAR(100)
);

Return only the SQL query without explanation.
SELECT payment_method, SUM(amount_total) AS total_sales
FROM pos_order
GROUP BY payment_method;",
"SCHEMA:
TABLE pos_order(id, date_order)
TABLE pos_order_line(id, order_id, product_id, qty)
TABLE product_product(id, product_tmpl_id)
TABLE product_template(id, name)

Prompt: You are an expert SQL developer.

Convert the following natural language request into a single SQL SELECT query.
Use only the schema provided below and do not make assumptions beyond it.

only take table and field from given scheme no other is allowed

Natural Language Request:
Who are the top 10 customers by total purchases?

Database Schema:
CREATE TABLE pos_order (
    id INT PRIMARY KEY,
    user_id INTEGER,
    company_id INTEGER,
    pricelist_id INTEGER,
    partner_id INTEGER,
    sequence_number INTEGER,
    session_id INTEGER,
    config_id INTEGER,
    account_move INTEGER,
    procurement_group_id INTEGER,
    nb_print INTEGER,
    sale_journal INTEGER,
    fiscal_position_id INTEGER,
    name VARCHAR(100),
    last_order_preparation_change VARCHAR(100),
    state VARCHAR(100),
    pos_reference VARCHAR(100),
    ticket_code VARCHAR(100),
    shipping_date DATE,
    note VARCHAR(500),
    amount_tax DECIMAL(18, 4),
    amount_total DECIMAL(18, 4),
    amount_paid DECIMAL(18, 4),
    amount_return DECIMAL(18, 4),
    currency_rate DECIMAL(18, 4),
    tip_amount DECIMAL(18, 4),
    to_invoice BOOLEAN,
    is_tipped BOOLEAN,
    date_order TIMESTAMP,
    employee_id INTEGER,
    cashier VARCHAR(100),
    next_online_payment_amount DECIMAL(18, 4),
    crm_team_id INTEGER,
    debit_note_id INTEGER,
    invoice_id_for_debit INTEGER,
    reset_sequence INTEGER,
    my_invoice_status TEXT,
    invoice_type VARCHAR(100),
    reference_inv_id VARCHAR(500),
    response_msg VARCHAR(500),
    invalid_msg VARCHAR(500),
    is_submit_document BOOLEAN,
    is_debit_note BOOLEAN,
    is_credit_note BOOLEAN,
    is_consolidate BOOLEAN,
    validation_date_time TIMESTAMP,
    credit_check BOOLEAN,
    is_submit_in_pos BOOLEAN,
    is_hide_payment_debit BOOLEAN,
    is_hide_payment_credit BOOLEAN,
    formatted_date_order VARCHAR(100),
    is_hide_reverse_consolidation BOOLEAN,
    main_order_id INTEGER,
    main_order_pos_reference VARCHAR(100)
);

CREATE TABLE pos_order_line (
    id INT PRIMARY KEY,
    company_id INTEGER,
    product_id INTEGER,
    order_id INTEGER,
    refunded_orderline_id INTEGER,
    combo_parent_id INTEGER,
    name VARCHAR(100),
    notice VARCHAR(100),
    full_product_name VARCHAR(100),
    customer_note VARCHAR(100),
    price_unit DECIMAL(18, 4),
    qty DECIMAL(18, 4),
    price_subtotal DECIMAL(18, 4),
    price_subtotal_incl DECIMAL(18, 4),
    total_cost DECIMAL(18, 4),
    discount DECIMAL(18, 4),
    skip_change BOOLEAN,
    is_total_cost_computed BOOLEAN,
    price_extra FLOAT,
    sale_order_origin_id INTEGER,
    sale_order_line_id INTEGER,
    down_payment_details VARCHAR(500),
    discount_amount FLOAT,
    credit_note_discount FLOAT
);

CREATE TABLE product_product (
    id INT PRIMARY KEY,
    product_tmpl_id INTEGER,
    default_code VARCHAR(100),
    barcode VARCHAR(100),
    combination_indices VARCHAR(100),
    volume DECIMAL(18, 4),
    weight DECIMAL(18, 4),
    can_image_variant_1024_be_zoomed BOOLEAN,
    lot_properties_definition TEXT,
    classification_code_id INTEGER
);

CREATE TABLE product_template (
    id INT PRIMARY KEY,
    categ_id INTEGER,
    uom_id INTEGER,
    uom_po_id INTEGER,
    company_id INTEGER,
    detailed_type VARCHAR(100),
    type VARCHAR(100),
    default_code VARCHAR(100),
    priority VARCHAR(100),
    name VARCHAR(100),
    description VARCHAR(500),
    description_purchase TEXT,
    description_sale TEXT,
    product_properties TEXT,
    list_price DECIMAL(18, 4),
    volume DECIMAL(18, 4),
    weight DECIMAL(18, 4),
    sale_ok BOOLEAN,
    purchase_ok BOOLEAN,
    can_image_1024_be_zoomed BOOLEAN,
    has_configurable_attributes BOOLEAN,
    sale_delay INTEGER,
    tracking VARCHAR(100),
    description_picking TEXT,
    description_pickingout TEXT,
    description_pickingin TEXT,
    service_type VARCHAR(100),
    sale_line_warn VARCHAR(100),
    expense_policy VARCHAR(100),
    invoice_policy VARCHAR(100),
    sale_line_warn_msg VARCHAR(500),
    purchase_method VARCHAR(100),
    purchase_line_warn VARCHAR(100),
    purchase_line_warn_msg VARCHAR(500),
    available_in_pos BOOLEAN,
    to_weight BOOLEAN,
    classification_code_id INTEGER,
    unit_measurement_code_id INTEGER,
    service_tracking VARCHAR(100),
    product_classification VARCHAR(100),
    split_method_landed_cost VARCHAR(100),
    landed_cost_ok BOOLEAN,
    is_data_product BOOLEAN,
    alert_min_qty FLOAT
);

CREATE TABLE res_partner (
    id INT PRIMARY KEY,
    company_id INTEGER,
    name VARCHAR(100),
    title INTEGER,
    parent_id INTEGER,
    user_id INTEGER,
    state_id INTEGER,
    country_id INTEGER,
    industry_id INTEGER,
    commercial_partner_id INTEGER,
    complete_name VARCHAR(100),
    ref VARCHAR(100),
    lang VARCHAR(100),
    tz VARCHAR(100),
    vat VARCHAR(100),
    company_registry VARCHAR(100),
    website VARCHAR(100),
    function VARCHAR(100),
    type VARCHAR(100),
    street VARCHAR(100),
    street2 VARCHAR(100),
    zip VARCHAR(100),
    city VARCHAR(100),
    email VARCHAR(100),
    phone VARCHAR(100),
    mobile VARCHAR(100),
    commercial_company_name VARCHAR(100),
    company_name VARCHAR(100),
    date DATE,
    comment VARCHAR(500),
    partner_latitude DECIMAL(18, 4),
    partner_longitude DECIMAL(18, 4),
    employee BOOLEAN,
    is_company BOOLEAN,
    partner_share BOOLEAN,
    message_bounce INTEGER,
    email_normalized VARCHAR(100),
    signup_type VARCHAR(100),
    signup_expiration TIMESTAMP,
    signup_token VARCHAR(100),
    team_id INTEGER,
    phone_sanitized VARCHAR(100),
    supplier_rank INTEGER,
    customer_rank INTEGER,
    invoice_warn VARCHAR(100),
    invoice_warn_msg VARCHAR(500),
    debit_limit DECIMAL(18, 4),
    last_time_entries_checked TIMESTAMP,
    picking_warn VARCHAR(100),
    picking_warn_msg VARCHAR(500),
    ubl_cii_format VARCHAR(100),
    peppol_endpoint VARCHAR(100),
    peppol_eas VARCHAR(100),
    sale_warn VARCHAR(100),
    sale_warn_msg VARCHAR(500),
    payment_responsible_id INTEGER,
    latest_followup_sequence INTEGER,
    payment_next_action_date DATE,
    payment_note VARCHAR(500),
    payment_next_action VARCHAR(500),
    website_id INTEGER,
    is_published BOOLEAN,
    buyer_id INTEGER,
    purchase_warn VARCHAR(100),
    purchase_warn_msg VARCHAR(500),
    city_id INTEGER,
    post_code_id INTEGER,
    nric VARCHAR(100),
    state VARCHAR(100),
    id_type VARCHAR(100),
    malay_and_no_malay VARCHAR(100),
    sst VARCHAR(100),
    msic_code VARCHAR(100),
    ttx VARCHAR(100),
    b_act_des_bn VARCHAR(100),
    b_act_des_en VARCHAR(100),
    street_3 VARCHAR(100),
    error_message VARCHAR(500),
    is_malaysia BOOLEAN,
    is_non_malaysian BOOLEAN,
    is_government BOOLEAN,
    is_portal_data_submit BOOLEAN,
    is_supplier BOOLEAN,
    qr_generated_timestamp TIMESTAMP,
    personal_tin VARCHAR(100),
    company_tin VARCHAR(100),
    business_reg_number VARCHAR(100),
    custom_credit DECIMAL(18, 4),
    is_general_partner BOOLEAN,
    internal_notes VARCHAR(500),
    nric_label VARCHAR(100),
    msic_code_id INTEGER,
    self_bill_for_supplier BOOLEAN
);

CREATE TABLE res_users (
    id INT PRIMARY KEY,
    company_id INTEGER,
    partner_id INTEGER,
    login VARCHAR(100),
    password VARCHAR(100),
    action_id INTEGER,
    signature VARCHAR(500),
    share BOOLEAN,
    totp_secret VARCHAR(100),
    notification_type VARCHAR(100),
    odoobot_state VARCHAR(100),
    odoobot_failed BOOLEAN,
    sale_team_id INTEGER,
    is_apping_user BOOLEAN,
    is_login_with_any_user BOOLEAN,
    user_group_id INTEGER,
    user_types VARCHAR(100),
    is_lhdn_admin BOOLEAN,
    mail_alert BOOLEAN,
    login_access INTEGER,
    locked_until TIMESTAMP,
    oauth_provider_id INTEGER,
    oauth_uid VARCHAR(100),
    oauth_access_token VARCHAR(100),
    website_id INTEGER,
    passcode VARCHAR(100),
    is_reg_tc BOOLEAN,
    is_user_tc BOOLEAN,
    is_company_owner BOOLEAN,
    sidebar_type VARCHAR(100)
);

Return only the SQL query without explanation.
SELECT partner_id, SUM(amount_total) AS total_purchase
FROM pos_order
GROUP BY partner_id
ORDER BY total_purchase DESC
LIMIT 10;",
"SCHEMA:
TABLE pos_order(id, date_order)
TABLE pos_order_line(id, order_id, product_id, qty)
TABLE product_product(id, product_tmpl_id)
TABLE product_template(id, name)

Prompt: You are an expert SQL developer.

Convert the following natural language request into a single SQL SELECT query.
Use only the schema provided below and do not make assumptions beyond it.

only take table and field from given scheme no other is allowed

Natural Language Request:
Show me new customers registered this month.

Database Schema:
CREATE TABLE pos_order (
    id INT PRIMARY KEY,
    user_id INTEGER,
    company_id INTEGER,
    pricelist_id INTEGER,
    partner_id INTEGER,
    sequence_number INTEGER,
    session_id INTEGER,
    config_id INTEGER,
    account_move INTEGER,
    procurement_group_id INTEGER,
    nb_print INTEGER,
    sale_journal INTEGER,
    fiscal_position_id INTEGER,
    name VARCHAR(100),
    last_order_preparation_change VARCHAR(100),
    state VARCHAR(100),
    pos_reference VARCHAR(100),
    ticket_code VARCHAR(100),
    shipping_date DATE,
    note VARCHAR(500),
    amount_tax DECIMAL(18, 4),
    amount_total DECIMAL(18, 4),
    amount_paid DECIMAL(18, 4),
    amount_return DECIMAL(18, 4),
    currency_rate DECIMAL(18, 4),
    tip_amount DECIMAL(18, 4),
    to_invoice BOOLEAN,
    is_tipped BOOLEAN,
    date_order TIMESTAMP,
    employee_id INTEGER,
    cashier VARCHAR(100),
    next_online_payment_amount DECIMAL(18, 4),
    crm_team_id INTEGER,
    debit_note_id INTEGER,
    invoice_id_for_debit INTEGER,
    reset_sequence INTEGER,
    my_invoice_status TEXT,
    invoice_type VARCHAR(100),
    reference_inv_id VARCHAR(500),
    response_msg VARCHAR(500),
    invalid_msg VARCHAR(500),
    is_submit_document BOOLEAN,
    is_debit_note BOOLEAN,
    is_credit_note BOOLEAN,
    is_consolidate BOOLEAN,
    validation_date_time TIMESTAMP,
    credit_check BOOLEAN,
    is_submit_in_pos BOOLEAN,
    is_hide_payment_debit BOOLEAN,
    is_hide_payment_credit BOOLEAN,
    formatted_date_order VARCHAR(100),
    is_hide_reverse_consolidation BOOLEAN,
    main_order_id INTEGER,
    main_order_pos_reference VARCHAR(100)
);

CREATE TABLE pos_order_line (
    id INT PRIMARY KEY,
    company_id INTEGER,
    product_id INTEGER,
    order_id INTEGER,
    refunded_orderline_id INTEGER,
    combo_parent_id INTEGER,
    name VARCHAR(100),
    notice VARCHAR(100),
    full_product_name VARCHAR(100),
    customer_note VARCHAR(100),
    price_unit DECIMAL(18, 4),
    qty DECIMAL(18, 4),
    price_subtotal DECIMAL(18, 4),
    price_subtotal_incl DECIMAL(18, 4),
    total_cost DECIMAL(18, 4),
    discount DECIMAL(18, 4),
    skip_change BOOLEAN,
    is_total_cost_computed BOOLEAN,
    price_extra FLOAT,
    sale_order_origin_id INTEGER,
    sale_order_line_id INTEGER,
    down_payment_details VARCHAR(500),
    discount_amount FLOAT,
    credit_note_discount FLOAT
);

CREATE TABLE product_product (
    id INT PRIMARY KEY,
    product_tmpl_id INTEGER,
    default_code VARCHAR(100),
    barcode VARCHAR(100),
    combination_indices VARCHAR(100),
    volume DECIMAL(18, 4),
    weight DECIMAL(18, 4),
    can_image_variant_1024_be_zoomed BOOLEAN,
    lot_properties_definition TEXT,
    classification_code_id INTEGER
);

CREATE TABLE product_template (
    id INT PRIMARY KEY,
    categ_id INTEGER,
    uom_id INTEGER,
    uom_po_id INTEGER,
    company_id INTEGER,
    detailed_type VARCHAR(100),
    type VARCHAR(100),
    default_code VARCHAR(100),
    priority VARCHAR(100),
    name VARCHAR(100),
    description VARCHAR(500),
    description_purchase TEXT,
    description_sale TEXT,
    product_properties TEXT,
    list_price DECIMAL(18, 4),
    volume DECIMAL(18, 4),
    weight DECIMAL(18, 4),
    sale_ok BOOLEAN,
    purchase_ok BOOLEAN,
    can_image_1024_be_zoomed BOOLEAN,
    has_configurable_attributes BOOLEAN,
    sale_delay INTEGER,
    tracking VARCHAR(100),
    description_picking TEXT,
    description_pickingout TEXT,
    description_pickingin TEXT,
    service_type VARCHAR(100),
    sale_line_warn VARCHAR(100),
    expense_policy VARCHAR(100),
    invoice_policy VARCHAR(100),
    sale_line_warn_msg VARCHAR(500),
    purchase_method VARCHAR(100),
    purchase_line_warn VARCHAR(100),
    purchase_line_warn_msg VARCHAR(500),
    available_in_pos BOOLEAN,
    to_weight BOOLEAN,
    classification_code_id INTEGER,
    unit_measurement_code_id INTEGER,
    service_tracking VARCHAR(100),
    product_classification VARCHAR(100),
    split_method_landed_cost VARCHAR(100),
    landed_cost_ok BOOLEAN,
    is_data_product BOOLEAN,
    alert_min_qty FLOAT
);

CREATE TABLE res_partner (
    id INT PRIMARY KEY,
    company_id INTEGER,
    name VARCHAR(100),
    title INTEGER,
    parent_id INTEGER,
    user_id INTEGER,
    state_id INTEGER,
    country_id INTEGER,
    industry_id INTEGER,
    commercial_partner_id INTEGER,
    complete_name VARCHAR(100),
    ref VARCHAR(100),
    lang VARCHAR(100),
    tz VARCHAR(100),
    vat VARCHAR(100),
    company_registry VARCHAR(100),
    website VARCHAR(100),
    function VARCHAR(100),
    type VARCHAR(100),
    street VARCHAR(100),
    street2 VARCHAR(100),
    zip VARCHAR(100),
    city VARCHAR(100),
    email VARCHAR(100),
    phone VARCHAR(100),
    mobile VARCHAR(100),
    commercial_company_name VARCHAR(100),
    company_name VARCHAR(100),
    date DATE,
    comment VARCHAR(500),
    partner_latitude DECIMAL(18, 4),
    partner_longitude DECIMAL(18, 4),
    employee BOOLEAN,
    is_company BOOLEAN,
    partner_share BOOLEAN,
    message_bounce INTEGER,
    email_normalized VARCHAR(100),
    signup_type VARCHAR(100),
    signup_expiration TIMESTAMP,
    signup_token VARCHAR(100),
    team_id INTEGER,
    phone_sanitized VARCHAR(100),
    supplier_rank INTEGER,
    customer_rank INTEGER,
    invoice_warn VARCHAR(100),
    invoice_warn_msg VARCHAR(500),
    debit_limit DECIMAL(18, 4),
    last_time_entries_checked TIMESTAMP,
    picking_warn VARCHAR(100),
    picking_warn_msg VARCHAR(500),
    ubl_cii_format VARCHAR(100),
    peppol_endpoint VARCHAR(100),
    peppol_eas VARCHAR(100),
    sale_warn VARCHAR(100),
    sale_warn_msg VARCHAR(500),
    payment_responsible_id INTEGER,
    latest_followup_sequence INTEGER,
    payment_next_action_date DATE,
    payment_note VARCHAR(500),
    payment_next_action VARCHAR(500),
    website_id INTEGER,
    is_published BOOLEAN,
    buyer_id INTEGER,
    purchase_warn VARCHAR(100),
    purchase_warn_msg VARCHAR(500),
    city_id INTEGER,
    post_code_id INTEGER,
    nric VARCHAR(100),
    state VARCHAR(100),
    id_type VARCHAR(100),
    malay_and_no_malay VARCHAR(100),
    sst VARCHAR(100),
    msic_code VARCHAR(100),
    ttx VARCHAR(100),
    b_act_des_bn VARCHAR(100),
    b_act_des_en VARCHAR(100),
    street_3 VARCHAR(100),
    error_message VARCHAR(500),
    is_malaysia BOOLEAN,
    is_non_malaysian BOOLEAN,
    is_government BOOLEAN,
    is_portal_data_submit BOOLEAN,
    is_supplier BOOLEAN,
    qr_generated_timestamp TIMESTAMP,
    personal_tin VARCHAR(100),
    company_tin VARCHAR(100),
    business_reg_number VARCHAR(100),
    custom_credit DECIMAL(18, 4),
    is_general_partner BOOLEAN,
    internal_notes VARCHAR(500),
    nric_label VARCHAR(100),
    msic_code_id INTEGER,
    self_bill_for_supplier BOOLEAN
);

CREATE TABLE res_users (
    id INT PRIMARY KEY,
    company_id INTEGER,
    partner_id INTEGER,
    login VARCHAR(100),
    password VARCHAR(100),
    action_id INTEGER,
    signature VARCHAR(500),
    share BOOLEAN,
    totp_secret VARCHAR(100),
    notification_type VARCHAR(100),
    odoobot_state VARCHAR(100),
    odoobot_failed BOOLEAN,
    sale_team_id INTEGER,
    is_apping_user BOOLEAN,
    is_login_with_any_user BOOLEAN,
    user_group_id INTEGER,
    user_types VARCHAR(100),
    is_lhdn_admin BOOLEAN,
    mail_alert BOOLEAN,
    login_access INTEGER,
    locked_until TIMESTAMP,
    oauth_provider_id INTEGER,
    oauth_uid VARCHAR(100),
    oauth_access_token VARCHAR(100),
    website_id INTEGER,
    passcode VARCHAR(100),
    is_reg_tc BOOLEAN,
    is_user_tc BOOLEAN,
    is_company_owner BOOLEAN,
    sidebar_type VARCHAR(100)
);

Return only the SQL query without explanation.
SELECT *
FROM res_partner
WHERE DATE(date) >= DATE_TRUNC('month', CURRENT_DATE);",
"SCHEMA:
TABLE pos_order(id, date_order)
TABLE pos_order_line(id, order_id, product_id, qty)
TABLE product_product(id, product_tmpl_id)
TABLE product_template(id, name)

Prompt: You are an expert SQL developer.

Convert the following natural language request into a single SQL SELECT query.
Use only the schema provided below and do not make assumptions beyond it.

only take table and field from given scheme no other is allowed

Natural Language Request:
Which customers haven’t purchased anything in the last 90 days?

Database Schema:
CREATE TABLE pos_order (
    id INT PRIMARY KEY,
    user_id INTEGER,
    company_id INTEGER,
    pricelist_id INTEGER,
    partner_id INTEGER,
    sequence_number INTEGER,
    session_id INTEGER,
    config_id INTEGER,
    account_move INTEGER,
    procurement_group_id INTEGER,
    nb_print INTEGER,
    sale_journal INTEGER,
    fiscal_position_id INTEGER,
    name VARCHAR(100),
    last_order_preparation_change VARCHAR(100),
    state VARCHAR(100),
    pos_reference VARCHAR(100),
    ticket_code VARCHAR(100),
    shipping_date DATE,
    note VARCHAR(500),
    amount_tax DECIMAL(18, 4),
    amount_total DECIMAL(18, 4),
    amount_paid DECIMAL(18, 4),
    amount_return DECIMAL(18, 4),
    currency_rate DECIMAL(18, 4),
    tip_amount DECIMAL(18, 4),
    to_invoice BOOLEAN,
    is_tipped BOOLEAN,
    date_order TIMESTAMP,
    employee_id INTEGER,
    cashier VARCHAR(100),
    next_online_payment_amount DECIMAL(18, 4),
    crm_team_id INTEGER,
    debit_note_id INTEGER,
    invoice_id_for_debit INTEGER,
    reset_sequence INTEGER,
    my_invoice_status TEXT,
    invoice_type VARCHAR(100),
    reference_inv_id VARCHAR(500),
    response_msg VARCHAR(500),
    invalid_msg VARCHAR(500),
    is_submit_document BOOLEAN,
    is_debit_note BOOLEAN,
    is_credit_note BOOLEAN,
    is_consolidate BOOLEAN,
    validation_date_time TIMESTAMP,
    credit_check BOOLEAN,
    is_submit_in_pos BOOLEAN,
    is_hide_payment_debit BOOLEAN,
    is_hide_payment_credit BOOLEAN,
    formatted_date_order VARCHAR(100),
    is_hide_reverse_consolidation BOOLEAN,
    main_order_id INTEGER,
    main_order_pos_reference VARCHAR(100)
);

CREATE TABLE pos_order_line (
    id INT PRIMARY KEY,
    company_id INTEGER,
    product_id INTEGER,
    order_id INTEGER,
    refunded_orderline_id INTEGER,
    combo_parent_id INTEGER,
    name VARCHAR(100),
    notice VARCHAR(100),
    full_product_name VARCHAR(100),
    customer_note VARCHAR(100),
    price_unit DECIMAL(18, 4),
    qty DECIMAL(18, 4),
    price_subtotal DECIMAL(18, 4),
    price_subtotal_incl DECIMAL(18, 4),
    total_cost DECIMAL(18, 4),
    discount DECIMAL(18, 4),
    skip_change BOOLEAN,
    is_total_cost_computed BOOLEAN,
    price_extra FLOAT,
    sale_order_origin_id INTEGER,
    sale_order_line_id INTEGER,
    down_payment_details VARCHAR(500),
    discount_amount FLOAT,
    credit_note_discount FLOAT
);

CREATE TABLE product_product (
    id INT PRIMARY KEY,
    product_tmpl_id INTEGER,
    default_code VARCHAR(100),
    barcode VARCHAR(100),
    combination_indices VARCHAR(100),
    volume DECIMAL(18, 4),
    weight DECIMAL(18, 4),
    can_image_variant_1024_be_zoomed BOOLEAN,
    lot_properties_definition TEXT,
    classification_code_id INTEGER
);

CREATE TABLE product_template (
    id INT PRIMARY KEY,
    categ_id INTEGER,
    uom_id INTEGER,
    uom_po_id INTEGER,
    company_id INTEGER,
    detailed_type VARCHAR(100),
    type VARCHAR(100),
    default_code VARCHAR(100),
    priority VARCHAR(100),
    name VARCHAR(100),
    description VARCHAR(500),
    description_purchase TEXT,
    description_sale TEXT,
    product_properties TEXT,
    list_price DECIMAL(18, 4),
    volume DECIMAL(18, 4),
    weight DECIMAL(18, 4),
    sale_ok BOOLEAN,
    purchase_ok BOOLEAN,
    can_image_1024_be_zoomed BOOLEAN,
    has_configurable_attributes BOOLEAN,
    sale_delay INTEGER,
    tracking VARCHAR(100),
    description_picking TEXT,
    description_pickingout TEXT,
    description_pickingin TEXT,
    service_type VARCHAR(100),
    sale_line_warn VARCHAR(100),
    expense_policy VARCHAR(100),
    invoice_policy VARCHAR(100),
    sale_line_warn_msg VARCHAR(500),
    purchase_method VARCHAR(100),
    purchase_line_warn VARCHAR(100),
    purchase_line_warn_msg VARCHAR(500),
    available_in_pos BOOLEAN,
    to_weight BOOLEAN,
    classification_code_id INTEGER,
    unit_measurement_code_id INTEGER,
    service_tracking VARCHAR(100),
    product_classification VARCHAR(100),
    split_method_landed_cost VARCHAR(100),
    landed_cost_ok BOOLEAN,
    is_data_product BOOLEAN,
    alert_min_qty FLOAT
);

CREATE TABLE res_partner (
    id INT PRIMARY KEY,
    company_id INTEGER,
    name VARCHAR(100),
    title INTEGER,
    parent_id INTEGER,
    user_id INTEGER,
    state_id INTEGER,
    country_id INTEGER,
    industry_id INTEGER,
    commercial_partner_id INTEGER,
    complete_name VARCHAR(100),
    ref VARCHAR(100),
    lang VARCHAR(100),
    tz VARCHAR(100),
    vat VARCHAR(100),
    company_registry VARCHAR(100),
    website VARCHAR(100),
    function VARCHAR(100),
    type VARCHAR(100),
    street VARCHAR(100),
    street2 VARCHAR(100),
    zip VARCHAR(100),
    city VARCHAR(100),
    email VARCHAR(100),
    phone VARCHAR(100),
    mobile VARCHAR(100),
    commercial_company_name VARCHAR(100),
    company_name VARCHAR(100),
    date DATE,
    comment VARCHAR(500),
    partner_latitude DECIMAL(18, 4),
    partner_longitude DECIMAL(18, 4),
    employee BOOLEAN,
    is_company BOOLEAN,
    partner_share BOOLEAN,
    message_bounce INTEGER,
    email_normalized VARCHAR(100),
    signup_type VARCHAR(100),
    signup_expiration TIMESTAMP,
    signup_token VARCHAR(100),
    team_id INTEGER,
    phone_sanitized VARCHAR(100),
    supplier_rank INTEGER,
    customer_rank INTEGER,
    invoice_warn VARCHAR(100),
    invoice_warn_msg VARCHAR(500),
    debit_limit DECIMAL(18, 4),
    last_time_entries_checked TIMESTAMP,
    picking_warn VARCHAR(100),
    picking_warn_msg VARCHAR(500),
    ubl_cii_format VARCHAR(100),
    peppol_endpoint VARCHAR(100),
    peppol_eas VARCHAR(100),
    sale_warn VARCHAR(100),
    sale_warn_msg VARCHAR(500),
    payment_responsible_id INTEGER,
    latest_followup_sequence INTEGER,
    payment_next_action_date DATE,
    payment_note VARCHAR(500),
    payment_next_action VARCHAR(500),
    website_id INTEGER,
    is_published BOOLEAN,
    buyer_id INTEGER,
    purchase_warn VARCHAR(100),
    purchase_warn_msg VARCHAR(500),
    city_id INTEGER,
    post_code_id INTEGER,
    nric VARCHAR(100),
    state VARCHAR(100),
    id_type VARCHAR(100),
    malay_and_no_malay VARCHAR(100),
    sst VARCHAR(100),
    msic_code VARCHAR(100),
    ttx VARCHAR(100),
    b_act_des_bn VARCHAR(100),
    b_act_des_en VARCHAR(100),
    street_3 VARCHAR(100),
    error_message VARCHAR(500),
    is_malaysia BOOLEAN,
    is_non_malaysian BOOLEAN,
    is_government BOOLEAN,
    is_portal_data_submit BOOLEAN,
    is_supplier BOOLEAN,
    qr_generated_timestamp TIMESTAMP,
    personal_tin VARCHAR(100),
    company_tin VARCHAR(100),
    business_reg_number VARCHAR(100),
    custom_credit DECIMAL(18, 4),
    is_general_partner BOOLEAN,
    internal_notes VARCHAR(500),
    nric_label VARCHAR(100),
    msic_code_id INTEGER,
    self_bill_for_supplier BOOLEAN
);

CREATE TABLE res_users (
    id INT PRIMARY KEY,
    company_id INTEGER,
    partner_id INTEGER,
    login VARCHAR(100),
    password VARCHAR(100),
    action_id INTEGER,
    signature VARCHAR(500),
    share BOOLEAN,
    totp_secret VARCHAR(100),
    notification_type VARCHAR(100),
    odoobot_state VARCHAR(100),
    odoobot_failed BOOLEAN,
    sale_team_id INTEGER,
    is_apping_user BOOLEAN,
    is_login_with_any_user BOOLEAN,
    user_group_id INTEGER,
    user_types VARCHAR(100),
    is_lhdn_admin BOOLEAN,
    mail_alert BOOLEAN,
    login_access INTEGER,
    locked_until TIMESTAMP,
    oauth_provider_id INTEGER,
    oauth_uid VARCHAR(100),
    oauth_access_token VARCHAR(100),
    website_id INTEGER,
    passcode VARCHAR(100),
    is_reg_tc BOOLEAN,
    is_user_tc BOOLEAN,
    is_company_owner BOOLEAN,
    sidebar_type VARCHAR(100)
);

Return only the SQL query without explanation.
SELECT *
FROM res_partner
WHERE id NOT IN (
    SELECT DISTINCT partner_id
    FROM pos_order
    WHERE date_order >= CURRENT_DATE - INTERVAL '90 days'
);",
"SCHEMA:
TABLE pos_order(id, date_order)
TABLE pos_order_line(id, order_id, product_id, qty)
TABLE product_product(id, product_tmpl_id)
TABLE product_template(id, name)

Prompt: You are an expert SQL developer.

Convert the following natural language request into a single SQL SELECT query.
Use only the schema provided below and do not make assumptions beyond it.

only take table and field from given scheme no other is allowed

Natural Language Request:
List customers who bought product X more than once.

Database Schema:
CREATE TABLE pos_order (
    id INT PRIMARY KEY,
    user_id INTEGER,
    company_id INTEGER,
    pricelist_id INTEGER,
    partner_id INTEGER,
    sequence_number INTEGER,
    session_id INTEGER,
    config_id INTEGER,
    account_move INTEGER,
    procurement_group_id INTEGER,
    nb_print INTEGER,
    sale_journal INTEGER,
    fiscal_position_id INTEGER,
    name VARCHAR(100),
    last_order_preparation_change VARCHAR(100),
    state VARCHAR(100),
    pos_reference VARCHAR(100),
    ticket_code VARCHAR(100),
    shipping_date DATE,
    note VARCHAR(500),
    amount_tax DECIMAL(18, 4),
    amount_total DECIMAL(18, 4),
    amount_paid DECIMAL(18, 4),
    amount_return DECIMAL(18, 4),
    currency_rate DECIMAL(18, 4),
    tip_amount DECIMAL(18, 4),
    to_invoice BOOLEAN,
    is_tipped BOOLEAN,
    date_order TIMESTAMP,
    employee_id INTEGER,
    cashier VARCHAR(100),
    next_online_payment_amount DECIMAL(18, 4),
    crm_team_id INTEGER,
    debit_note_id INTEGER,
    invoice_id_for_debit INTEGER,
    reset_sequence INTEGER,
    my_invoice_status TEXT,
    invoice_type VARCHAR(100),
    reference_inv_id VARCHAR(500),
    response_msg VARCHAR(500),
    invalid_msg VARCHAR(500),
    is_submit_document BOOLEAN,
    is_debit_note BOOLEAN,
    is_credit_note BOOLEAN,
    is_consolidate BOOLEAN,
    validation_date_time TIMESTAMP,
    credit_check BOOLEAN,
    is_submit_in_pos BOOLEAN,
    is_hide_payment_debit BOOLEAN,
    is_hide_payment_credit BOOLEAN,
    formatted_date_order VARCHAR(100),
    is_hide_reverse_consolidation BOOLEAN,
    main_order_id INTEGER,
    main_order_pos_reference VARCHAR(100)
);

CREATE TABLE pos_order_line (
    id INT PRIMARY KEY,
    company_id INTEGER,
    product_id INTEGER,
    order_id INTEGER,
    refunded_orderline_id INTEGER,
    combo_parent_id INTEGER,
    name VARCHAR(100),
    notice VARCHAR(100),
    full_product_name VARCHAR(100),
    customer_note VARCHAR(100),
    price_unit DECIMAL(18, 4),
    qty DECIMAL(18, 4),
    price_subtotal DECIMAL(18, 4),
    price_subtotal_incl DECIMAL(18, 4),
    total_cost DECIMAL(18, 4),
    discount DECIMAL(18, 4),
    skip_change BOOLEAN,
    is_total_cost_computed BOOLEAN,
    price_extra FLOAT,
    sale_order_origin_id INTEGER,
    sale_order_line_id INTEGER,
    down_payment_details VARCHAR(500),
    discount_amount FLOAT,
    credit_note_discount FLOAT
);

CREATE TABLE product_product (
    id INT PRIMARY KEY,
    product_tmpl_id INTEGER,
    default_code VARCHAR(100),
    barcode VARCHAR(100),
    combination_indices VARCHAR(100),
    volume DECIMAL(18, 4),
    weight DECIMAL(18, 4),
    can_image_variant_1024_be_zoomed BOOLEAN,
    lot_properties_definition TEXT,
    classification_code_id INTEGER
);

CREATE TABLE product_template (
    id INT PRIMARY KEY,
    categ_id INTEGER,
    uom_id INTEGER,
    uom_po_id INTEGER,
    company_id INTEGER,
    detailed_type VARCHAR(100),
    type VARCHAR(100),
    default_code VARCHAR(100),
    priority VARCHAR(100),
    name VARCHAR(100),
    description VARCHAR(500),
    description_purchase TEXT,
    description_sale TEXT,
    product_properties TEXT,
    list_price DECIMAL(18, 4),
    volume DECIMAL(18, 4),
    weight DECIMAL(18, 4),
    sale_ok BOOLEAN,
    purchase_ok BOOLEAN,
    can_image_1024_be_zoomed BOOLEAN,
    has_configurable_attributes BOOLEAN,
    sale_delay INTEGER,
    tracking VARCHAR(100),
    description_picking TEXT,
    description_pickingout TEXT,
    description_pickingin TEXT,
    service_type VARCHAR(100),
    sale_line_warn VARCHAR(100),
    expense_policy VARCHAR(100),
    invoice_policy VARCHAR(100),
    sale_line_warn_msg VARCHAR(500),
    purchase_method VARCHAR(100),
    purchase_line_warn VARCHAR(100),
    purchase_line_warn_msg VARCHAR(500),
    available_in_pos BOOLEAN,
    to_weight BOOLEAN,
    classification_code_id INTEGER,
    unit_measurement_code_id INTEGER,
    service_tracking VARCHAR(100),
    product_classification VARCHAR(100),
    split_method_landed_cost VARCHAR(100),
    landed_cost_ok BOOLEAN,
    is_data_product BOOLEAN,
    alert_min_qty FLOAT
);

CREATE TABLE res_partner (
    id INT PRIMARY KEY,
    company_id INTEGER,
    name VARCHAR(100),
    title INTEGER,
    parent_id INTEGER,
    user_id INTEGER,
    state_id INTEGER,
    country_id INTEGER,
    industry_id INTEGER,
    commercial_partner_id INTEGER,
    complete_name VARCHAR(100),
    ref VARCHAR(100),
    lang VARCHAR(100),
    tz VARCHAR(100),
    vat VARCHAR(100),
    company_registry VARCHAR(100),
    website VARCHAR(100),
    function VARCHAR(100),
    type VARCHAR(100),
    street VARCHAR(100),
    street2 VARCHAR(100),
    zip VARCHAR(100),
    city VARCHAR(100),
    email VARCHAR(100),
    phone VARCHAR(100),
    mobile VARCHAR(100),
    commercial_company_name VARCHAR(100),
    company_name VARCHAR(100),
    date DATE,
    comment VARCHAR(500),
    partner_latitude DECIMAL(18, 4),
    partner_longitude DECIMAL(18, 4),
    employee BOOLEAN,
    is_company BOOLEAN,
    partner_share BOOLEAN,
    message_bounce INTEGER,
    email_normalized VARCHAR(100),
    signup_type VARCHAR(100),
    signup_expiration TIMESTAMP,
    signup_token VARCHAR(100),
    team_id INTEGER,
    phone_sanitized VARCHAR(100),
    supplier_rank INTEGER,
    customer_rank INTEGER,
    invoice_warn VARCHAR(100),
    invoice_warn_msg VARCHAR(500),
    debit_limit DECIMAL(18, 4),
    last_time_entries_checked TIMESTAMP,
    picking_warn VARCHAR(100),
    picking_warn_msg VARCHAR(500),
    ubl_cii_format VARCHAR(100),
    peppol_endpoint VARCHAR(100),
    peppol_eas VARCHAR(100),
    sale_warn VARCHAR(100),
    sale_warn_msg VARCHAR(500),
    payment_responsible_id INTEGER,
    latest_followup_sequence INTEGER,
    payment_next_action_date DATE,
    payment_note VARCHAR(500),
    payment_next_action VARCHAR(500),
    website_id INTEGER,
    is_published BOOLEAN,
    buyer_id INTEGER,
    purchase_warn VARCHAR(100),
    purchase_warn_msg VARCHAR(500),
    city_id INTEGER,
    post_code_id INTEGER,
    nric VARCHAR(100),
    state VARCHAR(100),
    id_type VARCHAR(100),
    malay_and_no_malay VARCHAR(100),
    sst VARCHAR(100),
    msic_code VARCHAR(100),
    ttx VARCHAR(100),
    b_act_des_bn VARCHAR(100),
    b_act_des_en VARCHAR(100),
    street_3 VARCHAR(100),
    error_message VARCHAR(500),
    is_malaysia BOOLEAN,
    is_non_malaysian BOOLEAN,
    is_government BOOLEAN,
    is_portal_data_submit BOOLEAN,
    is_supplier BOOLEAN,
    qr_generated_timestamp TIMESTAMP,
    personal_tin VARCHAR(100),
    company_tin VARCHAR(100),
    business_reg_number VARCHAR(100),
    custom_credit DECIMAL(18, 4),
    is_general_partner BOOLEAN,
    internal_notes VARCHAR(500),
    nric_label VARCHAR(100),
    msic_code_id INTEGER,
    self_bill_for_supplier BOOLEAN
);

CREATE TABLE res_users (
    id INT PRIMARY KEY,
    company_id INTEGER,
    partner_id INTEGER,
    login VARCHAR(100),
    password VARCHAR(100),
    action_id INTEGER,
    signature VARCHAR(500),
    share BOOLEAN,
    totp_secret VARCHAR(100),
    notification_type VARCHAR(100),
    odoobot_state VARCHAR(100),
    odoobot_failed BOOLEAN,
    sale_team_id INTEGER,
    is_apping_user BOOLEAN,
    is_login_with_any_user BOOLEAN,
    user_group_id INTEGER,
    user_types VARCHAR(100),
    is_lhdn_admin BOOLEAN,
    mail_alert BOOLEAN,
    login_access INTEGER,
    locked_until TIMESTAMP,
    oauth_provider_id INTEGER,
    oauth_uid VARCHAR(100),
    oauth_access_token VARCHAR(100),
    website_id INTEGER,
    passcode VARCHAR(100),
    is_reg_tc BOOLEAN,
    is_user_tc BOOLEAN,
    is_company_owner BOOLEAN,
    sidebar_type VARCHAR(100)
);

Return only the SQL query without explanation.
SELECT partner_id, product_id, COUNT(*) AS purchase_count
FROM pos_order_line
GROUP BY partner_id, product_id
HAVING COUNT(*) > 1;",
"SCHEMA:
TABLE pos_order(id, date_order)
TABLE pos_order_line(id, order_id, product_id, qty)
TABLE product_product(id, product_tmpl_id)
TABLE product_template(id, name)

Prompt: You are an expert SQL developer.

Convert the following natural language request into a single SQL SELECT query.
Use only the schema provided below and do not make assumptions beyond it.

only take table and field from given scheme no other is allowed

Natural Language Request:
Give me contact details of all VIP customers.

Database Schema:
CREATE TABLE pos_order (
    id INT PRIMARY KEY,
    user_id INTEGER,
    company_id INTEGER,
    pricelist_id INTEGER,
    partner_id INTEGER,
    sequence_number INTEGER,
    session_id INTEGER,
    config_id INTEGER,
    account_move INTEGER,
    procurement_group_id INTEGER,
    nb_print INTEGER,
    sale_journal INTEGER,
    fiscal_position_id INTEGER,
    name VARCHAR(100),
    last_order_preparation_change VARCHAR(100),
    state VARCHAR(100),
    pos_reference VARCHAR(100),
    ticket_code VARCHAR(100),
    shipping_date DATE,
    note VARCHAR(500),
    amount_tax DECIMAL(18, 4),
    amount_total DECIMAL(18, 4),
    amount_paid DECIMAL(18, 4),
    amount_return DECIMAL(18, 4),
    currency_rate DECIMAL(18, 4),
    tip_amount DECIMAL(18, 4),
    to_invoice BOOLEAN,
    is_tipped BOOLEAN,
    date_order TIMESTAMP,
    employee_id INTEGER,
    cashier VARCHAR(100),
    next_online_payment_amount DECIMAL(18, 4),
    crm_team_id INTEGER,
    debit_note_id INTEGER,
    invoice_id_for_debit INTEGER,
    reset_sequence INTEGER,
    my_invoice_status TEXT,
    invoice_type VARCHAR(100),
    reference_inv_id VARCHAR(500),
    response_msg VARCHAR(500),
    invalid_msg VARCHAR(500),
    is_submit_document BOOLEAN,
    is_debit_note BOOLEAN,
    is_credit_note BOOLEAN,
    is_consolidate BOOLEAN,
    validation_date_time TIMESTAMP,
    credit_check BOOLEAN,
    is_submit_in_pos BOOLEAN,
    is_hide_payment_debit BOOLEAN,
    is_hide_payment_credit BOOLEAN,
    formatted_date_order VARCHAR(100),
    is_hide_reverse_consolidation BOOLEAN,
    main_order_id INTEGER,
    main_order_pos_reference VARCHAR(100)
);

CREATE TABLE pos_order_line (
    id INT PRIMARY KEY,
    company_id INTEGER,
    product_id INTEGER,
    order_id INTEGER,
    refunded_orderline_id INTEGER,
    combo_parent_id INTEGER,
    name VARCHAR(100),
    notice VARCHAR(100),
    full_product_name VARCHAR(100),
    customer_note VARCHAR(100),
    price_unit DECIMAL(18, 4),
    qty DECIMAL(18, 4),
    price_subtotal DECIMAL(18, 4),
    price_subtotal_incl DECIMAL(18, 4),
    total_cost DECIMAL(18, 4),
    discount DECIMAL(18, 4),
    skip_change BOOLEAN,
    is_total_cost_computed BOOLEAN,
    price_extra FLOAT,
    sale_order_origin_id INTEGER,
    sale_order_line_id INTEGER,
    down_payment_details VARCHAR(500),
    discount_amount FLOAT,
    credit_note_discount FLOAT
);

CREATE TABLE product_product (
    id INT PRIMARY KEY,
    product_tmpl_id INTEGER,
    default_code VARCHAR(100),
    barcode VARCHAR(100),
    combination_indices VARCHAR(100),
    volume DECIMAL(18, 4),
    weight DECIMAL(18, 4),
    can_image_variant_1024_be_zoomed BOOLEAN,
    lot_properties_definition TEXT,
    classification_code_id INTEGER
);

CREATE TABLE product_template (
    id INT PRIMARY KEY,
    categ_id INTEGER,
    uom_id INTEGER,
    uom_po_id INTEGER,
    company_id INTEGER,
    detailed_type VARCHAR(100),
    type VARCHAR(100),
    default_code VARCHAR(100),
    priority VARCHAR(100),
    name VARCHAR(100),
    description VARCHAR(500),
    description_purchase TEXT,
    description_sale TEXT,
    product_properties TEXT,
    list_price DECIMAL(18, 4),
    volume DECIMAL(18, 4),
    weight DECIMAL(18, 4),
    sale_ok BOOLEAN,
    purchase_ok BOOLEAN,
    can_image_1024_be_zoomed BOOLEAN,
    has_configurable_attributes BOOLEAN,
    sale_delay INTEGER,
    tracking VARCHAR(100),
    description_picking TEXT,
    description_pickingout TEXT,
    description_pickingin TEXT,
    service_type VARCHAR(100),
    sale_line_warn VARCHAR(100),
    expense_policy VARCHAR(100),
    invoice_policy VARCHAR(100),
    sale_line_warn_msg VARCHAR(500),
    purchase_method VARCHAR(100),
    purchase_line_warn VARCHAR(100),
    purchase_line_warn_msg VARCHAR(500),
    available_in_pos BOOLEAN,
    to_weight BOOLEAN,
    classification_code_id INTEGER,
    unit_measurement_code_id INTEGER,
    service_tracking VARCHAR(100),
    product_classification VARCHAR(100),
    split_method_landed_cost VARCHAR(100),
    landed_cost_ok BOOLEAN,
    is_data_product BOOLEAN,
    alert_min_qty FLOAT
);

CREATE TABLE res_partner (
    id INT PRIMARY KEY,
    company_id INTEGER,
    name VARCHAR(100),
    title INTEGER,
    parent_id INTEGER,
    user_id INTEGER,
    state_id INTEGER,
    country_id INTEGER,
    industry_id INTEGER,
    commercial_partner_id INTEGER,
    complete_name VARCHAR(100),
    ref VARCHAR(100),
    lang VARCHAR(100),
    tz VARCHAR(100),
    vat VARCHAR(100),
    company_registry VARCHAR(100),
    website VARCHAR(100),
    function VARCHAR(100),
    type VARCHAR(100),
    street VARCHAR(100),
    street2 VARCHAR(100),
    zip VARCHAR(100),
    city VARCHAR(100),
    email VARCHAR(100),
    phone VARCHAR(100),
    mobile VARCHAR(100),
    commercial_company_name VARCHAR(100),
    company_name VARCHAR(100),
    date DATE,
    comment VARCHAR(500),
    partner_latitude DECIMAL(18, 4),
    partner_longitude DECIMAL(18, 4),
    employee BOOLEAN,
    is_company BOOLEAN,
    partner_share BOOLEAN,
    message_bounce INTEGER,
    email_normalized VARCHAR(100),
    signup_type VARCHAR(100),
    signup_expiration TIMESTAMP,
    signup_token VARCHAR(100),
    team_id INTEGER,
    phone_sanitized VARCHAR(100),
    supplier_rank INTEGER,
    customer_rank INTEGER,
    invoice_warn VARCHAR(100),
    invoice_warn_msg VARCHAR(500),
    debit_limit DECIMAL(18, 4),
    last_time_entries_checked TIMESTAMP,
    picking_warn VARCHAR(100),
    picking_warn_msg VARCHAR(500),
    ubl_cii_format VARCHAR(100),
    peppol_endpoint VARCHAR(100),
    peppol_eas VARCHAR(100),
    sale_warn VARCHAR(100),
    sale_warn_msg VARCHAR(500),
    payment_responsible_id INTEGER,
    latest_followup_sequence INTEGER,
    payment_next_action_date DATE,
    payment_note VARCHAR(500),
    payment_next_action VARCHAR(500),
    website_id INTEGER,
    is_published BOOLEAN,
    buyer_id INTEGER,
    purchase_warn VARCHAR(100),
    purchase_warn_msg VARCHAR(500),
    city_id INTEGER,
    post_code_id INTEGER,
    nric VARCHAR(100),
    state VARCHAR(100),
    id_type VARCHAR(100),
    malay_and_no_malay VARCHAR(100),
    sst VARCHAR(100),
    msic_code VARCHAR(100),
    ttx VARCHAR(100),
    b_act_des_bn VARCHAR(100),
    b_act_des_en VARCHAR(100),
    street_3 VARCHAR(100),
    error_message VARCHAR(500),
    is_malaysia BOOLEAN,
    is_non_malaysian BOOLEAN,
    is_government BOOLEAN,
    is_portal_data_submit BOOLEAN,
    is_supplier BOOLEAN,
    qr_generated_timestamp TIMESTAMP,
    personal_tin VARCHAR(100),
    company_tin VARCHAR(100),
    business_reg_number VARCHAR(100),
    custom_credit DECIMAL(18, 4),
    is_general_partner BOOLEAN,
    internal_notes VARCHAR(500),
    nric_label VARCHAR(100),
    msic_code_id INTEGER,
    self_bill_for_supplier BOOLEAN
);

CREATE TABLE res_users (
    id INT PRIMARY KEY,
    company_id INTEGER,
    partner_id INTEGER,
    login VARCHAR(100),
    password VARCHAR(100),
    action_id INTEGER,
    signature VARCHAR(500),
    share BOOLEAN,
    totp_secret VARCHAR(100),
    notification_type VARCHAR(100),
    odoobot_state VARCHAR(100),
    odoobot_failed BOOLEAN,
    sale_team_id INTEGER,
    is_apping_user BOOLEAN,
    is_login_with_any_user BOOLEAN,
    user_group_id INTEGER,
    user_types VARCHAR(100),
    is_lhdn_admin BOOLEAN,
    mail_alert BOOLEAN,
    login_access INTEGER,
    locked_until TIMESTAMP,
    oauth_provider_id INTEGER,
    oauth_uid VARCHAR(100),
    oauth_access_token VARCHAR(100),
    website_id INTEGER,
    passcode VARCHAR(100),
    is_reg_tc BOOLEAN,
    is_user_tc BOOLEAN,
    is_company_owner BOOLEAN,
    sidebar_type VARCHAR(100)
);

Return only the SQL query without explanation.
SELECT name, email, phone
FROM res_partner
WHERE customer_rank > 0 AND comment ILIKE '%VIP%';",
"SCHEMA:
TABLE pos_order(id, date_order)
TABLE pos_order_line(id, order_id, product_id, qty)
TABLE product_product(id, product_tmpl_id)
TABLE product_template(id, name)

Prompt: You are an expert SQL developer.

Convert the following natural language request into a single SQL SELECT query.
Use only the schema provided below and do not make assumptions beyond it.

only take table and field from given scheme no other is allowed

Natural Language Request:
How many customers were added by User Sarah?

Database Schema:
CREATE TABLE pos_order (
    id INT PRIMARY KEY,
    user_id INTEGER,
    company_id INTEGER,
    pricelist_id INTEGER,
    partner_id INTEGER,
    sequence_number INTEGER,
    session_id INTEGER,
    config_id INTEGER,
    account_move INTEGER,
    procurement_group_id INTEGER,
    nb_print INTEGER,
    sale_journal INTEGER,
    fiscal_position_id INTEGER,
    name VARCHAR(100),
    last_order_preparation_change VARCHAR(100),
    state VARCHAR(100),
    pos_reference VARCHAR(100),
    ticket_code VARCHAR(100),
    shipping_date DATE,
    note VARCHAR(500),
    amount_tax DECIMAL(18, 4),
    amount_total DECIMAL(18, 4),
    amount_paid DECIMAL(18, 4),
    amount_return DECIMAL(18, 4),
    currency_rate DECIMAL(18, 4),
    tip_amount DECIMAL(18, 4),
    to_invoice BOOLEAN,
    is_tipped BOOLEAN,
    date_order TIMESTAMP,
    employee_id INTEGER,
    cashier VARCHAR(100),
    next_online_payment_amount DECIMAL(18, 4),
    crm_team_id INTEGER,
    debit_note_id INTEGER,
    invoice_id_for_debit INTEGER,
    reset_sequence INTEGER,
    my_invoice_status TEXT,
    invoice_type VARCHAR(100),
    reference_inv_id VARCHAR(500),
    response_msg VARCHAR(500),
    invalid_msg VARCHAR(500),
    is_submit_document BOOLEAN,
    is_debit_note BOOLEAN,
    is_credit_note BOOLEAN,
    is_consolidate BOOLEAN,
    validation_date_time TIMESTAMP,
    credit_check BOOLEAN,
    is_submit_in_pos BOOLEAN,
    is_hide_payment_debit BOOLEAN,
    is_hide_payment_credit BOOLEAN,
    formatted_date_order VARCHAR(100),
    is_hide_reverse_consolidation BOOLEAN,
    main_order_id INTEGER,
    main_order_pos_reference VARCHAR(100)
);

CREATE TABLE pos_order_line (
    id INT PRIMARY KEY,
    company_id INTEGER,
    product_id INTEGER,
    order_id INTEGER,
    refunded_orderline_id INTEGER,
    combo_parent_id INTEGER,
    name VARCHAR(100),
    notice VARCHAR(100),
    full_product_name VARCHAR(100),
    customer_note VARCHAR(100),
    price_unit DECIMAL(18, 4),
    qty DECIMAL(18, 4),
    price_subtotal DECIMAL(18, 4),
    price_subtotal_incl DECIMAL(18, 4),
    total_cost DECIMAL(18, 4),
    discount DECIMAL(18, 4),
    skip_change BOOLEAN,
    is_total_cost_computed BOOLEAN,
    price_extra FLOAT,
    sale_order_origin_id INTEGER,
    sale_order_line_id INTEGER,
    down_payment_details VARCHAR(500),
    discount_amount FLOAT,
    credit_note_discount FLOAT
);

CREATE TABLE product_product (
    id INT PRIMARY KEY,
    product_tmpl_id INTEGER,
    default_code VARCHAR(100),
    barcode VARCHAR(100),
    combination_indices VARCHAR(100),
    volume DECIMAL(18, 4),
    weight DECIMAL(18, 4),
    can_image_variant_1024_be_zoomed BOOLEAN,
    lot_properties_definition TEXT,
    classification_code_id INTEGER
);

CREATE TABLE product_template (
    id INT PRIMARY KEY,
    categ_id INTEGER,
    uom_id INTEGER,
    uom_po_id INTEGER,
    company_id INTEGER,
    detailed_type VARCHAR(100),
    type VARCHAR(100),
    default_code VARCHAR(100),
    priority VARCHAR(100),
    name VARCHAR(100),
    description VARCHAR(500),
    description_purchase TEXT,
    description_sale TEXT,
    product_properties TEXT,
    list_price DECIMAL(18, 4),
    volume DECIMAL(18, 4),
    weight DECIMAL(18, 4),
    sale_ok BOOLEAN,
    purchase_ok BOOLEAN,
    can_image_1024_be_zoomed BOOLEAN,
    has_configurable_attributes BOOLEAN,
    sale_delay INTEGER,
    tracking VARCHAR(100),
    description_picking TEXT,
    description_pickingout TEXT,
    description_pickingin TEXT,
    service_type VARCHAR(100),
    sale_line_warn VARCHAR(100),
    expense_policy VARCHAR(100),
    invoice_policy VARCHAR(100),
    sale_line_warn_msg VARCHAR(500),
    purchase_method VARCHAR(100),
    purchase_line_warn VARCHAR(100),
    purchase_line_warn_msg VARCHAR(500),
    available_in_pos BOOLEAN,
    to_weight BOOLEAN,
    classification_code_id INTEGER,
    unit_measurement_code_id INTEGER,
    service_tracking VARCHAR(100),
    product_classification VARCHAR(100),
    split_method_landed_cost VARCHAR(100),
    landed_cost_ok BOOLEAN,
    is_data_product BOOLEAN,
    alert_min_qty FLOAT
);

CREATE TABLE res_partner (
    id INT PRIMARY KEY,
    company_id INTEGER,
    name VARCHAR(100),
    title INTEGER,
    parent_id INTEGER,
    user_id INTEGER,
    state_id INTEGER,
    country_id INTEGER,
    industry_id INTEGER,
    commercial_partner_id INTEGER,
    complete_name VARCHAR(100),
    ref VARCHAR(100),
    lang VARCHAR(100),
    tz VARCHAR(100),
    vat VARCHAR(100),
    company_registry VARCHAR(100),
    website VARCHAR(100),
    function VARCHAR(100),
    type VARCHAR(100),
    street VARCHAR(100),
    street2 VARCHAR(100),
    zip VARCHAR(100),
    city VARCHAR(100),
    email VARCHAR(100),
    phone VARCHAR(100),
    mobile VARCHAR(100),
    commercial_company_name VARCHAR(100),
    company_name VARCHAR(100),
    date DATE,
    comment VARCHAR(500),
    partner_latitude DECIMAL(18, 4),
    partner_longitude DECIMAL(18, 4),
    employee BOOLEAN,
    is_company BOOLEAN,
    partner_share BOOLEAN,
    message_bounce INTEGER,
    email_normalized VARCHAR(100),
    signup_type VARCHAR(100),
    signup_expiration TIMESTAMP,
    signup_token VARCHAR(100),
    team_id INTEGER,
    phone_sanitized VARCHAR(100),
    supplier_rank INTEGER,
    customer_rank INTEGER,
    invoice_warn VARCHAR(100),
    invoice_warn_msg VARCHAR(500),
    debit_limit DECIMAL(18, 4),
    last_time_entries_checked TIMESTAMP,
    picking_warn VARCHAR(100),
    picking_warn_msg VARCHAR(500),
    ubl_cii_format VARCHAR(100),
    peppol_endpoint VARCHAR(100),
    peppol_eas VARCHAR(100),
    sale_warn VARCHAR(100),
    sale_warn_msg VARCHAR(500),
    payment_responsible_id INTEGER,
    latest_followup_sequence INTEGER,
    payment_next_action_date DATE,
    payment_note VARCHAR(500),
    payment_next_action VARCHAR(500),
    website_id INTEGER,
    is_published BOOLEAN,
    buyer_id INTEGER,
    purchase_warn VARCHAR(100),
    purchase_warn_msg VARCHAR(500),
    city_id INTEGER,
    post_code_id INTEGER,
    nric VARCHAR(100),
    state VARCHAR(100),
    id_type VARCHAR(100),
    malay_and_no_malay VARCHAR(100),
    sst VARCHAR(100),
    msic_code VARCHAR(100),
    ttx VARCHAR(100),
    b_act_des_bn VARCHAR(100),
    b_act_des_en VARCHAR(100),
    street_3 VARCHAR(100),
    error_message VARCHAR(500),
    is_malaysia BOOLEAN,
    is_non_malaysian BOOLEAN,
    is_government BOOLEAN,
    is_portal_data_submit BOOLEAN,
    is_supplier BOOLEAN,
    qr_generated_timestamp TIMESTAMP,
    personal_tin VARCHAR(100),
    company_tin VARCHAR(100),
    business_reg_number VARCHAR(100),
    custom_credit DECIMAL(18, 4),
    is_general_partner BOOLEAN,
    internal_notes VARCHAR(500),
    nric_label VARCHAR(100),
    msic_code_id INTEGER,
    self_bill_for_supplier BOOLEAN
);

CREATE TABLE res_users (
    id INT PRIMARY KEY,
    company_id INTEGER,
    partner_id INTEGER,
    login VARCHAR(100),
    password VARCHAR(100),
    action_id INTEGER,
    signature VARCHAR(500),
    share BOOLEAN,
    totp_secret VARCHAR(100),
    notification_type VARCHAR(100),
    odoobot_state VARCHAR(100),
    odoobot_failed BOOLEAN,
    sale_team_id INTEGER,
    is_apping_user BOOLEAN,
    is_login_with_any_user BOOLEAN,
    user_group_id INTEGER,
    user_types VARCHAR(100),
    is_lhdn_admin BOOLEAN,
    mail_alert BOOLEAN,
    login_access INTEGER,
    locked_until TIMESTAMP,
    oauth_provider_id INTEGER,
    oauth_uid VARCHAR(100),
    oauth_access_token VARCHAR(100),
    website_id INTEGER,
    passcode VARCHAR(100),
    is_reg_tc BOOLEAN,
    is_user_tc BOOLEAN,
    is_company_owner BOOLEAN,
    sidebar_type VARCHAR(100)
);

Return only the SQL query without explanation.
SELECT COUNT(*) 
FROM res_partner
WHERE user_id = (SELECT id FROM res_users WHERE login ILIKE '%Sarah%');",
"SCHEMA:
TABLE pos_order(id, date_order)
TABLE pos_order_line(id, order_id, product_id, qty)
TABLE product_product(id, product_tmpl_id)
TABLE product_template(id, name)

Prompt: You are an expert SQL developer.

Convert the following natural language request into a single SQL SELECT query.
Use only the schema provided below and do not make assumptions beyond it.

only take table and field from given scheme no other is allowed

Natural Language Request:
Which customers visited more than 3 times this week?

Database Schema:
CREATE TABLE pos_order (
    id INT PRIMARY KEY,
    user_id INTEGER,
    company_id INTEGER,
    pricelist_id INTEGER,
    partner_id INTEGER,
    sequence_number INTEGER,
    session_id INTEGER,
    config_id INTEGER,
    account_move INTEGER,
    procurement_group_id INTEGER,
    nb_print INTEGER,
    sale_journal INTEGER,
    fiscal_position_id INTEGER,
    name VARCHAR(100),
    last_order_preparation_change VARCHAR(100),
    state VARCHAR(100),
    pos_reference VARCHAR(100),
    ticket_code VARCHAR(100),
    shipping_date DATE,
    note VARCHAR(500),
    amount_tax DECIMAL(18, 4),
    amount_total DECIMAL(18, 4),
    amount_paid DECIMAL(18, 4),
    amount_return DECIMAL(18, 4),
    currency_rate DECIMAL(18, 4),
    tip_amount DECIMAL(18, 4),
    to_invoice BOOLEAN,
    is_tipped BOOLEAN,
    date_order TIMESTAMP,
    employee_id INTEGER,
    cashier VARCHAR(100),
    next_online_payment_amount DECIMAL(18, 4),
    crm_team_id INTEGER,
    debit_note_id INTEGER,
    invoice_id_for_debit INTEGER,
    reset_sequence INTEGER,
    my_invoice_status TEXT,
    invoice_type VARCHAR(100),
    reference_inv_id VARCHAR(500),
    response_msg VARCHAR(500),
    invalid_msg VARCHAR(500),
    is_submit_document BOOLEAN,
    is_debit_note BOOLEAN,
    is_credit_note BOOLEAN,
    is_consolidate BOOLEAN,
    validation_date_time TIMESTAMP,
    credit_check BOOLEAN,
    is_submit_in_pos BOOLEAN,
    is_hide_payment_debit BOOLEAN,
    is_hide_payment_credit BOOLEAN,
    formatted_date_order VARCHAR(100),
    is_hide_reverse_consolidation BOOLEAN,
    main_order_id INTEGER,
    main_order_pos_reference VARCHAR(100)
);

CREATE TABLE pos_order_line (
    id INT PRIMARY KEY,
    company_id INTEGER,
    product_id INTEGER,
    order_id INTEGER,
    refunded_orderline_id INTEGER,
    combo_parent_id INTEGER,
    name VARCHAR(100),
    notice VARCHAR(100),
    full_product_name VARCHAR(100),
    customer_note VARCHAR(100),
    price_unit DECIMAL(18, 4),
    qty DECIMAL(18, 4),
    price_subtotal DECIMAL(18, 4),
    price_subtotal_incl DECIMAL(18, 4),
    total_cost DECIMAL(18, 4),
    discount DECIMAL(18, 4),
    skip_change BOOLEAN,
    is_total_cost_computed BOOLEAN,
    price_extra FLOAT,
    sale_order_origin_id INTEGER,
    sale_order_line_id INTEGER,
    down_payment_details VARCHAR(500),
    discount_amount FLOAT,
    credit_note_discount FLOAT
);

CREATE TABLE product_product (
    id INT PRIMARY KEY,
    product_tmpl_id INTEGER,
    default_code VARCHAR(100),
    barcode VARCHAR(100),
    combination_indices VARCHAR(100),
    volume DECIMAL(18, 4),
    weight DECIMAL(18, 4),
    can_image_variant_1024_be_zoomed BOOLEAN,
    lot_properties_definition TEXT,
    classification_code_id INTEGER
);

CREATE TABLE product_template (
    id INT PRIMARY KEY,
    categ_id INTEGER,
    uom_id INTEGER,
    uom_po_id INTEGER,
    company_id INTEGER,
    detailed_type VARCHAR(100),
    type VARCHAR(100),
    default_code VARCHAR(100),
    priority VARCHAR(100),
    name VARCHAR(100),
    description VARCHAR(500),
    description_purchase TEXT,
    description_sale TEXT,
    product_properties TEXT,
    list_price DECIMAL(18, 4),
    volume DECIMAL(18, 4),
    weight DECIMAL(18, 4),
    sale_ok BOOLEAN,
    purchase_ok BOOLEAN,
    can_image_1024_be_zoomed BOOLEAN,
    has_configurable_attributes BOOLEAN,
    sale_delay INTEGER,
    tracking VARCHAR(100),
    description_picking TEXT,
    description_pickingout TEXT,
    description_pickingin TEXT,
    service_type VARCHAR(100),
    sale_line_warn VARCHAR(100),
    expense_policy VARCHAR(100),
    invoice_policy VARCHAR(100),
    sale_line_warn_msg VARCHAR(500),
    purchase_method VARCHAR(100),
    purchase_line_warn VARCHAR(100),
    purchase_line_warn_msg VARCHAR(500),
    available_in_pos BOOLEAN,
    to_weight BOOLEAN,
    classification_code_id INTEGER,
    unit_measurement_code_id INTEGER,
    service_tracking VARCHAR(100),
    product_classification VARCHAR(100),
    split_method_landed_cost VARCHAR(100),
    landed_cost_ok BOOLEAN,
    is_data_product BOOLEAN,
    alert_min_qty FLOAT
);

CREATE TABLE res_partner (
    id INT PRIMARY KEY,
    company_id INTEGER,
    name VARCHAR(100),
    title INTEGER,
    parent_id INTEGER,
    user_id INTEGER,
    state_id INTEGER,
    country_id INTEGER,
    industry_id INTEGER,
    commercial_partner_id INTEGER,
    complete_name VARCHAR(100),
    ref VARCHAR(100),
    lang VARCHAR(100),
    tz VARCHAR(100),
    vat VARCHAR(100),
    company_registry VARCHAR(100),
    website VARCHAR(100),
    function VARCHAR(100),
    type VARCHAR(100),
    street VARCHAR(100),
    street2 VARCHAR(100),
    zip VARCHAR(100),
    city VARCHAR(100),
    email VARCHAR(100),
    phone VARCHAR(100),
    mobile VARCHAR(100),
    commercial_company_name VARCHAR(100),
    company_name VARCHAR(100),
    date DATE,
    comment VARCHAR(500),
    partner_latitude DECIMAL(18, 4),
    partner_longitude DECIMAL(18, 4),
    employee BOOLEAN,
    is_company BOOLEAN,
    partner_share BOOLEAN,
    message_bounce INTEGER,
    email_normalized VARCHAR(100),
    signup_type VARCHAR(100),
    signup_expiration TIMESTAMP,
    signup_token VARCHAR(100),
    team_id INTEGER,
    phone_sanitized VARCHAR(100),
    supplier_rank INTEGER,
    customer_rank INTEGER,
    invoice_warn VARCHAR(100),
    invoice_warn_msg VARCHAR(500),
    debit_limit DECIMAL(18, 4),
    last_time_entries_checked TIMESTAMP,
    picking_warn VARCHAR(100),
    picking_warn_msg VARCHAR(500),
    ubl_cii_format VARCHAR(100),
    peppol_endpoint VARCHAR(100),
    peppol_eas VARCHAR(100),
    sale_warn VARCHAR(100),
    sale_warn_msg VARCHAR(500),
    payment_responsible_id INTEGER,
    latest_followup_sequence INTEGER,
    payment_next_action_date DATE,
    payment_note VARCHAR(500),
    payment_next_action VARCHAR(500),
    website_id INTEGER,
    is_published BOOLEAN,
    buyer_id INTEGER,
    purchase_warn VARCHAR(100),
    purchase_warn_msg VARCHAR(500),
    city_id INTEGER,
    post_code_id INTEGER,
    nric VARCHAR(100),
    state VARCHAR(100),
    id_type VARCHAR(100),
    malay_and_no_malay VARCHAR(100),
    sst VARCHAR(100),
    msic_code VARCHAR(100),
    ttx VARCHAR(100),
    b_act_des_bn VARCHAR(100),
    b_act_des_en VARCHAR(100),
    street_3 VARCHAR(100),
    error_message VARCHAR(500),
    is_malaysia BOOLEAN,
    is_non_malaysian BOOLEAN,
    is_government BOOLEAN,
    is_portal_data_submit BOOLEAN,
    is_supplier BOOLEAN,
    qr_generated_timestamp TIMESTAMP,
    personal_tin VARCHAR(100),
    company_tin VARCHAR(100),
    business_reg_number VARCHAR(100),
    custom_credit DECIMAL(18, 4),
    is_general_partner BOOLEAN,
    internal_notes VARCHAR(500),
    nric_label VARCHAR(100),
    msic_code_id INTEGER,
    self_bill_for_supplier BOOLEAN
);

CREATE TABLE res_users (
    id INT PRIMARY KEY,
    company_id INTEGER,
    partner_id INTEGER,
    login VARCHAR(100),
    password VARCHAR(100),
    action_id INTEGER,
    signature VARCHAR(500),
    share BOOLEAN,
    totp_secret VARCHAR(100),
    notification_type VARCHAR(100),
    odoobot_state VARCHAR(100),
    odoobot_failed BOOLEAN,
    sale_team_id INTEGER,
    is_apping_user BOOLEAN,
    is_login_with_any_user BOOLEAN,
    user_group_id INTEGER,
    user_types VARCHAR(100),
    is_lhdn_admin BOOLEAN,
    mail_alert BOOLEAN,
    login_access INTEGER,
    locked_until TIMESTAMP,
    oauth_provider_id INTEGER,
    oauth_uid VARCHAR(100),
    oauth_access_token VARCHAR(100),
    website_id INTEGER,
    passcode VARCHAR(100),
    is_reg_tc BOOLEAN,
    is_user_tc BOOLEAN,
    is_company_owner BOOLEAN,
    sidebar_type VARCHAR(100)
);

Return only the SQL query without explanation.
SELECT partner_id, COUNT(*) AS visits
FROM pos_order
WHERE date_order >= CURRENT_DATE - INTERVAL '7 days'
GROUP BY partner_id
HAVING COUNT(*) > 3;",
"SCHEMA:
TABLE pos_order(id, date_order)
TABLE pos_order_line(id, order_id, product_id, qty)
TABLE product_product(id, product_tmpl_id)
TABLE product_template(id, name)

Prompt: You are an expert SQL developer.

Convert the following natural language request into a single SQL SELECT query.
Use only the schema provided below and do not make assumptions beyond it.

only take table and field from given scheme no other is allowed

Natural Language Request:
Find customers who only shop on weekends.

Database Schema:
CREATE TABLE pos_order (
    id INT PRIMARY KEY,
    user_id INTEGER,
    company_id INTEGER,
    pricelist_id INTEGER,
    partner_id INTEGER,
    sequence_number INTEGER,
    session_id INTEGER,
    config_id INTEGER,
    account_move INTEGER,
    procurement_group_id INTEGER,
    nb_print INTEGER,
    sale_journal INTEGER,
    fiscal_position_id INTEGER,
    name VARCHAR(100),
    last_order_preparation_change VARCHAR(100),
    state VARCHAR(100),
    pos_reference VARCHAR(100),
    ticket_code VARCHAR(100),
    shipping_date DATE,
    note VARCHAR(500),
    amount_tax DECIMAL(18, 4),
    amount_total DECIMAL(18, 4),
    amount_paid DECIMAL(18, 4),
    amount_return DECIMAL(18, 4),
    currency_rate DECIMAL(18, 4),
    tip_amount DECIMAL(18, 4),
    to_invoice BOOLEAN,
    is_tipped BOOLEAN,
    date_order TIMESTAMP,
    employee_id INTEGER,
    cashier VARCHAR(100),
    next_online_payment_amount DECIMAL(18, 4),
    crm_team_id INTEGER,
    debit_note_id INTEGER,
    invoice_id_for_debit INTEGER,
    reset_sequence INTEGER,
    my_invoice_status TEXT,
    invoice_type VARCHAR(100),
    reference_inv_id VARCHAR(500),
    response_msg VARCHAR(500),
    invalid_msg VARCHAR(500),
    is_submit_document BOOLEAN,
    is_debit_note BOOLEAN,
    is_credit_note BOOLEAN,
    is_consolidate BOOLEAN,
    validation_date_time TIMESTAMP,
    credit_check BOOLEAN,
    is_submit_in_pos BOOLEAN,
    is_hide_payment_debit BOOLEAN,
    is_hide_payment_credit BOOLEAN,
    formatted_date_order VARCHAR(100),
    is_hide_reverse_consolidation BOOLEAN,
    main_order_id INTEGER,
    main_order_pos_reference VARCHAR(100)
);

CREATE TABLE pos_order_line (
    id INT PRIMARY KEY,
    company_id INTEGER,
    product_id INTEGER,
    order_id INTEGER,
    refunded_orderline_id INTEGER,
    combo_parent_id INTEGER,
    name VARCHAR(100),
    notice VARCHAR(100),
    full_product_name VARCHAR(100),
    customer_note VARCHAR(100),
    price_unit DECIMAL(18, 4),
    qty DECIMAL(18, 4),
    price_subtotal DECIMAL(18, 4),
    price_subtotal_incl DECIMAL(18, 4),
    total_cost DECIMAL(18, 4),
    discount DECIMAL(18, 4),
    skip_change BOOLEAN,
    is_total_cost_computed BOOLEAN,
    price_extra FLOAT,
    sale_order_origin_id INTEGER,
    sale_order_line_id INTEGER,
    down_payment_details VARCHAR(500),
    discount_amount FLOAT,
    credit_note_discount FLOAT
);

CREATE TABLE product_product (
    id INT PRIMARY KEY,
    product_tmpl_id INTEGER,
    default_code VARCHAR(100),
    barcode VARCHAR(100),
    combination_indices VARCHAR(100),
    volume DECIMAL(18, 4),
    weight DECIMAL(18, 4),
    can_image_variant_1024_be_zoomed BOOLEAN,
    lot_properties_definition TEXT,
    classification_code_id INTEGER
);

CREATE TABLE product_template (
    id INT PRIMARY KEY,
    categ_id INTEGER,
    uom_id INTEGER,
    uom_po_id INTEGER,
    company_id INTEGER,
    detailed_type VARCHAR(100),
    type VARCHAR(100),
    default_code VARCHAR(100),
    priority VARCHAR(100),
    name VARCHAR(100),
    description VARCHAR(500),
    description_purchase TEXT,
    description_sale TEXT,
    product_properties TEXT,
    list_price DECIMAL(18, 4),
    volume DECIMAL(18, 4),
    weight DECIMAL(18, 4),
    sale_ok BOOLEAN,
    purchase_ok BOOLEAN,
    can_image_1024_be_zoomed BOOLEAN,
    has_configurable_attributes BOOLEAN,
    sale_delay INTEGER,
    tracking VARCHAR(100),
    description_picking TEXT,
    description_pickingout TEXT,
    description_pickingin TEXT,
    service_type VARCHAR(100),
    sale_line_warn VARCHAR(100),
    expense_policy VARCHAR(100),
    invoice_policy VARCHAR(100),
    sale_line_warn_msg VARCHAR(500),
    purchase_method VARCHAR(100),
    purchase_line_warn VARCHAR(100),
    purchase_line_warn_msg VARCHAR(500),
    available_in_pos BOOLEAN,
    to_weight BOOLEAN,
    classification_code_id INTEGER,
    unit_measurement_code_id INTEGER,
    service_tracking VARCHAR(100),
    product_classification VARCHAR(100),
    split_method_landed_cost VARCHAR(100),
    landed_cost_ok BOOLEAN,
    is_data_product BOOLEAN,
    alert_min_qty FLOAT
);

CREATE TABLE res_partner (
    id INT PRIMARY KEY,
    company_id INTEGER,
    name VARCHAR(100),
    title INTEGER,
    parent_id INTEGER,
    user_id INTEGER,
    state_id INTEGER,
    country_id INTEGER,
    industry_id INTEGER,
    commercial_partner_id INTEGER,
    complete_name VARCHAR(100),
    ref VARCHAR(100),
    lang VARCHAR(100),
    tz VARCHAR(100),
    vat VARCHAR(100),
    company_registry VARCHAR(100),
    website VARCHAR(100),
    function VARCHAR(100),
    type VARCHAR(100),
    street VARCHAR(100),
    street2 VARCHAR(100),
    zip VARCHAR(100),
    city VARCHAR(100),
    email VARCHAR(100),
    phone VARCHAR(100),
    mobile VARCHAR(100),
    commercial_company_name VARCHAR(100),
    company_name VARCHAR(100),
    date DATE,
    comment VARCHAR(500),
    partner_latitude DECIMAL(18, 4),
    partner_longitude DECIMAL(18, 4),
    employee BOOLEAN,
    is_company BOOLEAN,
    partner_share BOOLEAN,
    message_bounce INTEGER,
    email_normalized VARCHAR(100),
    signup_type VARCHAR(100),
    signup_expiration TIMESTAMP,
    signup_token VARCHAR(100),
    team_id INTEGER,
    phone_sanitized VARCHAR(100),
    supplier_rank INTEGER,
    customer_rank INTEGER,
    invoice_warn VARCHAR(100),
    invoice_warn_msg VARCHAR(500),
    debit_limit DECIMAL(18, 4),
    last_time_entries_checked TIMESTAMP,
    picking_warn VARCHAR(100),
    picking_warn_msg VARCHAR(500),
    ubl_cii_format VARCHAR(100),
    peppol_endpoint VARCHAR(100),
    peppol_eas VARCHAR(100),
    sale_warn VARCHAR(100),
    sale_warn_msg VARCHAR(500),
    payment_responsible_id INTEGER,
    latest_followup_sequence INTEGER,
    payment_next_action_date DATE,
    payment_note VARCHAR(500),
    payment_next_action VARCHAR(500),
    website_id INTEGER,
    is_published BOOLEAN,
    buyer_id INTEGER,
    purchase_warn VARCHAR(100),
    purchase_warn_msg VARCHAR(500),
    city_id INTEGER,
    post_code_id INTEGER,
    nric VARCHAR(100),
    state VARCHAR(100),
    id_type VARCHAR(100),
    malay_and_no_malay VARCHAR(100),
    sst VARCHAR(100),
    msic_code VARCHAR(100),
    ttx VARCHAR(100),
    b_act_des_bn VARCHAR(100),
    b_act_des_en VARCHAR(100),
    street_3 VARCHAR(100),
    error_message VARCHAR(500),
    is_malaysia BOOLEAN,
    is_non_malaysian BOOLEAN,
    is_government BOOLEAN,
    is_portal_data_submit BOOLEAN,
    is_supplier BOOLEAN,
    qr_generated_timestamp TIMESTAMP,
    personal_tin VARCHAR(100),
    company_tin VARCHAR(100),
    business_reg_number VARCHAR(100),
    custom_credit DECIMAL(18, 4),
    is_general_partner BOOLEAN,
    internal_notes VARCHAR(500),
    nric_label VARCHAR(100),
    msic_code_id INTEGER,
    self_bill_for_supplier BOOLEAN
);

CREATE TABLE res_users (
    id INT PRIMARY KEY,
    company_id INTEGER,
    partner_id INTEGER,
    login VARCHAR(100),
    password VARCHAR(100),
    action_id INTEGER,
    signature VARCHAR(500),
    share BOOLEAN,
    totp_secret VARCHAR(100),
    notification_type VARCHAR(100),
    odoobot_state VARCHAR(100),
    odoobot_failed BOOLEAN,
    sale_team_id INTEGER,
    is_apping_user BOOLEAN,
    is_login_with_any_user BOOLEAN,
    user_group_id INTEGER,
    user_types VARCHAR(100),
    is_lhdn_admin BOOLEAN,
    mail_alert BOOLEAN,
    login_access INTEGER,
    locked_until TIMESTAMP,
    oauth_provider_id INTEGER,
    oauth_uid VARCHAR(100),
    oauth_access_token VARCHAR(100),
    website_id INTEGER,
    passcode VARCHAR(100),
    is_reg_tc BOOLEAN,
    is_user_tc BOOLEAN,
    is_company_owner BOOLEAN,
    sidebar_type VARCHAR(100)
);

Return only the SQL query without explanation.
SELECT partner_id, COUNT(*) AS weekend_visits
FROM pos_order
WHERE EXTRACT(DOW FROM date_order) IN (0, 6)
GROUP BY partner_id
HAVING COUNT(*) = (
    SELECT COUNT(*) 
    FROM pos_order po2 
    WHERE po2.partner_id = pos_order.partner_id
);",
"SCHEMA:
TABLE pos_order(id, date_order)
TABLE pos_order_line(id, order_id, product_id, qty)
TABLE product_product(id, product_tmpl_id)
TABLE product_template(id, name)

Prompt: You are an expert SQL developer.

Convert the following natural language request into a single SQL SELECT query.
Use only the schema provided below and do not make assumptions beyond it.

only take table and field from given scheme no other is allowed

Natural Language Request:
List all customers who gave negative feedback or complaints.

Database Schema:
CREATE TABLE pos_order (
    id INT PRIMARY KEY,
    user_id INTEGER,
    company_id INTEGER,
    pricelist_id INTEGER,
    partner_id INTEGER,
    sequence_number INTEGER,
    session_id INTEGER,
    config_id INTEGER,
    account_move INTEGER,
    procurement_group_id INTEGER,
    nb_print INTEGER,
    sale_journal INTEGER,
    fiscal_position_id INTEGER,
    name VARCHAR(100),
    last_order_preparation_change VARCHAR(100),
    state VARCHAR(100),
    pos_reference VARCHAR(100),
    ticket_code VARCHAR(100),
    shipping_date DATE,
    note VARCHAR(500),
    amount_tax DECIMAL(18, 4),
    amount_total DECIMAL(18, 4),
    amount_paid DECIMAL(18, 4),
    amount_return DECIMAL(18, 4),
    currency_rate DECIMAL(18, 4),
    tip_amount DECIMAL(18, 4),
    to_invoice BOOLEAN,
    is_tipped BOOLEAN,
    date_order TIMESTAMP,
    employee_id INTEGER,
    cashier VARCHAR(100),
    next_online_payment_amount DECIMAL(18, 4),
    crm_team_id INTEGER,
    debit_note_id INTEGER,
    invoice_id_for_debit INTEGER,
    reset_sequence INTEGER,
    my_invoice_status TEXT,
    invoice_type VARCHAR(100),
    reference_inv_id VARCHAR(500),
    response_msg VARCHAR(500),
    invalid_msg VARCHAR(500),
    is_submit_document BOOLEAN,
    is_debit_note BOOLEAN,
    is_credit_note BOOLEAN,
    is_consolidate BOOLEAN,
    validation_date_time TIMESTAMP,
    credit_check BOOLEAN,
    is_submit_in_pos BOOLEAN,
    is_hide_payment_debit BOOLEAN,
    is_hide_payment_credit BOOLEAN,
    formatted_date_order VARCHAR(100),
    is_hide_reverse_consolidation BOOLEAN,
    main_order_id INTEGER,
    main_order_pos_reference VARCHAR(100)
);

CREATE TABLE pos_order_line (
    id INT PRIMARY KEY,
    company_id INTEGER,
    product_id INTEGER,
    order_id INTEGER,
    refunded_orderline_id INTEGER,
    combo_parent_id INTEGER,
    name VARCHAR(100),
    notice VARCHAR(100),
    full_product_name VARCHAR(100),
    customer_note VARCHAR(100),
    price_unit DECIMAL(18, 4),
    qty DECIMAL(18, 4),
    price_subtotal DECIMAL(18, 4),
    price_subtotal_incl DECIMAL(18, 4),
    total_cost DECIMAL(18, 4),
    discount DECIMAL(18, 4),
    skip_change BOOLEAN,
    is_total_cost_computed BOOLEAN,
    price_extra FLOAT,
    sale_order_origin_id INTEGER,
    sale_order_line_id INTEGER,
    down_payment_details VARCHAR(500),
    discount_amount FLOAT,
    credit_note_discount FLOAT
);

CREATE TABLE product_product (
    id INT PRIMARY KEY,
    product_tmpl_id INTEGER,
    default_code VARCHAR(100),
    barcode VARCHAR(100),
    combination_indices VARCHAR(100),
    volume DECIMAL(18, 4),
    weight DECIMAL(18, 4),
    can_image_variant_1024_be_zoomed BOOLEAN,
    lot_properties_definition TEXT,
    classification_code_id INTEGER
);

CREATE TABLE product_template (
    id INT PRIMARY KEY,
    categ_id INTEGER,
    uom_id INTEGER,
    uom_po_id INTEGER,
    company_id INTEGER,
    detailed_type VARCHAR(100),
    type VARCHAR(100),
    default_code VARCHAR(100),
    priority VARCHAR(100),
    name VARCHAR(100),
    description VARCHAR(500),
    description_purchase TEXT,
    description_sale TEXT,
    product_properties TEXT,
    list_price DECIMAL(18, 4),
    volume DECIMAL(18, 4),
    weight DECIMAL(18, 4),
    sale_ok BOOLEAN,
    purchase_ok BOOLEAN,
    can_image_1024_be_zoomed BOOLEAN,
    has_configurable_attributes BOOLEAN,
    sale_delay INTEGER,
    tracking VARCHAR(100),
    description_picking TEXT,
    description_pickingout TEXT,
    description_pickingin TEXT,
    service_type VARCHAR(100),
    sale_line_warn VARCHAR(100),
    expense_policy VARCHAR(100),
    invoice_policy VARCHAR(100),
    sale_line_warn_msg VARCHAR(500),
    purchase_method VARCHAR(100),
    purchase_line_warn VARCHAR(100),
    purchase_line_warn_msg VARCHAR(500),
    available_in_pos BOOLEAN,
    to_weight BOOLEAN,
    classification_code_id INTEGER,
    unit_measurement_code_id INTEGER,
    service_tracking VARCHAR(100),
    product_classification VARCHAR(100),
    split_method_landed_cost VARCHAR(100),
    landed_cost_ok BOOLEAN,
    is_data_product BOOLEAN,
    alert_min_qty FLOAT
);

CREATE TABLE res_partner (
    id INT PRIMARY KEY,
    company_id INTEGER,
    name VARCHAR(100),
    title INTEGER,
    parent_id INTEGER,
    user_id INTEGER,
    state_id INTEGER,
    country_id INTEGER,
    industry_id INTEGER,
    commercial_partner_id INTEGER,
    complete_name VARCHAR(100),
    ref VARCHAR(100),
    lang VARCHAR(100),
    tz VARCHAR(100),
    vat VARCHAR(100),
    company_registry VARCHAR(100),
    website VARCHAR(100),
    function VARCHAR(100),
    type VARCHAR(100),
    street VARCHAR(100),
    street2 VARCHAR(100),
    zip VARCHAR(100),
    city VARCHAR(100),
    email VARCHAR(100),
    phone VARCHAR(100),
    mobile VARCHAR(100),
    commercial_company_name VARCHAR(100),
    company_name VARCHAR(100),
    date DATE,
    comment VARCHAR(500),
    partner_latitude DECIMAL(18, 4),
    partner_longitude DECIMAL(18, 4),
    employee BOOLEAN,
    is_company BOOLEAN,
    partner_share BOOLEAN,
    message_bounce INTEGER,
    email_normalized VARCHAR(100),
    signup_type VARCHAR(100),
    signup_expiration TIMESTAMP,
    signup_token VARCHAR(100),
    team_id INTEGER,
    phone_sanitized VARCHAR(100),
    supplier_rank INTEGER,
    customer_rank INTEGER,
    invoice_warn VARCHAR(100),
    invoice_warn_msg VARCHAR(500),
    debit_limit DECIMAL(18, 4),
    last_time_entries_checked TIMESTAMP,
    picking_warn VARCHAR(100),
    picking_warn_msg VARCHAR(500),
    ubl_cii_format VARCHAR(100),
    peppol_endpoint VARCHAR(100),
    peppol_eas VARCHAR(100),
    sale_warn VARCHAR(100),
    sale_warn_msg VARCHAR(500),
    payment_responsible_id INTEGER,
    latest_followup_sequence INTEGER,
    payment_next_action_date DATE,
    payment_note VARCHAR(500),
    payment_next_action VARCHAR(500),
    website_id INTEGER,
    is_published BOOLEAN,
    buyer_id INTEGER,
    purchase_warn VARCHAR(100),
    purchase_warn_msg VARCHAR(500),
    city_id INTEGER,
    post_code_id INTEGER,
    nric VARCHAR(100),
    state VARCHAR(100),
    id_type VARCHAR(100),
    malay_and_no_malay VARCHAR(100),
    sst VARCHAR(100),
    msic_code VARCHAR(100),
    ttx VARCHAR(100),
    b_act_des_bn VARCHAR(100),
    b_act_des_en VARCHAR(100),
    street_3 VARCHAR(100),
    error_message VARCHAR(500),
    is_malaysia BOOLEAN,
    is_non_malaysian BOOLEAN,
    is_government BOOLEAN,
    is_portal_data_submit BOOLEAN,
    is_supplier BOOLEAN,
    qr_generated_timestamp TIMESTAMP,
    personal_tin VARCHAR(100),
    company_tin VARCHAR(100),
    business_reg_number VARCHAR(100),
    custom_credit DECIMAL(18, 4),
    is_general_partner BOOLEAN,
    internal_notes VARCHAR(500),
    nric_label VARCHAR(100),
    msic_code_id INTEGER,
    self_bill_for_supplier BOOLEAN
);

CREATE TABLE res_users (
    id INT PRIMARY KEY,
    company_id INTEGER,
    partner_id INTEGER,
    login VARCHAR(100),
    password VARCHAR(100),
    action_id INTEGER,
    signature VARCHAR(500),
    share BOOLEAN,
    totp_secret VARCHAR(100),
    notification_type VARCHAR(100),
    odoobot_state VARCHAR(100),
    odoobot_failed BOOLEAN,
    sale_team_id INTEGER,
    is_apping_user BOOLEAN,
    is_login_with_any_user BOOLEAN,
    user_group_id INTEGER,
    user_types VARCHAR(100),
    is_lhdn_admin BOOLEAN,
    mail_alert BOOLEAN,
    login_access INTEGER,
    locked_until TIMESTAMP,
    oauth_provider_id INTEGER,
    oauth_uid VARCHAR(100),
    oauth_access_token VARCHAR(100),
    website_id INTEGER,
    passcode VARCHAR(100),
    is_reg_tc BOOLEAN,
    is_user_tc BOOLEAN,
    is_company_owner BOOLEAN,
    sidebar_type VARCHAR(100)
);

Return only the SQL query without explanation.
SELECT *
FROM res_partner
WHERE comment ILIKE '%complaint%' OR comment ILIKE '%negative%';",
"SCHEMA:
TABLE pos_order(id, date_order)
TABLE pos_order_line(id, order_id, product_id, qty)
TABLE product_product(id, product_tmpl_id)
TABLE product_template(id, name)

Prompt: You are an expert SQL developer.

Convert the following natural language request into a single SQL SELECT query.
Use only the schema provided below and do not make assumptions beyond it.

only take table and field from given scheme no other is allowed

Natural Language Request:
Show customers who have an average ticket size above $500.

Database Schema:
CREATE TABLE pos_order (
    id INT PRIMARY KEY,
    user_id INTEGER,
    company_id INTEGER,
    pricelist_id INTEGER,
    partner_id INTEGER,
    sequence_number INTEGER,
    session_id INTEGER,
    config_id INTEGER,
    account_move INTEGER,
    procurement_group_id INTEGER,
    nb_print INTEGER,
    sale_journal INTEGER,
    fiscal_position_id INTEGER,
    name VARCHAR(100),
    last_order_preparation_change VARCHAR(100),
    state VARCHAR(100),
    pos_reference VARCHAR(100),
    ticket_code VARCHAR(100),
    shipping_date DATE,
    note VARCHAR(500),
    amount_tax DECIMAL(18, 4),
    amount_total DECIMAL(18, 4),
    amount_paid DECIMAL(18, 4),
    amount_return DECIMAL(18, 4),
    currency_rate DECIMAL(18, 4),
    tip_amount DECIMAL(18, 4),
    to_invoice BOOLEAN,
    is_tipped BOOLEAN,
    date_order TIMESTAMP,
    employee_id INTEGER,
    cashier VARCHAR(100),
    next_online_payment_amount DECIMAL(18, 4),
    crm_team_id INTEGER,
    debit_note_id INTEGER,
    invoice_id_for_debit INTEGER,
    reset_sequence INTEGER,
    my_invoice_status TEXT,
    invoice_type VARCHAR(100),
    reference_inv_id VARCHAR(500),
    response_msg VARCHAR(500),
    invalid_msg VARCHAR(500),
    is_submit_document BOOLEAN,
    is_debit_note BOOLEAN,
    is_credit_note BOOLEAN,
    is_consolidate BOOLEAN,
    validation_date_time TIMESTAMP,
    credit_check BOOLEAN,
    is_submit_in_pos BOOLEAN,
    is_hide_payment_debit BOOLEAN,
    is_hide_payment_credit BOOLEAN,
    formatted_date_order VARCHAR(100),
    is_hide_reverse_consolidation BOOLEAN,
    main_order_id INTEGER,
    main_order_pos_reference VARCHAR(100)
);

CREATE TABLE pos_order_line (
    id INT PRIMARY KEY,
    company_id INTEGER,
    product_id INTEGER,
    order_id INTEGER,
    refunded_orderline_id INTEGER,
    combo_parent_id INTEGER,
    name VARCHAR(100),
    notice VARCHAR(100),
    full_product_name VARCHAR(100),
    customer_note VARCHAR(100),
    price_unit DECIMAL(18, 4),
    qty DECIMAL(18, 4),
    price_subtotal DECIMAL(18, 4),
    price_subtotal_incl DECIMAL(18, 4),
    total_cost DECIMAL(18, 4),
    discount DECIMAL(18, 4),
    skip_change BOOLEAN,
    is_total_cost_computed BOOLEAN,
    price_extra FLOAT,
    sale_order_origin_id INTEGER,
    sale_order_line_id INTEGER,
    down_payment_details VARCHAR(500),
    discount_amount FLOAT,
    credit_note_discount FLOAT
);

CREATE TABLE product_product (
    id INT PRIMARY KEY,
    product_tmpl_id INTEGER,
    default_code VARCHAR(100),
    barcode VARCHAR(100),
    combination_indices VARCHAR(100),
    volume DECIMAL(18, 4),
    weight DECIMAL(18, 4),
    can_image_variant_1024_be_zoomed BOOLEAN,
    lot_properties_definition TEXT,
    classification_code_id INTEGER
);

CREATE TABLE product_template (
    id INT PRIMARY KEY,
    categ_id INTEGER,
    uom_id INTEGER,
    uom_po_id INTEGER,
    company_id INTEGER,
    detailed_type VARCHAR(100),
    type VARCHAR(100),
    default_code VARCHAR(100),
    priority VARCHAR(100),
    name VARCHAR(100),
    description VARCHAR(500),
    description_purchase TEXT,
    description_sale TEXT,
    product_properties TEXT,
    list_price DECIMAL(18, 4),
    volume DECIMAL(18, 4),
    weight DECIMAL(18, 4),
    sale_ok BOOLEAN,
    purchase_ok BOOLEAN,
    can_image_1024_be_zoomed BOOLEAN,
    has_configurable_attributes BOOLEAN,
    sale_delay INTEGER,
    tracking VARCHAR(100),
    description_picking TEXT,
    description_pickingout TEXT,
    description_pickingin TEXT,
    service_type VARCHAR(100),
    sale_line_warn VARCHAR(100),
    expense_policy VARCHAR(100),
    invoice_policy VARCHAR(100),
    sale_line_warn_msg VARCHAR(500),
    purchase_method VARCHAR(100),
    purchase_line_warn VARCHAR(100),
    purchase_line_warn_msg VARCHAR(500),
    available_in_pos BOOLEAN,
    to_weight BOOLEAN,
    classification_code_id INTEGER,
    unit_measurement_code_id INTEGER,
    service_tracking VARCHAR(100),
    product_classification VARCHAR(100),
    split_method_landed_cost VARCHAR(100),
    landed_cost_ok BOOLEAN,
    is_data_product BOOLEAN,
    alert_min_qty FLOAT
);

CREATE TABLE res_partner (
    id INT PRIMARY KEY,
    company_id INTEGER,
    name VARCHAR(100),
    title INTEGER,
    parent_id INTEGER,
    user_id INTEGER,
    state_id INTEGER,
    country_id INTEGER,
    industry_id INTEGER,
    commercial_partner_id INTEGER,
    complete_name VARCHAR(100),
    ref VARCHAR(100),
    lang VARCHAR(100),
    tz VARCHAR(100),
    vat VARCHAR(100),
    company_registry VARCHAR(100),
    website VARCHAR(100),
    function VARCHAR(100),
    type VARCHAR(100),
    street VARCHAR(100),
    street2 VARCHAR(100),
    zip VARCHAR(100),
    city VARCHAR(100),
    email VARCHAR(100),
    phone VARCHAR(100),
    mobile VARCHAR(100),
    commercial_company_name VARCHAR(100),
    company_name VARCHAR(100),
    date DATE,
    comment VARCHAR(500),
    partner_latitude DECIMAL(18, 4),
    partner_longitude DECIMAL(18, 4),
    employee BOOLEAN,
    is_company BOOLEAN,
    partner_share BOOLEAN,
    message_bounce INTEGER,
    email_normalized VARCHAR(100),
    signup_type VARCHAR(100),
    signup_expiration TIMESTAMP,
    signup_token VARCHAR(100),
    team_id INTEGER,
    phone_sanitized VARCHAR(100),
    supplier_rank INTEGER,
    customer_rank INTEGER,
    invoice_warn VARCHAR(100),
    invoice_warn_msg VARCHAR(500),
    debit_limit DECIMAL(18, 4),
    last_time_entries_checked TIMESTAMP,
    picking_warn VARCHAR(100),
    picking_warn_msg VARCHAR(500),
    ubl_cii_format VARCHAR(100),
    peppol_endpoint VARCHAR(100),
    peppol_eas VARCHAR(100),
    sale_warn VARCHAR(100),
    sale_warn_msg VARCHAR(500),
    payment_responsible_id INTEGER,
    latest_followup_sequence INTEGER,
    payment_next_action_date DATE,
    payment_note VARCHAR(500),
    payment_next_action VARCHAR(500),
    website_id INTEGER,
    is_published BOOLEAN,
    buyer_id INTEGER,
    purchase_warn VARCHAR(100),
    purchase_warn_msg VARCHAR(500),
    city_id INTEGER,
    post_code_id INTEGER,
    nric VARCHAR(100),
    state VARCHAR(100),
    id_type VARCHAR(100),
    malay_and_no_malay VARCHAR(100),
    sst VARCHAR(100),
    msic_code VARCHAR(100),
    ttx VARCHAR(100),
    b_act_des_bn VARCHAR(100),
    b_act_des_en VARCHAR(100),
    street_3 VARCHAR(100),
    error_message VARCHAR(500),
    is_malaysia BOOLEAN,
    is_non_malaysian BOOLEAN,
    is_government BOOLEAN,
    is_portal_data_submit BOOLEAN,
    is_supplier BOOLEAN,
    qr_generated_timestamp TIMESTAMP,
    personal_tin VARCHAR(100),
    company_tin VARCHAR(100),
    business_reg_number VARCHAR(100),
    custom_credit DECIMAL(18, 4),
    is_general_partner BOOLEAN,
    internal_notes VARCHAR(500),
    nric_label VARCHAR(100),
    msic_code_id INTEGER,
    self_bill_for_supplier BOOLEAN
);

CREATE TABLE res_users (
    id INT PRIMARY KEY,
    company_id INTEGER,
    partner_id INTEGER,
    login VARCHAR(100),
    password VARCHAR(100),
    action_id INTEGER,
    signature VARCHAR(500),
    share BOOLEAN,
    totp_secret VARCHAR(100),
    notification_type VARCHAR(100),
    odoobot_state VARCHAR(100),
    odoobot_failed BOOLEAN,
    sale_team_id INTEGER,
    is_apping_user BOOLEAN,
    is_login_with_any_user BOOLEAN,
    user_group_id INTEGER,
    user_types VARCHAR(100),
    is_lhdn_admin BOOLEAN,
    mail_alert BOOLEAN,
    login_access INTEGER,
    locked_until TIMESTAMP,
    oauth_provider_id INTEGER,
    oauth_uid VARCHAR(100),
    oauth_access_token VARCHAR(100),
    website_id INTEGER,
    passcode VARCHAR(100),
    is_reg_tc BOOLEAN,
    is_user_tc BOOLEAN,
    is_company_owner BOOLEAN,
    sidebar_type VARCHAR(100)
);

Return only the SQL query without explanation.
SELECT partner_id, AVG(amount_total) AS avg_ticket_size
FROM pos_order
GROUP BY partner_id
HAVING AVG(amount_total) > 500;",
"SCHEMA:
TABLE pos_order(id, date_order)
TABLE pos_order_line(id, order_id, product_id, qty)
TABLE product_product(id, product_tmpl_id)
TABLE product_template(id, name)

Prompt: You are an expert SQL developer.

Convert the following natural language request into a single SQL SELECT query.
Use only the schema provided below and do not make assumptions beyond it.

only take table and field from given scheme no other is allowed

Natural Language Request:
Rank users by total sales they made this month.

Database Schema:
CREATE TABLE pos_order (
    id INT PRIMARY KEY,
    user_id INTEGER,
    company_id INTEGER,
    pricelist_id INTEGER,
    partner_id INTEGER,
    sequence_number INTEGER,
    session_id INTEGER,
    config_id INTEGER,
    account_move INTEGER,
    procurement_group_id INTEGER,
    nb_print INTEGER,
    sale_journal INTEGER,
    fiscal_position_id INTEGER,
    name VARCHAR(100),
    last_order_preparation_change VARCHAR(100),
    state VARCHAR(100),
    pos_reference VARCHAR(100),
    ticket_code VARCHAR(100),
    shipping_date DATE,
    note VARCHAR(500),
    amount_tax DECIMAL(18, 4),
    amount_total DECIMAL(18, 4),
    amount_paid DECIMAL(18, 4),
    amount_return DECIMAL(18, 4),
    currency_rate DECIMAL(18, 4),
    tip_amount DECIMAL(18, 4),
    to_invoice BOOLEAN,
    is_tipped BOOLEAN,
    date_order TIMESTAMP,
    employee_id INTEGER,
    cashier VARCHAR(100),
    next_online_payment_amount DECIMAL(18, 4),
    crm_team_id INTEGER,
    debit_note_id INTEGER,
    invoice_id_for_debit INTEGER,
    reset_sequence INTEGER,
    my_invoice_status TEXT,
    invoice_type VARCHAR(100),
    reference_inv_id VARCHAR(500),
    response_msg VARCHAR(500),
    invalid_msg VARCHAR(500),
    is_submit_document BOOLEAN,
    is_debit_note BOOLEAN,
    is_credit_note BOOLEAN,
    is_consolidate BOOLEAN,
    validation_date_time TIMESTAMP,
    credit_check BOOLEAN,
    is_submit_in_pos BOOLEAN,
    is_hide_payment_debit BOOLEAN,
    is_hide_payment_credit BOOLEAN,
    formatted_date_order VARCHAR(100),
    is_hide_reverse_consolidation BOOLEAN,
    main_order_id INTEGER,
    main_order_pos_reference VARCHAR(100)
);

CREATE TABLE pos_order_line (
    id INT PRIMARY KEY,
    company_id INTEGER,
    product_id INTEGER,
    order_id INTEGER,
    refunded_orderline_id INTEGER,
    combo_parent_id INTEGER,
    name VARCHAR(100),
    notice VARCHAR(100),
    full_product_name VARCHAR(100),
    customer_note VARCHAR(100),
    price_unit DECIMAL(18, 4),
    qty DECIMAL(18, 4),
    price_subtotal DECIMAL(18, 4),
    price_subtotal_incl DECIMAL(18, 4),
    total_cost DECIMAL(18, 4),
    discount DECIMAL(18, 4),
    skip_change BOOLEAN,
    is_total_cost_computed BOOLEAN,
    price_extra FLOAT,
    sale_order_origin_id INTEGER,
    sale_order_line_id INTEGER,
    down_payment_details VARCHAR(500),
    discount_amount FLOAT,
    credit_note_discount FLOAT
);

CREATE TABLE product_product (
    id INT PRIMARY KEY,
    product_tmpl_id INTEGER,
    default_code VARCHAR(100),
    barcode VARCHAR(100),
    combination_indices VARCHAR(100),
    volume DECIMAL(18, 4),
    weight DECIMAL(18, 4),
    can_image_variant_1024_be_zoomed BOOLEAN,
    lot_properties_definition TEXT,
    classification_code_id INTEGER
);

CREATE TABLE product_template (
    id INT PRIMARY KEY,
    categ_id INTEGER,
    uom_id INTEGER,
    uom_po_id INTEGER,
    company_id INTEGER,
    detailed_type VARCHAR(100),
    type VARCHAR(100),
    default_code VARCHAR(100),
    priority VARCHAR(100),
    name VARCHAR(100),
    description VARCHAR(500),
    description_purchase TEXT,
    description_sale TEXT,
    product_properties TEXT,
    list_price DECIMAL(18, 4),
    volume DECIMAL(18, 4),
    weight DECIMAL(18, 4),
    sale_ok BOOLEAN,
    purchase_ok BOOLEAN,
    can_image_1024_be_zoomed BOOLEAN,
    has_configurable_attributes BOOLEAN,
    sale_delay INTEGER,
    tracking VARCHAR(100),
    description_picking TEXT,
    description_pickingout TEXT,
    description_pickingin TEXT,
    service_type VARCHAR(100),
    sale_line_warn VARCHAR(100),
    expense_policy VARCHAR(100),
    invoice_policy VARCHAR(100),
    sale_line_warn_msg VARCHAR(500),
    purchase_method VARCHAR(100),
    purchase_line_warn VARCHAR(100),
    purchase_line_warn_msg VARCHAR(500),
    available_in_pos BOOLEAN,
    to_weight BOOLEAN,
    classification_code_id INTEGER,
    unit_measurement_code_id INTEGER,
    service_tracking VARCHAR(100),
    product_classification VARCHAR(100),
    split_method_landed_cost VARCHAR(100),
    landed_cost_ok BOOLEAN,
    is_data_product BOOLEAN,
    alert_min_qty FLOAT
);

CREATE TABLE res_partner (
    id INT PRIMARY KEY,
    company_id INTEGER,
    name VARCHAR(100),
    title INTEGER,
    parent_id INTEGER,
    user_id INTEGER,
    state_id INTEGER,
    country_id INTEGER,
    industry_id INTEGER,
    commercial_partner_id INTEGER,
    complete_name VARCHAR(100),
    ref VARCHAR(100),
    lang VARCHAR(100),
    tz VARCHAR(100),
    vat VARCHAR(100),
    company_registry VARCHAR(100),
    website VARCHAR(100),
    function VARCHAR(100),
    type VARCHAR(100),
    street VARCHAR(100),
    street2 VARCHAR(100),
    zip VARCHAR(100),
    city VARCHAR(100),
    email VARCHAR(100),
    phone VARCHAR(100),
    mobile VARCHAR(100),
    commercial_company_name VARCHAR(100),
    company_name VARCHAR(100),
    date DATE,
    comment VARCHAR(500),
    partner_latitude DECIMAL(18, 4),
    partner_longitude DECIMAL(18, 4),
    employee BOOLEAN,
    is_company BOOLEAN,
    partner_share BOOLEAN,
    message_bounce INTEGER,
    email_normalized VARCHAR(100),
    signup_type VARCHAR(100),
    signup_expiration TIMESTAMP,
    signup_token VARCHAR(100),
    team_id INTEGER,
    phone_sanitized VARCHAR(100),
    supplier_rank INTEGER,
    customer_rank INTEGER,
    invoice_warn VARCHAR(100),
    invoice_warn_msg VARCHAR(500),
    debit_limit DECIMAL(18, 4),
    last_time_entries_checked TIMESTAMP,
    picking_warn VARCHAR(100),
    picking_warn_msg VARCHAR(500),
    ubl_cii_format VARCHAR(100),
    peppol_endpoint VARCHAR(100),
    peppol_eas VARCHAR(100),
    sale_warn VARCHAR(100),
    sale_warn_msg VARCHAR(500),
    payment_responsible_id INTEGER,
    latest_followup_sequence INTEGER,
    payment_next_action_date DATE,
    payment_note VARCHAR(500),
    payment_next_action VARCHAR(500),
    website_id INTEGER,
    is_published BOOLEAN,
    buyer_id INTEGER,
    purchase_warn VARCHAR(100),
    purchase_warn_msg VARCHAR(500),
    city_id INTEGER,
    post_code_id INTEGER,
    nric VARCHAR(100),
    state VARCHAR(100),
    id_type VARCHAR(100),
    malay_and_no_malay VARCHAR(100),
    sst VARCHAR(100),
    msic_code VARCHAR(100),
    ttx VARCHAR(100),
    b_act_des_bn VARCHAR(100),
    b_act_des_en VARCHAR(100),
    street_3 VARCHAR(100),
    error_message VARCHAR(500),
    is_malaysia BOOLEAN,
    is_non_malaysian BOOLEAN,
    is_government BOOLEAN,
    is_portal_data_submit BOOLEAN,
    is_supplier BOOLEAN,
    qr_generated_timestamp TIMESTAMP,
    personal_tin VARCHAR(100),
    company_tin VARCHAR(100),
    business_reg_number VARCHAR(100),
    custom_credit DECIMAL(18, 4),
    is_general_partner BOOLEAN,
    internal_notes VARCHAR(500),
    nric_label VARCHAR(100),
    msic_code_id INTEGER,
    self_bill_for_supplier BOOLEAN
);

CREATE TABLE res_users (
    id INT PRIMARY KEY,
    company_id INTEGER,
    partner_id INTEGER,
    login VARCHAR(100),
    password VARCHAR(100),
    action_id INTEGER,
    signature VARCHAR(500),
    share BOOLEAN,
    totp_secret VARCHAR(100),
    notification_type VARCHAR(100),
    odoobot_state VARCHAR(100),
    odoobot_failed BOOLEAN,
    sale_team_id INTEGER,
    is_apping_user BOOLEAN,
    is_login_with_any_user BOOLEAN,
    user_group_id INTEGER,
    user_types VARCHAR(100),
    is_lhdn_admin BOOLEAN,
    mail_alert BOOLEAN,
    login_access INTEGER,
    locked_until TIMESTAMP,
    oauth_provider_id INTEGER,
    oauth_uid VARCHAR(100),
    oauth_access_token VARCHAR(100),
    website_id INTEGER,
    passcode VARCHAR(100),
    is_reg_tc BOOLEAN,
    is_user_tc BOOLEAN,
    is_company_owner BOOLEAN,
    sidebar_type VARCHAR(100)
);

Return only the SQL query without explanation.
SELECT user_id, SUM(amount_total) AS total_sales
FROM pos_order
WHERE date_order >= DATE_TRUNC('month', CURRENT_DATE)
GROUP BY user_id
ORDER BY total_sales DESC;",
"SCHEMA:
TABLE pos_order(id, date_order)
TABLE pos_order_line(id, order_id, product_id, qty)
TABLE product_product(id, product_tmpl_id)
TABLE product_template(id, name)

Prompt: You are an expert SQL developer.

Convert the following natural language request into a single SQL SELECT query.
Use only the schema provided below and do not make assumptions beyond it.

only take table and field from given scheme no other is allowed

Natural Language Request:
Which users haven’t logged in for over a week?

Database Schema:
CREATE TABLE pos_order (
    id INT PRIMARY KEY,
    user_id INTEGER,
    company_id INTEGER,
    pricelist_id INTEGER,
    partner_id INTEGER,
    sequence_number INTEGER,
    session_id INTEGER,
    config_id INTEGER,
    account_move INTEGER,
    procurement_group_id INTEGER,
    nb_print INTEGER,
    sale_journal INTEGER,
    fiscal_position_id INTEGER,
    name VARCHAR(100),
    last_order_preparation_change VARCHAR(100),
    state VARCHAR(100),
    pos_reference VARCHAR(100),
    ticket_code VARCHAR(100),
    shipping_date DATE,
    note VARCHAR(500),
    amount_tax DECIMAL(18, 4),
    amount_total DECIMAL(18, 4),
    amount_paid DECIMAL(18, 4),
    amount_return DECIMAL(18, 4),
    currency_rate DECIMAL(18, 4),
    tip_amount DECIMAL(18, 4),
    to_invoice BOOLEAN,
    is_tipped BOOLEAN,
    date_order TIMESTAMP,
    employee_id INTEGER,
    cashier VARCHAR(100),
    next_online_payment_amount DECIMAL(18, 4),
    crm_team_id INTEGER,
    debit_note_id INTEGER,
    invoice_id_for_debit INTEGER,
    reset_sequence INTEGER,
    my_invoice_status TEXT,
    invoice_type VARCHAR(100),
    reference_inv_id VARCHAR(500),
    response_msg VARCHAR(500),
    invalid_msg VARCHAR(500),
    is_submit_document BOOLEAN,
    is_debit_note BOOLEAN,
    is_credit_note BOOLEAN,
    is_consolidate BOOLEAN,
    validation_date_time TIMESTAMP,
    credit_check BOOLEAN,
    is_submit_in_pos BOOLEAN,
    is_hide_payment_debit BOOLEAN,
    is_hide_payment_credit BOOLEAN,
    formatted_date_order VARCHAR(100),
    is_hide_reverse_consolidation BOOLEAN,
    main_order_id INTEGER,
    main_order_pos_reference VARCHAR(100)
);

CREATE TABLE pos_order_line (
    id INT PRIMARY KEY,
    company_id INTEGER,
    product_id INTEGER,
    order_id INTEGER,
    refunded_orderline_id INTEGER,
    combo_parent_id INTEGER,
    name VARCHAR(100),
    notice VARCHAR(100),
    full_product_name VARCHAR(100),
    customer_note VARCHAR(100),
    price_unit DECIMAL(18, 4),
    qty DECIMAL(18, 4),
    price_subtotal DECIMAL(18, 4),
    price_subtotal_incl DECIMAL(18, 4),
    total_cost DECIMAL(18, 4),
    discount DECIMAL(18, 4),
    skip_change BOOLEAN,
    is_total_cost_computed BOOLEAN,
    price_extra FLOAT,
    sale_order_origin_id INTEGER,
    sale_order_line_id INTEGER,
    down_payment_details VARCHAR(500),
    discount_amount FLOAT,
    credit_note_discount FLOAT
);

CREATE TABLE product_product (
    id INT PRIMARY KEY,
    product_tmpl_id INTEGER,
    default_code VARCHAR(100),
    barcode VARCHAR(100),
    combination_indices VARCHAR(100),
    volume DECIMAL(18, 4),
    weight DECIMAL(18, 4),
    can_image_variant_1024_be_zoomed BOOLEAN,
    lot_properties_definition TEXT,
    classification_code_id INTEGER
);

CREATE TABLE product_template (
    id INT PRIMARY KEY,
    categ_id INTEGER,
    uom_id INTEGER,
    uom_po_id INTEGER,
    company_id INTEGER,
    detailed_type VARCHAR(100),
    type VARCHAR(100),
    default_code VARCHAR(100),
    priority VARCHAR(100),
    name VARCHAR(100),
    description VARCHAR(500),
    description_purchase TEXT,
    description_sale TEXT,
    product_properties TEXT,
    list_price DECIMAL(18, 4),
    volume DECIMAL(18, 4),
    weight DECIMAL(18, 4),
    sale_ok BOOLEAN,
    purchase_ok BOOLEAN,
    can_image_1024_be_zoomed BOOLEAN,
    has_configurable_attributes BOOLEAN,
    sale_delay INTEGER,
    tracking VARCHAR(100),
    description_picking TEXT,
    description_pickingout TEXT,
    description_pickingin TEXT,
    service_type VARCHAR(100),
    sale_line_warn VARCHAR(100),
    expense_policy VARCHAR(100),
    invoice_policy VARCHAR(100),
    sale_line_warn_msg VARCHAR(500),
    purchase_method VARCHAR(100),
    purchase_line_warn VARCHAR(100),
    purchase_line_warn_msg VARCHAR(500),
    available_in_pos BOOLEAN,
    to_weight BOOLEAN,
    classification_code_id INTEGER,
    unit_measurement_code_id INTEGER,
    service_tracking VARCHAR(100),
    product_classification VARCHAR(100),
    split_method_landed_cost VARCHAR(100),
    landed_cost_ok BOOLEAN,
    is_data_product BOOLEAN,
    alert_min_qty FLOAT
);

CREATE TABLE res_partner (
    id INT PRIMARY KEY,
    company_id INTEGER,
    name VARCHAR(100),
    title INTEGER,
    parent_id INTEGER,
    user_id INTEGER,
    state_id INTEGER,
    country_id INTEGER,
    industry_id INTEGER,
    commercial_partner_id INTEGER,
    complete_name VARCHAR(100),
    ref VARCHAR(100),
    lang VARCHAR(100),
    tz VARCHAR(100),
    vat VARCHAR(100),
    company_registry VARCHAR(100),
    website VARCHAR(100),
    function VARCHAR(100),
    type VARCHAR(100),
    street VARCHAR(100),
    street2 VARCHAR(100),
    zip VARCHAR(100),
    city VARCHAR(100),
    email VARCHAR(100),
    phone VARCHAR(100),
    mobile VARCHAR(100),
    commercial_company_name VARCHAR(100),
    company_name VARCHAR(100),
    date DATE,
    comment VARCHAR(500),
    partner_latitude DECIMAL(18, 4),
    partner_longitude DECIMAL(18, 4),
    employee BOOLEAN,
    is_company BOOLEAN,
    partner_share BOOLEAN,
    message_bounce INTEGER,
    email_normalized VARCHAR(100),
    signup_type VARCHAR(100),
    signup_expiration TIMESTAMP,
    signup_token VARCHAR(100),
    team_id INTEGER,
    phone_sanitized VARCHAR(100),
    supplier_rank INTEGER,
    customer_rank INTEGER,
    invoice_warn VARCHAR(100),
    invoice_warn_msg VARCHAR(500),
    debit_limit DECIMAL(18, 4),
    last_time_entries_checked TIMESTAMP,
    picking_warn VARCHAR(100),
    picking_warn_msg VARCHAR(500),
    ubl_cii_format VARCHAR(100),
    peppol_endpoint VARCHAR(100),
    peppol_eas VARCHAR(100),
    sale_warn VARCHAR(100),
    sale_warn_msg VARCHAR(500),
    payment_responsible_id INTEGER,
    latest_followup_sequence INTEGER,
    payment_next_action_date DATE,
    payment_note VARCHAR(500),
    payment_next_action VARCHAR(500),
    website_id INTEGER,
    is_published BOOLEAN,
    buyer_id INTEGER,
    purchase_warn VARCHAR(100),
    purchase_warn_msg VARCHAR(500),
    city_id INTEGER,
    post_code_id INTEGER,
    nric VARCHAR(100),
    state VARCHAR(100),
    id_type VARCHAR(100),
    malay_and_no_malay VARCHAR(100),
    sst VARCHAR(100),
    msic_code VARCHAR(100),
    ttx VARCHAR(100),
    b_act_des_bn VARCHAR(100),
    b_act_des_en VARCHAR(100),
    street_3 VARCHAR(100),
    error_message VARCHAR(500),
    is_malaysia BOOLEAN,
    is_non_malaysian BOOLEAN,
    is_government BOOLEAN,
    is_portal_data_submit BOOLEAN,
    is_supplier BOOLEAN,
    qr_generated_timestamp TIMESTAMP,
    personal_tin VARCHAR(100),
    company_tin VARCHAR(100),
    business_reg_number VARCHAR(100),
    custom_credit DECIMAL(18, 4),
    is_general_partner BOOLEAN,
    internal_notes VARCHAR(500),
    nric_label VARCHAR(100),
    msic_code_id INTEGER,
    self_bill_for_supplier BOOLEAN
);

CREATE TABLE res_users (
    id INT PRIMARY KEY,
    company_id INTEGER,
    partner_id INTEGER,
    login VARCHAR(100),
    password VARCHAR(100),
    action_id INTEGER,
    signature VARCHAR(500),
    share BOOLEAN,
    totp_secret VARCHAR(100),
    notification_type VARCHAR(100),
    odoobot_state VARCHAR(100),
    odoobot_failed BOOLEAN,
    sale_team_id INTEGER,
    is_apping_user BOOLEAN,
    is_login_with_any_user BOOLEAN,
    user_group_id INTEGER,
    user_types VARCHAR(100),
    is_lhdn_admin BOOLEAN,
    mail_alert BOOLEAN,
    login_access INTEGER,
    locked_until TIMESTAMP,
    oauth_provider_id INTEGER,
    oauth_uid VARCHAR(100),
    oauth_access_token VARCHAR(100),
    website_id INTEGER,
    passcode VARCHAR(100),
    is_reg_tc BOOLEAN,
    is_user_tc BOOLEAN,
    is_company_owner BOOLEAN,
    sidebar_type VARCHAR(100)
);

Return only the SQL query without explanation.
SELECT *
FROM res_users
WHERE last_login < CURRENT_DATE - INTERVAL '7 days';",
"SCHEMA:
TABLE pos_order(id, date_order)
TABLE pos_order_line(id, order_id, product_id, qty)
TABLE product_product(id, product_tmpl_id)
TABLE product_template(id, name)

Prompt: You are an expert SQL developer.

Convert the following natural language request into a single SQL SELECT query.
Use only the schema provided below and do not make assumptions beyond it.

only take table and field from given scheme no other is allowed

Natural Language Request:
Show which user created the most new customer profiles.

Database Schema:
CREATE TABLE pos_order (
    id INT PRIMARY KEY,
    user_id INTEGER,
    company_id INTEGER,
    pricelist_id INTEGER,
    partner_id INTEGER,
    sequence_number INTEGER,
    session_id INTEGER,
    config_id INTEGER,
    account_move INTEGER,
    procurement_group_id INTEGER,
    nb_print INTEGER,
    sale_journal INTEGER,
    fiscal_position_id INTEGER,
    name VARCHAR(100),
    last_order_preparation_change VARCHAR(100),
    state VARCHAR(100),
    pos_reference VARCHAR(100),
    ticket_code VARCHAR(100),
    shipping_date DATE,
    note VARCHAR(500),
    amount_tax DECIMAL(18, 4),
    amount_total DECIMAL(18, 4),
    amount_paid DECIMAL(18, 4),
    amount_return DECIMAL(18, 4),
    currency_rate DECIMAL(18, 4),
    tip_amount DECIMAL(18, 4),
    to_invoice BOOLEAN,
    is_tipped BOOLEAN,
    date_order TIMESTAMP,
    employee_id INTEGER,
    cashier VARCHAR(100),
    next_online_payment_amount DECIMAL(18, 4),
    crm_team_id INTEGER,
    debit_note_id INTEGER,
    invoice_id_for_debit INTEGER,
    reset_sequence INTEGER,
    my_invoice_status TEXT,
    invoice_type VARCHAR(100),
    reference_inv_id VARCHAR(500),
    response_msg VARCHAR(500),
    invalid_msg VARCHAR(500),
    is_submit_document BOOLEAN,
    is_debit_note BOOLEAN,
    is_credit_note BOOLEAN,
    is_consolidate BOOLEAN,
    validation_date_time TIMESTAMP,
    credit_check BOOLEAN,
    is_submit_in_pos BOOLEAN,
    is_hide_payment_debit BOOLEAN,
    is_hide_payment_credit BOOLEAN,
    formatted_date_order VARCHAR(100),
    is_hide_reverse_consolidation BOOLEAN,
    main_order_id INTEGER,
    main_order_pos_reference VARCHAR(100)
);

CREATE TABLE pos_order_line (
    id INT PRIMARY KEY,
    company_id INTEGER,
    product_id INTEGER,
    order_id INTEGER,
    refunded_orderline_id INTEGER,
    combo_parent_id INTEGER,
    name VARCHAR(100),
    notice VARCHAR(100),
    full_product_name VARCHAR(100),
    customer_note VARCHAR(100),
    price_unit DECIMAL(18, 4),
    qty DECIMAL(18, 4),
    price_subtotal DECIMAL(18, 4),
    price_subtotal_incl DECIMAL(18, 4),
    total_cost DECIMAL(18, 4),
    discount DECIMAL(18, 4),
    skip_change BOOLEAN,
    is_total_cost_computed BOOLEAN,
    price_extra FLOAT,
    sale_order_origin_id INTEGER,
    sale_order_line_id INTEGER,
    down_payment_details VARCHAR(500),
    discount_amount FLOAT,
    credit_note_discount FLOAT
);

CREATE TABLE product_product (
    id INT PRIMARY KEY,
    product_tmpl_id INTEGER,
    default_code VARCHAR(100),
    barcode VARCHAR(100),
    combination_indices VARCHAR(100),
    volume DECIMAL(18, 4),
    weight DECIMAL(18, 4),
    can_image_variant_1024_be_zoomed BOOLEAN,
    lot_properties_definition TEXT,
    classification_code_id INTEGER
);

CREATE TABLE product_template (
    id INT PRIMARY KEY,
    categ_id INTEGER,
    uom_id INTEGER,
    uom_po_id INTEGER,
    company_id INTEGER,
    detailed_type VARCHAR(100),
    type VARCHAR(100),
    default_code VARCHAR(100),
    priority VARCHAR(100),
    name VARCHAR(100),
    description VARCHAR(500),
    description_purchase TEXT,
    description_sale TEXT,
    product_properties TEXT,
    list_price DECIMAL(18, 4),
    volume DECIMAL(18, 4),
    weight DECIMAL(18, 4),
    sale_ok BOOLEAN,
    purchase_ok BOOLEAN,
    can_image_1024_be_zoomed BOOLEAN,
    has_configurable_attributes BOOLEAN,
    sale_delay INTEGER,
    tracking VARCHAR(100),
    description_picking TEXT,
    description_pickingout TEXT,
    description_pickingin TEXT,
    service_type VARCHAR(100),
    sale_line_warn VARCHAR(100),
    expense_policy VARCHAR(100),
    invoice_policy VARCHAR(100),
    sale_line_warn_msg VARCHAR(500),
    purchase_method VARCHAR(100),
    purchase_line_warn VARCHAR(100),
    purchase_line_warn_msg VARCHAR(500),
    available_in_pos BOOLEAN,
    to_weight BOOLEAN,
    classification_code_id INTEGER,
    unit_measurement_code_id INTEGER,
    service_tracking VARCHAR(100),
    product_classification VARCHAR(100),
    split_method_landed_cost VARCHAR(100),
    landed_cost_ok BOOLEAN,
    is_data_product BOOLEAN,
    alert_min_qty FLOAT
);

CREATE TABLE res_partner (
    id INT PRIMARY KEY,
    company_id INTEGER,
    name VARCHAR(100),
    title INTEGER,
    parent_id INTEGER,
    user_id INTEGER,
    state_id INTEGER,
    country_id INTEGER,
    industry_id INTEGER,
    commercial_partner_id INTEGER,
    complete_name VARCHAR(100),
    ref VARCHAR(100),
    lang VARCHAR(100),
    tz VARCHAR(100),
    vat VARCHAR(100),
    company_registry VARCHAR(100),
    website VARCHAR(100),
    function VARCHAR(100),
    type VARCHAR(100),
    street VARCHAR(100),
    street2 VARCHAR(100),
    zip VARCHAR(100),
    city VARCHAR(100),
    email VARCHAR(100),
    phone VARCHAR(100),
    mobile VARCHAR(100),
    commercial_company_name VARCHAR(100),
    company_name VARCHAR(100),
    date DATE,
    comment VARCHAR(500),
    partner_latitude DECIMAL(18, 4),
    partner_longitude DECIMAL(18, 4),
    employee BOOLEAN,
    is_company BOOLEAN,
    partner_share BOOLEAN,
    message_bounce INTEGER,
    email_normalized VARCHAR(100),
    signup_type VARCHAR(100),
    signup_expiration TIMESTAMP,
    signup_token VARCHAR(100),
    team_id INTEGER,
    phone_sanitized VARCHAR(100),
    supplier_rank INTEGER,
    customer_rank INTEGER,
    invoice_warn VARCHAR(100),
    invoice_warn_msg VARCHAR(500),
    debit_limit DECIMAL(18, 4),
    last_time_entries_checked TIMESTAMP,
    picking_warn VARCHAR(100),
    picking_warn_msg VARCHAR(500),
    ubl_cii_format VARCHAR(100),
    peppol_endpoint VARCHAR(100),
    peppol_eas VARCHAR(100),
    sale_warn VARCHAR(100),
    sale_warn_msg VARCHAR(500),
    payment_responsible_id INTEGER,
    latest_followup_sequence INTEGER,
    payment_next_action_date DATE,
    payment_note VARCHAR(500),
    payment_next_action VARCHAR(500),
    website_id INTEGER,
    is_published BOOLEAN,
    buyer_id INTEGER,
    purchase_warn VARCHAR(100),
    purchase_warn_msg VARCHAR(500),
    city_id INTEGER,
    post_code_id INTEGER,
    nric VARCHAR(100),
    state VARCHAR(100),
    id_type VARCHAR(100),
    malay_and_no_malay VARCHAR(100),
    sst VARCHAR(100),
    msic_code VARCHAR(100),
    ttx VARCHAR(100),
    b_act_des_bn VARCHAR(100),
    b_act_des_en VARCHAR(100),
    street_3 VARCHAR(100),
    error_message VARCHAR(500),
    is_malaysia BOOLEAN,
    is_non_malaysian BOOLEAN,
    is_government BOOLEAN,
    is_portal_data_submit BOOLEAN,
    is_supplier BOOLEAN,
    qr_generated_timestamp TIMESTAMP,
    personal_tin VARCHAR(100),
    company_tin VARCHAR(100),
    business_reg_number VARCHAR(100),
    custom_credit DECIMAL(18, 4),
    is_general_partner BOOLEAN,
    internal_notes VARCHAR(500),
    nric_label VARCHAR(100),
    msic_code_id INTEGER,
    self_bill_for_supplier BOOLEAN
);

CREATE TABLE res_users (
    id INT PRIMARY KEY,
    company_id INTEGER,
    partner_id INTEGER,
    login VARCHAR(100),
    password VARCHAR(100),
    action_id INTEGER,
    signature VARCHAR(500),
    share BOOLEAN,
    totp_secret VARCHAR(100),
    notification_type VARCHAR(100),
    odoobot_state VARCHAR(100),
    odoobot_failed BOOLEAN,
    sale_team_id INTEGER,
    is_apping_user BOOLEAN,
    is_login_with_any_user BOOLEAN,
    user_group_id INTEGER,
    user_types VARCHAR(100),
    is_lhdn_admin BOOLEAN,
    mail_alert BOOLEAN,
    login_access INTEGER,
    locked_until TIMESTAMP,
    oauth_provider_id INTEGER,
    oauth_uid VARCHAR(100),
    oauth_access_token VARCHAR(100),
    website_id INTEGER,
    passcode VARCHAR(100),
    is_reg_tc BOOLEAN,
    is_user_tc BOOLEAN,
    is_company_owner BOOLEAN,
    sidebar_type VARCHAR(100)
);

Return only the SQL query without explanation.
SELECT user_id, COUNT(*) AS new_customers
FROM res_partner
WHERE date >= DATE_TRUNC('month', CURRENT_DATE)
GROUP BY user_id
ORDER BY new_customers DESC
LIMIT 1;",
"SCHEMA:
TABLE pos_order(id, date_order)
TABLE pos_order_line(id, order_id, product_id, qty)
TABLE product_product(id, product_tmpl_id)
TABLE product_template(id, name)

Prompt: You are an expert SQL developer.

Convert the following natural language request into a single SQL SELECT query.
Use only the schema provided below and do not make assumptions beyond it.

only take table and field from given scheme no other is allowed

Natural Language Request:
Find users with the highest average sale value per order.

Database Schema:
CREATE TABLE pos_order (
    id INT PRIMARY KEY,
    user_id INTEGER,
    company_id INTEGER,
    pricelist_id INTEGER,
    partner_id INTEGER,
    sequence_number INTEGER,
    session_id INTEGER,
    config_id INTEGER,
    account_move INTEGER,
    procurement_group_id INTEGER,
    nb_print INTEGER,
    sale_journal INTEGER,
    fiscal_position_id INTEGER,
    name VARCHAR(100),
    last_order_preparation_change VARCHAR(100),
    state VARCHAR(100),
    pos_reference VARCHAR(100),
    ticket_code VARCHAR(100),
    shipping_date DATE,
    note VARCHAR(500),
    amount_tax DECIMAL(18, 4),
    amount_total DECIMAL(18, 4),
    amount_paid DECIMAL(18, 4),
    amount_return DECIMAL(18, 4),
    currency_rate DECIMAL(18, 4),
    tip_amount DECIMAL(18, 4),
    to_invoice BOOLEAN,
    is_tipped BOOLEAN,
    date_order TIMESTAMP,
    employee_id INTEGER,
    cashier VARCHAR(100),
    next_online_payment_amount DECIMAL(18, 4),
    crm_team_id INTEGER,
    debit_note_id INTEGER,
    invoice_id_for_debit INTEGER,
    reset_sequence INTEGER,
    my_invoice_status TEXT,
    invoice_type VARCHAR(100),
    reference_inv_id VARCHAR(500),
    response_msg VARCHAR(500),
    invalid_msg VARCHAR(500),
    is_submit_document BOOLEAN,
    is_debit_note BOOLEAN,
    is_credit_note BOOLEAN,
    is_consolidate BOOLEAN,
    validation_date_time TIMESTAMP,
    credit_check BOOLEAN,
    is_submit_in_pos BOOLEAN,
    is_hide_payment_debit BOOLEAN,
    is_hide_payment_credit BOOLEAN,
    formatted_date_order VARCHAR(100),
    is_hide_reverse_consolidation BOOLEAN,
    main_order_id INTEGER,
    main_order_pos_reference VARCHAR(100)
);

CREATE TABLE pos_order_line (
    id INT PRIMARY KEY,
    company_id INTEGER,
    product_id INTEGER,
    order_id INTEGER,
    refunded_orderline_id INTEGER,
    combo_parent_id INTEGER,
    name VARCHAR(100),
    notice VARCHAR(100),
    full_product_name VARCHAR(100),
    customer_note VARCHAR(100),
    price_unit DECIMAL(18, 4),
    qty DECIMAL(18, 4),
    price_subtotal DECIMAL(18, 4),
    price_subtotal_incl DECIMAL(18, 4),
    total_cost DECIMAL(18, 4),
    discount DECIMAL(18, 4),
    skip_change BOOLEAN,
    is_total_cost_computed BOOLEAN,
    price_extra FLOAT,
    sale_order_origin_id INTEGER,
    sale_order_line_id INTEGER,
    down_payment_details VARCHAR(500),
    discount_amount FLOAT,
    credit_note_discount FLOAT
);

CREATE TABLE product_product (
    id INT PRIMARY KEY,
    product_tmpl_id INTEGER,
    default_code VARCHAR(100),
    barcode VARCHAR(100),
    combination_indices VARCHAR(100),
    volume DECIMAL(18, 4),
    weight DECIMAL(18, 4),
    can_image_variant_1024_be_zoomed BOOLEAN,
    lot_properties_definition TEXT,
    classification_code_id INTEGER
);

CREATE TABLE product_template (
    id INT PRIMARY KEY,
    categ_id INTEGER,
    uom_id INTEGER,
    uom_po_id INTEGER,
    company_id INTEGER,
    detailed_type VARCHAR(100),
    type VARCHAR(100),
    default_code VARCHAR(100),
    priority VARCHAR(100),
    name VARCHAR(100),
    description VARCHAR(500),
    description_purchase TEXT,
    description_sale TEXT,
    product_properties TEXT,
    list_price DECIMAL(18, 4),
    volume DECIMAL(18, 4),
    weight DECIMAL(18, 4),
    sale_ok BOOLEAN,
    purchase_ok BOOLEAN,
    can_image_1024_be_zoomed BOOLEAN,
    has_configurable_attributes BOOLEAN,
    sale_delay INTEGER,
    tracking VARCHAR(100),
    description_picking TEXT,
    description_pickingout TEXT,
    description_pickingin TEXT,
    service_type VARCHAR(100),
    sale_line_warn VARCHAR(100),
    expense_policy VARCHAR(100),
    invoice_policy VARCHAR(100),
    sale_line_warn_msg VARCHAR(500),
    purchase_method VARCHAR(100),
    purchase_line_warn VARCHAR(100),
    purchase_line_warn_msg VARCHAR(500),
    available_in_pos BOOLEAN,
    to_weight BOOLEAN,
    classification_code_id INTEGER,
    unit_measurement_code_id INTEGER,
    service_tracking VARCHAR(100),
    product_classification VARCHAR(100),
    split_method_landed_cost VARCHAR(100),
    landed_cost_ok BOOLEAN,
    is_data_product BOOLEAN,
    alert_min_qty FLOAT
);

CREATE TABLE res_partner (
    id INT PRIMARY KEY,
    company_id INTEGER,
    name VARCHAR(100),
    title INTEGER,
    parent_id INTEGER,
    user_id INTEGER,
    state_id INTEGER,
    country_id INTEGER,
    industry_id INTEGER,
    commercial_partner_id INTEGER,
    complete_name VARCHAR(100),
    ref VARCHAR(100),
    lang VARCHAR(100),
    tz VARCHAR(100),
    vat VARCHAR(100),
    company_registry VARCHAR(100),
    website VARCHAR(100),
    function VARCHAR(100),
    type VARCHAR(100),
    street VARCHAR(100),
    street2 VARCHAR(100),
    zip VARCHAR(100),
    city VARCHAR(100),
    email VARCHAR(100),
    phone VARCHAR(100),
    mobile VARCHAR(100),
    commercial_company_name VARCHAR(100),
    company_name VARCHAR(100),
    date DATE,
    comment VARCHAR(500),
    partner_latitude DECIMAL(18, 4),
    partner_longitude DECIMAL(18, 4),
    employee BOOLEAN,
    is_company BOOLEAN,
    partner_share BOOLEAN,
    message_bounce INTEGER,
    email_normalized VARCHAR(100),
    signup_type VARCHAR(100),
    signup_expiration TIMESTAMP,
    signup_token VARCHAR(100),
    team_id INTEGER,
    phone_sanitized VARCHAR(100),
    supplier_rank INTEGER,
    customer_rank INTEGER,
    invoice_warn VARCHAR(100),
    invoice_warn_msg VARCHAR(500),
    debit_limit DECIMAL(18, 4),
    last_time_entries_checked TIMESTAMP,
    picking_warn VARCHAR(100),
    picking_warn_msg VARCHAR(500),
    ubl_cii_format VARCHAR(100),
    peppol_endpoint VARCHAR(100),
    peppol_eas VARCHAR(100),
    sale_warn VARCHAR(100),
    sale_warn_msg VARCHAR(500),
    payment_responsible_id INTEGER,
    latest_followup_sequence INTEGER,
    payment_next_action_date DATE,
    payment_note VARCHAR(500),
    payment_next_action VARCHAR(500),
    website_id INTEGER,
    is_published BOOLEAN,
    buyer_id INTEGER,
    purchase_warn VARCHAR(100),
    purchase_warn_msg VARCHAR(500),
    city_id INTEGER,
    post_code_id INTEGER,
    nric VARCHAR(100),
    state VARCHAR(100),
    id_type VARCHAR(100),
    malay_and_no_malay VARCHAR(100),
    sst VARCHAR(100),
    msic_code VARCHAR(100),
    ttx VARCHAR(100),
    b_act_des_bn VARCHAR(100),
    b_act_des_en VARCHAR(100),
    street_3 VARCHAR(100),
    error_message VARCHAR(500),
    is_malaysia BOOLEAN,
    is_non_malaysian BOOLEAN,
    is_government BOOLEAN,
    is_portal_data_submit BOOLEAN,
    is_supplier BOOLEAN,
    qr_generated_timestamp TIMESTAMP,
    personal_tin VARCHAR(100),
    company_tin VARCHAR(100),
    business_reg_number VARCHAR(100),
    custom_credit DECIMAL(18, 4),
    is_general_partner BOOLEAN,
    internal_notes VARCHAR(500),
    nric_label VARCHAR(100),
    msic_code_id INTEGER,
    self_bill_for_supplier BOOLEAN
);

CREATE TABLE res_users (
    id INT PRIMARY KEY,
    company_id INTEGER,
    partner_id INTEGER,
    login VARCHAR(100),
    password VARCHAR(100),
    action_id INTEGER,
    signature VARCHAR(500),
    share BOOLEAN,
    totp_secret VARCHAR(100),
    notification_type VARCHAR(100),
    odoobot_state VARCHAR(100),
    odoobot_failed BOOLEAN,
    sale_team_id INTEGER,
    is_apping_user BOOLEAN,
    is_login_with_any_user BOOLEAN,
    user_group_id INTEGER,
    user_types VARCHAR(100),
    is_lhdn_admin BOOLEAN,
    mail_alert BOOLEAN,
    login_access INTEGER,
    locked_until TIMESTAMP,
    oauth_provider_id INTEGER,
    oauth_uid VARCHAR(100),
    oauth_access_token VARCHAR(100),
    website_id INTEGER,
    passcode VARCHAR(100),
    is_reg_tc BOOLEAN,
    is_user_tc BOOLEAN,
    is_company_owner BOOLEAN,
    sidebar_type VARCHAR(100)
);

Return only the SQL query without explanation.
SELECT user_id, AVG(amount_total) AS avg_order_value
FROM pos_order
GROUP BY user_id
ORDER BY avg_order_value DESC
LIMIT 5;",
"SCHEMA:
TABLE pos_order(id, date_order)
TABLE pos_order_line(id, order_id, product_id, qty)
TABLE product_product(id, product_tmpl_id)
TABLE product_template(id, name)

Prompt: You are an expert SQL developer.

Convert the following natural language request into a single SQL SELECT query.
Use only the schema provided below and do not make assumptions beyond it.

only take table and field from given scheme no other is allowed

Natural Language Request:
Display shift-wise sales performance for each user.

Database Schema:
CREATE TABLE pos_order (
    id INT PRIMARY KEY,
    user_id INTEGER,
    company_id INTEGER,
    pricelist_id INTEGER,
    partner_id INTEGER,
    sequence_number INTEGER,
    session_id INTEGER,
    config_id INTEGER,
    account_move INTEGER,
    procurement_group_id INTEGER,
    nb_print INTEGER,
    sale_journal INTEGER,
    fiscal_position_id INTEGER,
    name VARCHAR(100),
    last_order_preparation_change VARCHAR(100),
    state VARCHAR(100),
    pos_reference VARCHAR(100),
    ticket_code VARCHAR(100),
    shipping_date DATE,
    note VARCHAR(500),
    amount_tax DECIMAL(18, 4),
    amount_total DECIMAL(18, 4),
    amount_paid DECIMAL(18, 4),
    amount_return DECIMAL(18, 4),
    currency_rate DECIMAL(18, 4),
    tip_amount DECIMAL(18, 4),
    to_invoice BOOLEAN,
    is_tipped BOOLEAN,
    date_order TIMESTAMP,
    employee_id INTEGER,
    cashier VARCHAR(100),
    next_online_payment_amount DECIMAL(18, 4),
    crm_team_id INTEGER,
    debit_note_id INTEGER,
    invoice_id_for_debit INTEGER,
    reset_sequence INTEGER,
    my_invoice_status TEXT,
    invoice_type VARCHAR(100),
    reference_inv_id VARCHAR(500),
    response_msg VARCHAR(500),
    invalid_msg VARCHAR(500),
    is_submit_document BOOLEAN,
    is_debit_note BOOLEAN,
    is_credit_note BOOLEAN,
    is_consolidate BOOLEAN,
    validation_date_time TIMESTAMP,
    credit_check BOOLEAN,
    is_submit_in_pos BOOLEAN,
    is_hide_payment_debit BOOLEAN,
    is_hide_payment_credit BOOLEAN,
    formatted_date_order VARCHAR(100),
    is_hide_reverse_consolidation BOOLEAN,
    main_order_id INTEGER,
    main_order_pos_reference VARCHAR(100)
);

CREATE TABLE pos_order_line (
    id INT PRIMARY KEY,
    company_id INTEGER,
    product_id INTEGER,
    order_id INTEGER,
    refunded_orderline_id INTEGER,
    combo_parent_id INTEGER,
    name VARCHAR(100),
    notice VARCHAR(100),
    full_product_name VARCHAR(100),
    customer_note VARCHAR(100),
    price_unit DECIMAL(18, 4),
    qty DECIMAL(18, 4),
    price_subtotal DECIMAL(18, 4),
    price_subtotal_incl DECIMAL(18, 4),
    total_cost DECIMAL(18, 4),
    discount DECIMAL(18, 4),
    skip_change BOOLEAN,
    is_total_cost_computed BOOLEAN,
    price_extra FLOAT,
    sale_order_origin_id INTEGER,
    sale_order_line_id INTEGER,
    down_payment_details VARCHAR(500),
    discount_amount FLOAT,
    credit_note_discount FLOAT
);

CREATE TABLE product_product (
    id INT PRIMARY KEY,
    product_tmpl_id INTEGER,
    default_code VARCHAR(100),
    barcode VARCHAR(100),
    combination_indices VARCHAR(100),
    volume DECIMAL(18, 4),
    weight DECIMAL(18, 4),
    can_image_variant_1024_be_zoomed BOOLEAN,
    lot_properties_definition TEXT,
    classification_code_id INTEGER
);

CREATE TABLE product_template (
    id INT PRIMARY KEY,
    categ_id INTEGER,
    uom_id INTEGER,
    uom_po_id INTEGER,
    company_id INTEGER,
    detailed_type VARCHAR(100),
    type VARCHAR(100),
    default_code VARCHAR(100),
    priority VARCHAR(100),
    name VARCHAR(100),
    description VARCHAR(500),
    description_purchase TEXT,
    description_sale TEXT,
    product_properties TEXT,
    list_price DECIMAL(18, 4),
    volume DECIMAL(18, 4),
    weight DECIMAL(18, 4),
    sale_ok BOOLEAN,
    purchase_ok BOOLEAN,
    can_image_1024_be_zoomed BOOLEAN,
    has_configurable_attributes BOOLEAN,
    sale_delay INTEGER,
    tracking VARCHAR(100),
    description_picking TEXT,
    description_pickingout TEXT,
    description_pickingin TEXT,
    service_type VARCHAR(100),
    sale_line_warn VARCHAR(100),
    expense_policy VARCHAR(100),
    invoice_policy VARCHAR(100),
    sale_line_warn_msg VARCHAR(500),
    purchase_method VARCHAR(100),
    purchase_line_warn VARCHAR(100),
    purchase_line_warn_msg VARCHAR(500),
    available_in_pos BOOLEAN,
    to_weight BOOLEAN,
    classification_code_id INTEGER,
    unit_measurement_code_id INTEGER,
    service_tracking VARCHAR(100),
    product_classification VARCHAR(100),
    split_method_landed_cost VARCHAR(100),
    landed_cost_ok BOOLEAN,
    is_data_product BOOLEAN,
    alert_min_qty FLOAT
);

CREATE TABLE res_partner (
    id INT PRIMARY KEY,
    company_id INTEGER,
    name VARCHAR(100),
    title INTEGER,
    parent_id INTEGER,
    user_id INTEGER,
    state_id INTEGER,
    country_id INTEGER,
    industry_id INTEGER,
    commercial_partner_id INTEGER,
    complete_name VARCHAR(100),
    ref VARCHAR(100),
    lang VARCHAR(100),
    tz VARCHAR(100),
    vat VARCHAR(100),
    company_registry VARCHAR(100),
    website VARCHAR(100),
    function VARCHAR(100),
    type VARCHAR(100),
    street VARCHAR(100),
    street2 VARCHAR(100),
    zip VARCHAR(100),
    city VARCHAR(100),
    email VARCHAR(100),
    phone VARCHAR(100),
    mobile VARCHAR(100),
    commercial_company_name VARCHAR(100),
    company_name VARCHAR(100),
    date DATE,
    comment VARCHAR(500),
    partner_latitude DECIMAL(18, 4),
    partner_longitude DECIMAL(18, 4),
    employee BOOLEAN,
    is_company BOOLEAN,
    partner_share BOOLEAN,
    message_bounce INTEGER,
    email_normalized VARCHAR(100),
    signup_type VARCHAR(100),
    signup_expiration TIMESTAMP,
    signup_token VARCHAR(100),
    team_id INTEGER,
    phone_sanitized VARCHAR(100),
    supplier_rank INTEGER,
    customer_rank INTEGER,
    invoice_warn VARCHAR(100),
    invoice_warn_msg VARCHAR(500),
    debit_limit DECIMAL(18, 4),
    last_time_entries_checked TIMESTAMP,
    picking_warn VARCHAR(100),
    picking_warn_msg VARCHAR(500),
    ubl_cii_format VARCHAR(100),
    peppol_endpoint VARCHAR(100),
    peppol_eas VARCHAR(100),
    sale_warn VARCHAR(100),
    sale_warn_msg VARCHAR(500),
    payment_responsible_id INTEGER,
    latest_followup_sequence INTEGER,
    payment_next_action_date DATE,
    payment_note VARCHAR(500),
    payment_next_action VARCHAR(500),
    website_id INTEGER,
    is_published BOOLEAN,
    buyer_id INTEGER,
    purchase_warn VARCHAR(100),
    purchase_warn_msg VARCHAR(500),
    city_id INTEGER,
    post_code_id INTEGER,
    nric VARCHAR(100),
    state VARCHAR(100),
    id_type VARCHAR(100),
    malay_and_no_malay VARCHAR(100),
    sst VARCHAR(100),
    msic_code VARCHAR(100),
    ttx VARCHAR(100),
    b_act_des_bn VARCHAR(100),
    b_act_des_en VARCHAR(100),
    street_3 VARCHAR(100),
    error_message VARCHAR(500),
    is_malaysia BOOLEAN,
    is_non_malaysian BOOLEAN,
    is_government BOOLEAN,
    is_portal_data_submit BOOLEAN,
    is_supplier BOOLEAN,
    qr_generated_timestamp TIMESTAMP,
    personal_tin VARCHAR(100),
    company_tin VARCHAR(100),
    business_reg_number VARCHAR(100),
    custom_credit DECIMAL(18, 4),
    is_general_partner BOOLEAN,
    internal_notes VARCHAR(500),
    nric_label VARCHAR(100),
    msic_code_id INTEGER,
    self_bill_for_supplier BOOLEAN
);

CREATE TABLE res_users (
    id INT PRIMARY KEY,
    company_id INTEGER,
    partner_id INTEGER,
    login VARCHAR(100),
    password VARCHAR(100),
    action_id INTEGER,
    signature VARCHAR(500),
    share BOOLEAN,
    totp_secret VARCHAR(100),
    notification_type VARCHAR(100),
    odoobot_state VARCHAR(100),
    odoobot_failed BOOLEAN,
    sale_team_id INTEGER,
    is_apping_user BOOLEAN,
    is_login_with_any_user BOOLEAN,
    user_group_id INTEGER,
    user_types VARCHAR(100),
    is_lhdn_admin BOOLEAN,
    mail_alert BOOLEAN,
    login_access INTEGER,
    locked_until TIMESTAMP,
    oauth_provider_id INTEGER,
    oauth_uid VARCHAR(100),
    oauth_access_token VARCHAR(100),
    website_id INTEGER,
    passcode VARCHAR(100),
    is_reg_tc BOOLEAN,
    is_user_tc BOOLEAN,
    is_company_owner BOOLEAN,
    sidebar_type VARCHAR(100)
);

Return only the SQL query without explanation.
SELECT user_id, TO_CHAR(date_order, 'HH24') AS hour, SUM(amount_total) AS sales
FROM pos_order
GROUP BY user_id, TO_CHAR(date_order, 'HH24')
ORDER BY user_id, hour;",
"SCHEMA:
TABLE pos_order(id, date_order)
TABLE pos_order_line(id, order_id, product_id, qty)
TABLE product_product(id, product_tmpl_id)
TABLE product_template(id, name)

Prompt: You are an expert SQL developer.

Convert the following natural language request into a single SQL SELECT query.
Use only the schema provided below and do not make assumptions beyond it.

only take table and field from given scheme no other is allowed

Natural Language Request:
Which users have the highest number of voided transactions?

Database Schema:
CREATE TABLE pos_order (
    id INT PRIMARY KEY,
    user_id INTEGER,
    company_id INTEGER,
    pricelist_id INTEGER,
    partner_id INTEGER,
    sequence_number INTEGER,
    session_id INTEGER,
    config_id INTEGER,
    account_move INTEGER,
    procurement_group_id INTEGER,
    nb_print INTEGER,
    sale_journal INTEGER,
    fiscal_position_id INTEGER,
    name VARCHAR(100),
    last_order_preparation_change VARCHAR(100),
    state VARCHAR(100),
    pos_reference VARCHAR(100),
    ticket_code VARCHAR(100),
    shipping_date DATE,
    note VARCHAR(500),
    amount_tax DECIMAL(18, 4),
    amount_total DECIMAL(18, 4),
    amount_paid DECIMAL(18, 4),
    amount_return DECIMAL(18, 4),
    currency_rate DECIMAL(18, 4),
    tip_amount DECIMAL(18, 4),
    to_invoice BOOLEAN,
    is_tipped BOOLEAN,
    date_order TIMESTAMP,
    employee_id INTEGER,
    cashier VARCHAR(100),
    next_online_payment_amount DECIMAL(18, 4),
    crm_team_id INTEGER,
    debit_note_id INTEGER,
    invoice_id_for_debit INTEGER,
    reset_sequence INTEGER,
    my_invoice_status TEXT,
    invoice_type VARCHAR(100),
    reference_inv_id VARCHAR(500),
    response_msg VARCHAR(500),
    invalid_msg VARCHAR(500),
    is_submit_document BOOLEAN,
    is_debit_note BOOLEAN,
    is_credit_note BOOLEAN,
    is_consolidate BOOLEAN,
    validation_date_time TIMESTAMP,
    credit_check BOOLEAN,
    is_submit_in_pos BOOLEAN,
    is_hide_payment_debit BOOLEAN,
    is_hide_payment_credit BOOLEAN,
    formatted_date_order VARCHAR(100),
    is_hide_reverse_consolidation BOOLEAN,
    main_order_id INTEGER,
    main_order_pos_reference VARCHAR(100)
);

CREATE TABLE pos_order_line (
    id INT PRIMARY KEY,
    company_id INTEGER,
    product_id INTEGER,
    order_id INTEGER,
    refunded_orderline_id INTEGER,
    combo_parent_id INTEGER,
    name VARCHAR(100),
    notice VARCHAR(100),
    full_product_name VARCHAR(100),
    customer_note VARCHAR(100),
    price_unit DECIMAL(18, 4),
    qty DECIMAL(18, 4),
    price_subtotal DECIMAL(18, 4),
    price_subtotal_incl DECIMAL(18, 4),
    total_cost DECIMAL(18, 4),
    discount DECIMAL(18, 4),
    skip_change BOOLEAN,
    is_total_cost_computed BOOLEAN,
    price_extra FLOAT,
    sale_order_origin_id INTEGER,
    sale_order_line_id INTEGER,
    down_payment_details VARCHAR(500),
    discount_amount FLOAT,
    credit_note_discount FLOAT
);

CREATE TABLE product_product (
    id INT PRIMARY KEY,
    product_tmpl_id INTEGER,
    default_code VARCHAR(100),
    barcode VARCHAR(100),
    combination_indices VARCHAR(100),
    volume DECIMAL(18, 4),
    weight DECIMAL(18, 4),
    can_image_variant_1024_be_zoomed BOOLEAN,
    lot_properties_definition TEXT,
    classification_code_id INTEGER
);

CREATE TABLE product_template (
    id INT PRIMARY KEY,
    categ_id INTEGER,
    uom_id INTEGER,
    uom_po_id INTEGER,
    company_id INTEGER,
    detailed_type VARCHAR(100),
    type VARCHAR(100),
    default_code VARCHAR(100),
    priority VARCHAR(100),
    name VARCHAR(100),
    description VARCHAR(500),
    description_purchase TEXT,
    description_sale TEXT,
    product_properties TEXT,
    list_price DECIMAL(18, 4),
    volume DECIMAL(18, 4),
    weight DECIMAL(18, 4),
    sale_ok BOOLEAN,
    purchase_ok BOOLEAN,
    can_image_1024_be_zoomed BOOLEAN,
    has_configurable_attributes BOOLEAN,
    sale_delay INTEGER,
    tracking VARCHAR(100),
    description_picking TEXT,
    description_pickingout TEXT,
    description_pickingin TEXT,
    service_type VARCHAR(100),
    sale_line_warn VARCHAR(100),
    expense_policy VARCHAR(100),
    invoice_policy VARCHAR(100),
    sale_line_warn_msg VARCHAR(500),
    purchase_method VARCHAR(100),
    purchase_line_warn VARCHAR(100),
    purchase_line_warn_msg VARCHAR(500),
    available_in_pos BOOLEAN,
    to_weight BOOLEAN,
    classification_code_id INTEGER,
    unit_measurement_code_id INTEGER,
    service_tracking VARCHAR(100),
    product_classification VARCHAR(100),
    split_method_landed_cost VARCHAR(100),
    landed_cost_ok BOOLEAN,
    is_data_product BOOLEAN,
    alert_min_qty FLOAT
);

CREATE TABLE res_partner (
    id INT PRIMARY KEY,
    company_id INTEGER,
    name VARCHAR(100),
    title INTEGER,
    parent_id INTEGER,
    user_id INTEGER,
    state_id INTEGER,
    country_id INTEGER,
    industry_id INTEGER,
    commercial_partner_id INTEGER,
    complete_name VARCHAR(100),
    ref VARCHAR(100),
    lang VARCHAR(100),
    tz VARCHAR(100),
    vat VARCHAR(100),
    company_registry VARCHAR(100),
    website VARCHAR(100),
    function VARCHAR(100),
    type VARCHAR(100),
    street VARCHAR(100),
    street2 VARCHAR(100),
    zip VARCHAR(100),
    city VARCHAR(100),
    email VARCHAR(100),
    phone VARCHAR(100),
    mobile VARCHAR(100),
    commercial_company_name VARCHAR(100),
    company_name VARCHAR(100),
    date DATE,
    comment VARCHAR(500),
    partner_latitude DECIMAL(18, 4),
    partner_longitude DECIMAL(18, 4),
    employee BOOLEAN,
    is_company BOOLEAN,
    partner_share BOOLEAN,
    message_bounce INTEGER,
    email_normalized VARCHAR(100),
    signup_type VARCHAR(100),
    signup_expiration TIMESTAMP,
    signup_token VARCHAR(100),
    team_id INTEGER,
    phone_sanitized VARCHAR(100),
    supplier_rank INTEGER,
    customer_rank INTEGER,
    invoice_warn VARCHAR(100),
    invoice_warn_msg VARCHAR(500),
    debit_limit DECIMAL(18, 4),
    last_time_entries_checked TIMESTAMP,
    picking_warn VARCHAR(100),
    picking_warn_msg VARCHAR(500),
    ubl_cii_format VARCHAR(100),
    peppol_endpoint VARCHAR(100),
    peppol_eas VARCHAR(100),
    sale_warn VARCHAR(100),
    sale_warn_msg VARCHAR(500),
    payment_responsible_id INTEGER,
    latest_followup_sequence INTEGER,
    payment_next_action_date DATE,
    payment_note VARCHAR(500),
    payment_next_action VARCHAR(500),
    website_id INTEGER,
    is_published BOOLEAN,
    buyer_id INTEGER,
    purchase_warn VARCHAR(100),
    purchase_warn_msg VARCHAR(500),
    city_id INTEGER,
    post_code_id INTEGER,
    nric VARCHAR(100),
    state VARCHAR(100),
    id_type VARCHAR(100),
    malay_and_no_malay VARCHAR(100),
    sst VARCHAR(100),
    msic_code VARCHAR(100),
    ttx VARCHAR(100),
    b_act_des_bn VARCHAR(100),
    b_act_des_en VARCHAR(100),
    street_3 VARCHAR(100),
    error_message VARCHAR(500),
    is_malaysia BOOLEAN,
    is_non_malaysian BOOLEAN,
    is_government BOOLEAN,
    is_portal_data_submit BOOLEAN,
    is_supplier BOOLEAN,
    qr_generated_timestamp TIMESTAMP,
    personal_tin VARCHAR(100),
    company_tin VARCHAR(100),
    business_reg_number VARCHAR(100),
    custom_credit DECIMAL(18, 4),
    is_general_partner BOOLEAN,
    internal_notes VARCHAR(500),
    nric_label VARCHAR(100),
    msic_code_id INTEGER,
    self_bill_for_supplier BOOLEAN
);

CREATE TABLE res_users (
    id INT PRIMARY KEY,
    company_id INTEGER,
    partner_id INTEGER,
    login VARCHAR(100),
    password VARCHAR(100),
    action_id INTEGER,
    signature VARCHAR(500),
    share BOOLEAN,
    totp_secret VARCHAR(100),
    notification_type VARCHAR(100),
    odoobot_state VARCHAR(100),
    odoobot_failed BOOLEAN,
    sale_team_id INTEGER,
    is_apping_user BOOLEAN,
    is_login_with_any_user BOOLEAN,
    user_group_id INTEGER,
    user_types VARCHAR(100),
    is_lhdn_admin BOOLEAN,
    mail_alert BOOLEAN,
    login_access INTEGER,
    locked_until TIMESTAMP,
    oauth_provider_id INTEGER,
    oauth_uid VARCHAR(100),
    oauth_access_token VARCHAR(100),
    website_id INTEGER,
    passcode VARCHAR(100),
    is_reg_tc BOOLEAN,
    is_user_tc BOOLEAN,
    is_company_owner BOOLEAN,
    sidebar_type VARCHAR(100)
);

Return only the SQL query without explanation.
SELECT user_id, COUNT(*) AS voided_txns
FROM pos_order
WHERE state = 'cancel'
GROUP BY user_id
ORDER BY voided_txns DESC;",
"SCHEMA:
TABLE pos_order(id, date_order)
TABLE pos_order_line(id, order_id, product_id, qty)
TABLE product_product(id, product_tmpl_id)
TABLE product_template(id, name)

Prompt: You are an expert SQL developer.

Convert the following natural language request into a single SQL SELECT query.
Use only the schema provided below and do not make assumptions beyond it.

only take table and field from given scheme no other is allowed

Natural Language Request:
List users who processed more than 100 orders in the last 30 days.

Database Schema:
CREATE TABLE pos_order (
    id INT PRIMARY KEY,
    user_id INTEGER,
    company_id INTEGER,
    pricelist_id INTEGER,
    partner_id INTEGER,
    sequence_number INTEGER,
    session_id INTEGER,
    config_id INTEGER,
    account_move INTEGER,
    procurement_group_id INTEGER,
    nb_print INTEGER,
    sale_journal INTEGER,
    fiscal_position_id INTEGER,
    name VARCHAR(100),
    last_order_preparation_change VARCHAR(100),
    state VARCHAR(100),
    pos_reference VARCHAR(100),
    ticket_code VARCHAR(100),
    shipping_date DATE,
    note VARCHAR(500),
    amount_tax DECIMAL(18, 4),
    amount_total DECIMAL(18, 4),
    amount_paid DECIMAL(18, 4),
    amount_return DECIMAL(18, 4),
    currency_rate DECIMAL(18, 4),
    tip_amount DECIMAL(18, 4),
    to_invoice BOOLEAN,
    is_tipped BOOLEAN,
    date_order TIMESTAMP,
    employee_id INTEGER,
    cashier VARCHAR(100),
    next_online_payment_amount DECIMAL(18, 4),
    crm_team_id INTEGER,
    debit_note_id INTEGER,
    invoice_id_for_debit INTEGER,
    reset_sequence INTEGER,
    my_invoice_status TEXT,
    invoice_type VARCHAR(100),
    reference_inv_id VARCHAR(500),
    response_msg VARCHAR(500),
    invalid_msg VARCHAR(500),
    is_submit_document BOOLEAN,
    is_debit_note BOOLEAN,
    is_credit_note BOOLEAN,
    is_consolidate BOOLEAN,
    validation_date_time TIMESTAMP,
    credit_check BOOLEAN,
    is_submit_in_pos BOOLEAN,
    is_hide_payment_debit BOOLEAN,
    is_hide_payment_credit BOOLEAN,
    formatted_date_order VARCHAR(100),
    is_hide_reverse_consolidation BOOLEAN,
    main_order_id INTEGER,
    main_order_pos_reference VARCHAR(100)
);

CREATE TABLE pos_order_line (
    id INT PRIMARY KEY,
    company_id INTEGER,
    product_id INTEGER,
    order_id INTEGER,
    refunded_orderline_id INTEGER,
    combo_parent_id INTEGER,
    name VARCHAR(100),
    notice VARCHAR(100),
    full_product_name VARCHAR(100),
    customer_note VARCHAR(100),
    price_unit DECIMAL(18, 4),
    qty DECIMAL(18, 4),
    price_subtotal DECIMAL(18, 4),
    price_subtotal_incl DECIMAL(18, 4),
    total_cost DECIMAL(18, 4),
    discount DECIMAL(18, 4),
    skip_change BOOLEAN,
    is_total_cost_computed BOOLEAN,
    price_extra FLOAT,
    sale_order_origin_id INTEGER,
    sale_order_line_id INTEGER,
    down_payment_details VARCHAR(500),
    discount_amount FLOAT,
    credit_note_discount FLOAT
);

CREATE TABLE product_product (
    id INT PRIMARY KEY,
    product_tmpl_id INTEGER,
    default_code VARCHAR(100),
    barcode VARCHAR(100),
    combination_indices VARCHAR(100),
    volume DECIMAL(18, 4),
    weight DECIMAL(18, 4),
    can_image_variant_1024_be_zoomed BOOLEAN,
    lot_properties_definition TEXT,
    classification_code_id INTEGER
);

CREATE TABLE product_template (
    id INT PRIMARY KEY,
    categ_id INTEGER,
    uom_id INTEGER,
    uom_po_id INTEGER,
    company_id INTEGER,
    detailed_type VARCHAR(100),
    type VARCHAR(100),
    default_code VARCHAR(100),
    priority VARCHAR(100),
    name VARCHAR(100),
    description VARCHAR(500),
    description_purchase TEXT,
    description_sale TEXT,
    product_properties TEXT,
    list_price DECIMAL(18, 4),
    volume DECIMAL(18, 4),
    weight DECIMAL(18, 4),
    sale_ok BOOLEAN,
    purchase_ok BOOLEAN,
    can_image_1024_be_zoomed BOOLEAN,
    has_configurable_attributes BOOLEAN,
    sale_delay INTEGER,
    tracking VARCHAR(100),
    description_picking TEXT,
    description_pickingout TEXT,
    description_pickingin TEXT,
    service_type VARCHAR(100),
    sale_line_warn VARCHAR(100),
    expense_policy VARCHAR(100),
    invoice_policy VARCHAR(100),
    sale_line_warn_msg VARCHAR(500),
    purchase_method VARCHAR(100),
    purchase_line_warn VARCHAR(100),
    purchase_line_warn_msg VARCHAR(500),
    available_in_pos BOOLEAN,
    to_weight BOOLEAN,
    classification_code_id INTEGER,
    unit_measurement_code_id INTEGER,
    service_tracking VARCHAR(100),
    product_classification VARCHAR(100),
    split_method_landed_cost VARCHAR(100),
    landed_cost_ok BOOLEAN,
    is_data_product BOOLEAN,
    alert_min_qty FLOAT
);

CREATE TABLE res_partner (
    id INT PRIMARY KEY,
    company_id INTEGER,
    name VARCHAR(100),
    title INTEGER,
    parent_id INTEGER,
    user_id INTEGER,
    state_id INTEGER,
    country_id INTEGER,
    industry_id INTEGER,
    commercial_partner_id INTEGER,
    complete_name VARCHAR(100),
    ref VARCHAR(100),
    lang VARCHAR(100),
    tz VARCHAR(100),
    vat VARCHAR(100),
    company_registry VARCHAR(100),
    website VARCHAR(100),
    function VARCHAR(100),
    type VARCHAR(100),
    street VARCHAR(100),
    street2 VARCHAR(100),
    zip VARCHAR(100),
    city VARCHAR(100),
    email VARCHAR(100),
    phone VARCHAR(100),
    mobile VARCHAR(100),
    commercial_company_name VARCHAR(100),
    company_name VARCHAR(100),
    date DATE,
    comment VARCHAR(500),
    partner_latitude DECIMAL(18, 4),
    partner_longitude DECIMAL(18, 4),
    employee BOOLEAN,
    is_company BOOLEAN,
    partner_share BOOLEAN,
    message_bounce INTEGER,
    email_normalized VARCHAR(100),
    signup_type VARCHAR(100),
    signup_expiration TIMESTAMP,
    signup_token VARCHAR(100),
    team_id INTEGER,
    phone_sanitized VARCHAR(100),
    supplier_rank INTEGER,
    customer_rank INTEGER,
    invoice_warn VARCHAR(100),
    invoice_warn_msg VARCHAR(500),
    debit_limit DECIMAL(18, 4),
    last_time_entries_checked TIMESTAMP,
    picking_warn VARCHAR(100),
    picking_warn_msg VARCHAR(500),
    ubl_cii_format VARCHAR(100),
    peppol_endpoint VARCHAR(100),
    peppol_eas VARCHAR(100),
    sale_warn VARCHAR(100),
    sale_warn_msg VARCHAR(500),
    payment_responsible_id INTEGER,
    latest_followup_sequence INTEGER,
    payment_next_action_date DATE,
    payment_note VARCHAR(500),
    payment_next_action VARCHAR(500),
    website_id INTEGER,
    is_published BOOLEAN,
    buyer_id INTEGER,
    purchase_warn VARCHAR(100),
    purchase_warn_msg VARCHAR(500),
    city_id INTEGER,
    post_code_id INTEGER,
    nric VARCHAR(100),
    state VARCHAR(100),
    id_type VARCHAR(100),
    malay_and_no_malay VARCHAR(100),
    sst VARCHAR(100),
    msic_code VARCHAR(100),
    ttx VARCHAR(100),
    b_act_des_bn VARCHAR(100),
    b_act_des_en VARCHAR(100),
    street_3 VARCHAR(100),
    error_message VARCHAR(500),
    is_malaysia BOOLEAN,
    is_non_malaysian BOOLEAN,
    is_government BOOLEAN,
    is_portal_data_submit BOOLEAN,
    is_supplier BOOLEAN,
    qr_generated_timestamp TIMESTAMP,
    personal_tin VARCHAR(100),
    company_tin VARCHAR(100),
    business_reg_number VARCHAR(100),
    custom_credit DECIMAL(18, 4),
    is_general_partner BOOLEAN,
    internal_notes VARCHAR(500),
    nric_label VARCHAR(100),
    msic_code_id INTEGER,
    self_bill_for_supplier BOOLEAN
);

CREATE TABLE res_users (
    id INT PRIMARY KEY,
    company_id INTEGER,
    partner_id INTEGER,
    login VARCHAR(100),
    password VARCHAR(100),
    action_id INTEGER,
    signature VARCHAR(500),
    share BOOLEAN,
    totp_secret VARCHAR(100),
    notification_type VARCHAR(100),
    odoobot_state VARCHAR(100),
    odoobot_failed BOOLEAN,
    sale_team_id INTEGER,
    is_apping_user BOOLEAN,
    is_login_with_any_user BOOLEAN,
    user_group_id INTEGER,
    user_types VARCHAR(100),
    is_lhdn_admin BOOLEAN,
    mail_alert BOOLEAN,
    login_access INTEGER,
    locked_until TIMESTAMP,
    oauth_provider_id INTEGER,
    oauth_uid VARCHAR(100),
    oauth_access_token VARCHAR(100),
    website_id INTEGER,
    passcode VARCHAR(100),
    is_reg_tc BOOLEAN,
    is_user_tc BOOLEAN,
    is_company_owner BOOLEAN,
    sidebar_type VARCHAR(100)
);

Return only the SQL query without explanation.
SELECT user_id, COUNT(*) AS order_count
FROM pos_order
WHERE date_order >= CURRENT_DATE - INTERVAL '30 days'
GROUP BY user_id
HAVING COUNT(*) > 100;",
"SCHEMA:
TABLE pos_order(id, date_order)
TABLE pos_order_line(id, order_id, product_id, qty)
TABLE product_product(id, product_tmpl_id)
TABLE product_template(id, name)

Prompt: You are an expert SQL developer.

Convert the following natural language request into a single SQL SELECT query.
Use only the schema provided below and do not make assumptions beyond it.

only take table and field from given scheme no other is allowed

Natural Language Request:
Show login activity of all users for the past week.

Database Schema:
CREATE TABLE pos_order (
    id INT PRIMARY KEY,
    user_id INTEGER,
    company_id INTEGER,
    pricelist_id INTEGER,
    partner_id INTEGER,
    sequence_number INTEGER,
    session_id INTEGER,
    config_id INTEGER,
    account_move INTEGER,
    procurement_group_id INTEGER,
    nb_print INTEGER,
    sale_journal INTEGER,
    fiscal_position_id INTEGER,
    name VARCHAR(100),
    last_order_preparation_change VARCHAR(100),
    state VARCHAR(100),
    pos_reference VARCHAR(100),
    ticket_code VARCHAR(100),
    shipping_date DATE,
    note VARCHAR(500),
    amount_tax DECIMAL(18, 4),
    amount_total DECIMAL(18, 4),
    amount_paid DECIMAL(18, 4),
    amount_return DECIMAL(18, 4),
    currency_rate DECIMAL(18, 4),
    tip_amount DECIMAL(18, 4),
    to_invoice BOOLEAN,
    is_tipped BOOLEAN,
    date_order TIMESTAMP,
    employee_id INTEGER,
    cashier VARCHAR(100),
    next_online_payment_amount DECIMAL(18, 4),
    crm_team_id INTEGER,
    debit_note_id INTEGER,
    invoice_id_for_debit INTEGER,
    reset_sequence INTEGER,
    my_invoice_status TEXT,
    invoice_type VARCHAR(100),
    reference_inv_id VARCHAR(500),
    response_msg VARCHAR(500),
    invalid_msg VARCHAR(500),
    is_submit_document BOOLEAN,
    is_debit_note BOOLEAN,
    is_credit_note BOOLEAN,
    is_consolidate BOOLEAN,
    validation_date_time TIMESTAMP,
    credit_check BOOLEAN,
    is_submit_in_pos BOOLEAN,
    is_hide_payment_debit BOOLEAN,
    is_hide_payment_credit BOOLEAN,
    formatted_date_order VARCHAR(100),
    is_hide_reverse_consolidation BOOLEAN,
    main_order_id INTEGER,
    main_order_pos_reference VARCHAR(100)
);

CREATE TABLE pos_order_line (
    id INT PRIMARY KEY,
    company_id INTEGER,
    product_id INTEGER,
    order_id INTEGER,
    refunded_orderline_id INTEGER,
    combo_parent_id INTEGER,
    name VARCHAR(100),
    notice VARCHAR(100),
    full_product_name VARCHAR(100),
    customer_note VARCHAR(100),
    price_unit DECIMAL(18, 4),
    qty DECIMAL(18, 4),
    price_subtotal DECIMAL(18, 4),
    price_subtotal_incl DECIMAL(18, 4),
    total_cost DECIMAL(18, 4),
    discount DECIMAL(18, 4),
    skip_change BOOLEAN,
    is_total_cost_computed BOOLEAN,
    price_extra FLOAT,
    sale_order_origin_id INTEGER,
    sale_order_line_id INTEGER,
    down_payment_details VARCHAR(500),
    discount_amount FLOAT,
    credit_note_discount FLOAT
);

CREATE TABLE product_product (
    id INT PRIMARY KEY,
    product_tmpl_id INTEGER,
    default_code VARCHAR(100),
    barcode VARCHAR(100),
    combination_indices VARCHAR(100),
    volume DECIMAL(18, 4),
    weight DECIMAL(18, 4),
    can_image_variant_1024_be_zoomed BOOLEAN,
    lot_properties_definition TEXT,
    classification_code_id INTEGER
);

CREATE TABLE product_template (
    id INT PRIMARY KEY,
    categ_id INTEGER,
    uom_id INTEGER,
    uom_po_id INTEGER,
    company_id INTEGER,
    detailed_type VARCHAR(100),
    type VARCHAR(100),
    default_code VARCHAR(100),
    priority VARCHAR(100),
    name VARCHAR(100),
    description VARCHAR(500),
    description_purchase TEXT,
    description_sale TEXT,
    product_properties TEXT,
    list_price DECIMAL(18, 4),
    volume DECIMAL(18, 4),
    weight DECIMAL(18, 4),
    sale_ok BOOLEAN,
    purchase_ok BOOLEAN,
    can_image_1024_be_zoomed BOOLEAN,
    has_configurable_attributes BOOLEAN,
    sale_delay INTEGER,
    tracking VARCHAR(100),
    description_picking TEXT,
    description_pickingout TEXT,
    description_pickingin TEXT,
    service_type VARCHAR(100),
    sale_line_warn VARCHAR(100),
    expense_policy VARCHAR(100),
    invoice_policy VARCHAR(100),
    sale_line_warn_msg VARCHAR(500),
    purchase_method VARCHAR(100),
    purchase_line_warn VARCHAR(100),
    purchase_line_warn_msg VARCHAR(500),
    available_in_pos BOOLEAN,
    to_weight BOOLEAN,
    classification_code_id INTEGER,
    unit_measurement_code_id INTEGER,
    service_tracking VARCHAR(100),
    product_classification VARCHAR(100),
    split_method_landed_cost VARCHAR(100),
    landed_cost_ok BOOLEAN,
    is_data_product BOOLEAN,
    alert_min_qty FLOAT
);

CREATE TABLE res_partner (
    id INT PRIMARY KEY,
    company_id INTEGER,
    name VARCHAR(100),
    title INTEGER,
    parent_id INTEGER,
    user_id INTEGER,
    state_id INTEGER,
    country_id INTEGER,
    industry_id INTEGER,
    commercial_partner_id INTEGER,
    complete_name VARCHAR(100),
    ref VARCHAR(100),
    lang VARCHAR(100),
    tz VARCHAR(100),
    vat VARCHAR(100),
    company_registry VARCHAR(100),
    website VARCHAR(100),
    function VARCHAR(100),
    type VARCHAR(100),
    street VARCHAR(100),
    street2 VARCHAR(100),
    zip VARCHAR(100),
    city VARCHAR(100),
    email VARCHAR(100),
    phone VARCHAR(100),
    mobile VARCHAR(100),
    commercial_company_name VARCHAR(100),
    company_name VARCHAR(100),
    date DATE,
    comment VARCHAR(500),
    partner_latitude DECIMAL(18, 4),
    partner_longitude DECIMAL(18, 4),
    employee BOOLEAN,
    is_company BOOLEAN,
    partner_share BOOLEAN,
    message_bounce INTEGER,
    email_normalized VARCHAR(100),
    signup_type VARCHAR(100),
    signup_expiration TIMESTAMP,
    signup_token VARCHAR(100),
    team_id INTEGER,
    phone_sanitized VARCHAR(100),
    supplier_rank INTEGER,
    customer_rank INTEGER,
    invoice_warn VARCHAR(100),
    invoice_warn_msg VARCHAR(500),
    debit_limit DECIMAL(18, 4),
    last_time_entries_checked TIMESTAMP,
    picking_warn VARCHAR(100),
    picking_warn_msg VARCHAR(500),
    ubl_cii_format VARCHAR(100),
    peppol_endpoint VARCHAR(100),
    peppol_eas VARCHAR(100),
    sale_warn VARCHAR(100),
    sale_warn_msg VARCHAR(500),
    payment_responsible_id INTEGER,
    latest_followup_sequence INTEGER,
    payment_next_action_date DATE,
    payment_note VARCHAR(500),
    payment_next_action VARCHAR(500),
    website_id INTEGER,
    is_published BOOLEAN,
    buyer_id INTEGER,
    purchase_warn VARCHAR(100),
    purchase_warn_msg VARCHAR(500),
    city_id INTEGER,
    post_code_id INTEGER,
    nric VARCHAR(100),
    state VARCHAR(100),
    id_type VARCHAR(100),
    malay_and_no_malay VARCHAR(100),
    sst VARCHAR(100),
    msic_code VARCHAR(100),
    ttx VARCHAR(100),
    b_act_des_bn VARCHAR(100),
    b_act_des_en VARCHAR(100),
    street_3 VARCHAR(100),
    error_message VARCHAR(500),
    is_malaysia BOOLEAN,
    is_non_malaysian BOOLEAN,
    is_government BOOLEAN,
    is_portal_data_submit BOOLEAN,
    is_supplier BOOLEAN,
    qr_generated_timestamp TIMESTAMP,
    personal_tin VARCHAR(100),
    company_tin VARCHAR(100),
    business_reg_number VARCHAR(100),
    custom_credit DECIMAL(18, 4),
    is_general_partner BOOLEAN,
    internal_notes VARCHAR(500),
    nric_label VARCHAR(100),
    msic_code_id INTEGER,
    self_bill_for_supplier BOOLEAN
);

CREATE TABLE res_users (
    id INT PRIMARY KEY,
    company_id INTEGER,
    partner_id INTEGER,
    login VARCHAR(100),
    password VARCHAR(100),
    action_id INTEGER,
    signature VARCHAR(500),
    share BOOLEAN,
    totp_secret VARCHAR(100),
    notification_type VARCHAR(100),
    odoobot_state VARCHAR(100),
    odoobot_failed BOOLEAN,
    sale_team_id INTEGER,
    is_apping_user BOOLEAN,
    is_login_with_any_user BOOLEAN,
    user_group_id INTEGER,
    user_types VARCHAR(100),
    is_lhdn_admin BOOLEAN,
    mail_alert BOOLEAN,
    login_access INTEGER,
    locked_until TIMESTAMP,
    oauth_provider_id INTEGER,
    oauth_uid VARCHAR(100),
    oauth_access_token VARCHAR(100),
    website_id INTEGER,
    passcode VARCHAR(100),
    is_reg_tc BOOLEAN,
    is_user_tc BOOLEAN,
    is_company_owner BOOLEAN,
    sidebar_type VARCHAR(100)
);

Return only the SQL query without explanation.
SELECT id, login, last_login
FROM res_users
WHERE last_login >= CURRENT_DATE - INTERVAL '7 days';",
"SCHEMA:
TABLE pos_order(id, date_order)
TABLE pos_order_line(id, order_id, product_id, qty)
TABLE product_product(id, product_tmpl_id)
TABLE product_template(id, name)

Prompt: You are an expert SQL developer.

Convert the following natural language request into a single SQL SELECT query.
Use only the schema provided below and do not make assumptions beyond it.

only take table and field from given scheme no other is allowed

Natural Language Request:
Who are the most efficient users based on average order processing time?

Database Schema:
CREATE TABLE pos_order (
    id INT PRIMARY KEY,
    user_id INTEGER,
    company_id INTEGER,
    pricelist_id INTEGER,
    partner_id INTEGER,
    sequence_number INTEGER,
    session_id INTEGER,
    config_id INTEGER,
    account_move INTEGER,
    procurement_group_id INTEGER,
    nb_print INTEGER,
    sale_journal INTEGER,
    fiscal_position_id INTEGER,
    name VARCHAR(100),
    last_order_preparation_change VARCHAR(100),
    state VARCHAR(100),
    pos_reference VARCHAR(100),
    ticket_code VARCHAR(100),
    shipping_date DATE,
    note VARCHAR(500),
    amount_tax DECIMAL(18, 4),
    amount_total DECIMAL(18, 4),
    amount_paid DECIMAL(18, 4),
    amount_return DECIMAL(18, 4),
    currency_rate DECIMAL(18, 4),
    tip_amount DECIMAL(18, 4),
    to_invoice BOOLEAN,
    is_tipped BOOLEAN,
    date_order TIMESTAMP,
    employee_id INTEGER,
    cashier VARCHAR(100),
    next_online_payment_amount DECIMAL(18, 4),
    crm_team_id INTEGER,
    debit_note_id INTEGER,
    invoice_id_for_debit INTEGER,
    reset_sequence INTEGER,
    my_invoice_status TEXT,
    invoice_type VARCHAR(100),
    reference_inv_id VARCHAR(500),
    response_msg VARCHAR(500),
    invalid_msg VARCHAR(500),
    is_submit_document BOOLEAN,
    is_debit_note BOOLEAN,
    is_credit_note BOOLEAN,
    is_consolidate BOOLEAN,
    validation_date_time TIMESTAMP,
    credit_check BOOLEAN,
    is_submit_in_pos BOOLEAN,
    is_hide_payment_debit BOOLEAN,
    is_hide_payment_credit BOOLEAN,
    formatted_date_order VARCHAR(100),
    is_hide_reverse_consolidation BOOLEAN,
    main_order_id INTEGER,
    main_order_pos_reference VARCHAR(100)
);

CREATE TABLE pos_order_line (
    id INT PRIMARY KEY,
    company_id INTEGER,
    product_id INTEGER,
    order_id INTEGER,
    refunded_orderline_id INTEGER,
    combo_parent_id INTEGER,
    name VARCHAR(100),
    notice VARCHAR(100),
    full_product_name VARCHAR(100),
    customer_note VARCHAR(100),
    price_unit DECIMAL(18, 4),
    qty DECIMAL(18, 4),
    price_subtotal DECIMAL(18, 4),
    price_subtotal_incl DECIMAL(18, 4),
    total_cost DECIMAL(18, 4),
    discount DECIMAL(18, 4),
    skip_change BOOLEAN,
    is_total_cost_computed BOOLEAN,
    price_extra FLOAT,
    sale_order_origin_id INTEGER,
    sale_order_line_id INTEGER,
    down_payment_details VARCHAR(500),
    discount_amount FLOAT,
    credit_note_discount FLOAT
);

CREATE TABLE product_product (
    id INT PRIMARY KEY,
    product_tmpl_id INTEGER,
    default_code VARCHAR(100),
    barcode VARCHAR(100),
    combination_indices VARCHAR(100),
    volume DECIMAL(18, 4),
    weight DECIMAL(18, 4),
    can_image_variant_1024_be_zoomed BOOLEAN,
    lot_properties_definition TEXT,
    classification_code_id INTEGER
);

CREATE TABLE product_template (
    id INT PRIMARY KEY,
    categ_id INTEGER,
    uom_id INTEGER,
    uom_po_id INTEGER,
    company_id INTEGER,
    detailed_type VARCHAR(100),
    type VARCHAR(100),
    default_code VARCHAR(100),
    priority VARCHAR(100),
    name VARCHAR(100),
    description VARCHAR(500),
    description_purchase TEXT,
    description_sale TEXT,
    product_properties TEXT,
    list_price DECIMAL(18, 4),
    volume DECIMAL(18, 4),
    weight DECIMAL(18, 4),
    sale_ok BOOLEAN,
    purchase_ok BOOLEAN,
    can_image_1024_be_zoomed BOOLEAN,
    has_configurable_attributes BOOLEAN,
    sale_delay INTEGER,
    tracking VARCHAR(100),
    description_picking TEXT,
    description_pickingout TEXT,
    description_pickingin TEXT,
    service_type VARCHAR(100),
    sale_line_warn VARCHAR(100),
    expense_policy VARCHAR(100),
    invoice_policy VARCHAR(100),
    sale_line_warn_msg VARCHAR(500),
    purchase_method VARCHAR(100),
    purchase_line_warn VARCHAR(100),
    purchase_line_warn_msg VARCHAR(500),
    available_in_pos BOOLEAN,
    to_weight BOOLEAN,
    classification_code_id INTEGER,
    unit_measurement_code_id INTEGER,
    service_tracking VARCHAR(100),
    product_classification VARCHAR(100),
    split_method_landed_cost VARCHAR(100),
    landed_cost_ok BOOLEAN,
    is_data_product BOOLEAN,
    alert_min_qty FLOAT
);

CREATE TABLE res_partner (
    id INT PRIMARY KEY,
    company_id INTEGER,
    name VARCHAR(100),
    title INTEGER,
    parent_id INTEGER,
    user_id INTEGER,
    state_id INTEGER,
    country_id INTEGER,
    industry_id INTEGER,
    commercial_partner_id INTEGER,
    complete_name VARCHAR(100),
    ref VARCHAR(100),
    lang VARCHAR(100),
    tz VARCHAR(100),
    vat VARCHAR(100),
    company_registry VARCHAR(100),
    website VARCHAR(100),
    function VARCHAR(100),
    type VARCHAR(100),
    street VARCHAR(100),
    street2 VARCHAR(100),
    zip VARCHAR(100),
    city VARCHAR(100),
    email VARCHAR(100),
    phone VARCHAR(100),
    mobile VARCHAR(100),
    commercial_company_name VARCHAR(100),
    company_name VARCHAR(100),
    date DATE,
    comment VARCHAR(500),
    partner_latitude DECIMAL(18, 4),
    partner_longitude DECIMAL(18, 4),
    employee BOOLEAN,
    is_company BOOLEAN,
    partner_share BOOLEAN,
    message_bounce INTEGER,
    email_normalized VARCHAR(100),
    signup_type VARCHAR(100),
    signup_expiration TIMESTAMP,
    signup_token VARCHAR(100),
    team_id INTEGER,
    phone_sanitized VARCHAR(100),
    supplier_rank INTEGER,
    customer_rank INTEGER,
    invoice_warn VARCHAR(100),
    invoice_warn_msg VARCHAR(500),
    debit_limit DECIMAL(18, 4),
    last_time_entries_checked TIMESTAMP,
    picking_warn VARCHAR(100),
    picking_warn_msg VARCHAR(500),
    ubl_cii_format VARCHAR(100),
    peppol_endpoint VARCHAR(100),
    peppol_eas VARCHAR(100),
    sale_warn VARCHAR(100),
    sale_warn_msg VARCHAR(500),
    payment_responsible_id INTEGER,
    latest_followup_sequence INTEGER,
    payment_next_action_date DATE,
    payment_note VARCHAR(500),
    payment_next_action VARCHAR(500),
    website_id INTEGER,
    is_published BOOLEAN,
    buyer_id INTEGER,
    purchase_warn VARCHAR(100),
    purchase_warn_msg VARCHAR(500),
    city_id INTEGER,
    post_code_id INTEGER,
    nric VARCHAR(100),
    state VARCHAR(100),
    id_type VARCHAR(100),
    malay_and_no_malay VARCHAR(100),
    sst VARCHAR(100),
    msic_code VARCHAR(100),
    ttx VARCHAR(100),
    b_act_des_bn VARCHAR(100),
    b_act_des_en VARCHAR(100),
    street_3 VARCHAR(100),
    error_message VARCHAR(500),
    is_malaysia BOOLEAN,
    is_non_malaysian BOOLEAN,
    is_government BOOLEAN,
    is_portal_data_submit BOOLEAN,
    is_supplier BOOLEAN,
    qr_generated_timestamp TIMESTAMP,
    personal_tin VARCHAR(100),
    company_tin VARCHAR(100),
    business_reg_number VARCHAR(100),
    custom_credit DECIMAL(18, 4),
    is_general_partner BOOLEAN,
    internal_notes VARCHAR(500),
    nric_label VARCHAR(100),
    msic_code_id INTEGER,
    self_bill_for_supplier BOOLEAN
);

CREATE TABLE res_users (
    id INT PRIMARY KEY,
    company_id INTEGER,
    partner_id INTEGER,
    login VARCHAR(100),
    password VARCHAR(100),
    action_id INTEGER,
    signature VARCHAR(500),
    share BOOLEAN,
    totp_secret VARCHAR(100),
    notification_type VARCHAR(100),
    odoobot_state VARCHAR(100),
    odoobot_failed BOOLEAN,
    sale_team_id INTEGER,
    is_apping_user BOOLEAN,
    is_login_with_any_user BOOLEAN,
    user_group_id INTEGER,
    user_types VARCHAR(100),
    is_lhdn_admin BOOLEAN,
    mail_alert BOOLEAN,
    login_access INTEGER,
    locked_until TIMESTAMP,
    oauth_provider_id INTEGER,
    oauth_uid VARCHAR(100),
    oauth_access_token VARCHAR(100),
    website_id INTEGER,
    passcode VARCHAR(100),
    is_reg_tc BOOLEAN,
    is_user_tc BOOLEAN,
    is_company_owner BOOLEAN,
    sidebar_type VARCHAR(100)
);

Return only the SQL query without explanation.
SELECT user_id, AVG(EXTRACT(EPOCH FROM (validation_date_time - date_order))) AS avg_processing_time
FROM pos_order
WHERE validation_date_time IS NOT NULL
GROUP BY user_id
ORDER BY avg_processing_time ASC;",
